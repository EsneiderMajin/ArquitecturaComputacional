

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 05 16:15:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.36
    50                           ; Generated 28/01/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataBANK0
    86  001CE2                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for _keypad
    90  001CE2  31                 	db	49
    91  001CE3  32                 	db	50
    92  001CE4  33                 	db	51
    93  001CE5  2F                 	db	47
    94  001CE6  34                 	db	52
    95  001CE7  35                 	db	53
    96  001CE8  36                 	db	54
    97  001CE9  2A                 	db	42
    98  001CEA  37                 	db	55
    99  001CEB  38                 	db	56
   100  001CEC  39                 	db	57
   101  001CED  2D                 	db	45
   102  001CEE  2A                 	db	42
   103  001CEF  30                 	db	48
   104  001CF0  23                 	db	35
   105  001CF1  2B                 	db	43
   106                           
   107                           ;initializer for keypad_getkey@F3209
   108  001CF2  31                 	db	49
   109  001CF3  32                 	db	50
   110  001CF4  33                 	db	51
   111  001CF5  41                 	db	65
   112  001CF6  34                 	db	52
   113  001CF7  35                 	db	53
   114  001CF8  36                 	db	54
   115  001CF9  42                 	db	66
   116  001CFA  37                 	db	55
   117  001CFB  38                 	db	56
   118  001CFC  39                 	db	57
   119  001CFD  43                 	db	67
   120  001CFE  2A                 	db	42
   121  001CFF  30                 	db	48
   122  001D00  23                 	db	35
   123  001D01  44                 	db	68
   124  0000                     _TRISC	set	3988
   125  0000                     _LATC0	set	31832
   126  0000                     _PORTDbits	set	3971
   127  0000                     _LATDbits	set	3980
   128  0000                     _LATC7	set	31839
   129  0000                     _LATE2	set	31850
   130  0000                     _LATE1	set	31849
   131  0000                     _RBPU	set	32655
   132  0000                     _LATD1	set	31841
   133  0000                     _LATD0	set	31840
   134  0000                     _PORTAbits	set	3968
   135  0000                     _PORTB	set	3969
   136  0000                     _PORTD	set	3971
   137  0000                     _LATD	set	3980
   138  0000                     _TRISD	set	3989
   139  0000                     _ADCON1	set	4033
   140  0000                     _OSCCON	set	4051
   141  0000                     _TRISE	set	3990
   142  0000                     _INTCON2bits	set	4081
   143  0000                     _TRISAbits	set	3986
   144  0000                     _TRISB	set	3987
   145  0000                     _LATE0	set	31848
   146  0000                     _LATB	set	3978
   147  0000                     _LATA0	set	31816
   148                           
   149                           	psect	smallconst
   150  000800                     __psmallconst:
   151                           	callstack 0
   152  000800  00                 	db	0
   153  000801                     STR_1:
   154  000801  54                 	db	84	;'T'
   155  000802  65                 	db	101	;'e'
   156  000803  6D                 	db	109	;'m'
   157  000804  70                 	db	112	;'p'
   158  000805  65                 	db	101	;'e'
   159  000806  2E                 	db	46
   160  000807  20                 	db	32
   161  000808  4F                 	db	79	;'O'
   162  000809  70                 	db	112	;'p'
   163  00080A  74                 	db	116	;'t'
   164  00080B  69                 	db	105	;'i'
   165  00080C  6D                 	db	109	;'m'
   166  00080D  61                 	db	97	;'a'
   167  00080E  00                 	db	0
   168  00080F                     STR_2:
   169  00080F  48                 	db	72	;'H'
   170  000810  75                 	db	117	;'u'
   171  000811  6D                 	db	109	;'m'
   172  000812  65                 	db	101	;'e'
   173  000813  2E                 	db	46
   174  000814  20                 	db	32
   175  000815  4F                 	db	79	;'O'
   176  000816  70                 	db	112	;'p'
   177  000817  74                 	db	116	;'t'
   178  000818  69                 	db	105	;'i'
   179  000819  6D                 	db	109	;'m'
   180  00081A  61                 	db	97	;'a'
   181  00081B  00                 	db	0
   182  00081C                     STR_8:
   183  00081C  43                 	db	67	;'C'
   184  00081D  20                 	db	32
   185  00081E  54                 	db	84	;'T'
   186  00081F  65                 	db	101	;'e'
   187  000820  6D                 	db	109	;'m'
   188  000821  70                 	db	112	;'p'
   189  000822  65                 	db	101	;'e'
   190  000823  2E                 	db	46
   191  000824  00                 	db	0
   192  000825                     STR_5:
   193  000825  20                 	db	32
   194  000826  20                 	db	32
   195  000827  48                 	db	72	;'H'
   196  000828  75                 	db	117	;'u'
   197  000829  6D                 	db	109	;'m'
   198  00082A  65                 	db	101	;'e'
   199  00082B  2E                 	db	46
   200  00082C  00                 	db	0
   201  00082D                     STR_4:
   202  00082D  2E                 	db	46
   203  00082E  25                 	db	37
   204  00082F  64                 	db	100	;'d'
   205  000830  00                 	db	0
   206  000831  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211  001BC6                     __pcinit:
   212                           	callstack 0
   213  001BC6                     start_initialization:
   214                           	callstack 0
   215  001BC6                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (32 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220  001BC6  0EE2               	movlw	low __pidataBANK0
   221  001BC8  6EF6               	movwf	tblptrl,c
   222  001BCA  0E1C               	movlw	high __pidataBANK0
   223  001BCC  6EF7               	movwf	tblptrh,c
   224  001BCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225  001BD0  6EF8               	movwf	tblptru,c
   226  001BD2  EE00  F0AF         	lfsr	0,__pdataBANK0
   227  001BD6  EE10 F020          	lfsr	1,32
   228  001BDA                     copy_data0:
   229  001BDA  0009               	tblrd		*+
   230  001BDC  CFF5 FFEE          	movff	tablat,postinc0
   231  001BE0  50E5               	movf	postdec1,w,c
   232  001BE2  50E1               	movf	fsr1l,w,c
   233  001BE4  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to BANK0 (43 bytes)
   236  001BE6  EE00  F060         	lfsr	0,__pbssBANK0
   237  001BEA  0E2B               	movlw	43
   238  001BEC                     clear_0:
   239  001BEC  6AEE               	clrf	postinc0,c
   240  001BEE  06E8               	decf	wreg,f,c
   241  001BF0  E1FD               	bnz	clear_0
   242  001BF2                     end_of_initialization:
   243                           	callstack 0
   244  001BF2                     __end_of__initialization:
   245                           	callstack 0
   246  001BF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   247  001BF4  6EF8               	movwf	tblptru,c
   248  001BF6  0100               	movlb	0
   249  001BF8  EF8A  F005         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	callstack 0
   254  000060                     _nout:
   255                           	callstack 0
   256  000060                     	ds	2
   257  000062                     _width:
   258                           	callstack 0
   259  000062                     	ds	2
   260  000064                     _prec:
   261                           	callstack 0
   262  000064                     	ds	2
   263  000066                     _flags:
   264                           	callstack 0
   265  000066                     	ds	2
   266  000068                     _temp_col:
   267                           	callstack 0
   268  000068                     	ds	1
   269  000069                     _rowloc:
   270                           	callstack 0
   271  000069                     	ds	1
   272  00006A                     _col_loc:
   273                           	callstack 0
   274  00006A                     	ds	1
   275  00006B                     _dbuf:
   276                           	callstack 0
   277  00006B                     	ds	32
   278                           
   279                           	psect	dataBANK0
   280  0000AF                     __pdataBANK0:
   281                           	callstack 0
   282  0000AF                     _keypad:
   283                           	callstack 0
   284  0000AF                     	ds	16
   285  0000BF                     keypad_getkey@F3209:
   286                           	callstack 0
   287  0000BF                     	ds	16
   288                           
   289                           	psect	cstackBANK0
   290  00008B                     __pcstackBANK0:
   291                           	callstack 0
   292  00008B                     sprintf@ap:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x0
   296  00008B                     	ds	2
   297  00008D                     sprintf@f:
   298                           	callstack 0
   299                           
   300                           ; 11 bytes @ 0x2
   301  00008D                     	ds	11
   302  000098                     main@Cadena:
   303                           	callstack 0
   304                           
   305                           ; 10 bytes @ 0xD
   306  000098                     	ds	10
   307  0000A2                     main@Tempe:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x17
   311  0000A2                     	ds	2
   312  0000A4                     main@Hume:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x19
   316  0000A4                     	ds	2
   317  0000A6                     main@indice:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1B
   321  0000A6                     	ds	2
   322  0000A8                     main@TempeAdecuada:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1D
   326  0000A8                     	ds	2
   327  0000AA                     main@HumeAdecuada:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x1F
   331  0000AA                     	ds	2
   332  0000AC                     main@flag:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x21
   336  0000AC                     	ds	1
   337  0000AD                     main@Datos:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x22
   341  0000AD                     	ds	2
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	callstack 0
   346  000001                     ??_LCD_Command:
   347  000001                     ??_LCD_Char:
   348  000001                     ??_keyfind:
   349  000001                     ??_DHT11_Start:
   350  000001                     ?_strlen:
   351                           	callstack 0
   352  000001                     ?___wmul:
   353                           	callstack 0
   354  000001                     ?___aodiv:
   355                           	callstack 0
   356  000001                     ?___aomod:
   357                           	callstack 0
   358  000001                     DHT11_ReadData@i:
   359                           	callstack 0
   360  000001                     IniciarLed@HumedadOptima:
   361                           	callstack 0
   362  000001                     ControlAspersor@HumedadActual:
   363                           	callstack 0
   364  000001                     ControlCalefactor@TempActual:
   365                           	callstack 0
   366  000001                     ___wmul@multiplier:
   367                           	callstack 0
   368  000001                     fputc@c:
   369                           	callstack 0
   370  000001                     strlen@s:
   371                           	callstack 0
   372  000001                     ___aodiv@dividend:
   373                           	callstack 0
   374  000001                     ___aomod@dividend:
   375                           	callstack 0
   376                           
   377                           ; 8 bytes @ 0x0
   378  000001                     	ds	1
   379  000002                     LCD_Command@cmd:
   380                           	callstack 0
   381  000002                     LCD_Char@dat:
   382                           	callstack 0
   383  000002                     DHT11_ReadData@data:
   384                           	callstack 0
   385  000002                     IniciarLed@TemperaturaOptima:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x1
   389  000002                     	ds	1
   390  000003                     ??_LCD_Init:
   391  000003                     ??_LCD_Clear:
   392  000003                     LCD_String@msg:
   393                           	callstack 0
   394  000003                     CompararTempe@TempActual:
   395                           	callstack 0
   396  000003                     DatoSensorTH@Datos:
   397                           	callstack 0
   398  000003                     ControlAspersor@HumedadDigitada:
   399                           	callstack 0
   400  000003                     ControlCalefactor@TempDigitada:
   401                           	callstack 0
   402  000003                     ___wmul@multiplicand:
   403                           	callstack 0
   404  000003                     fputc@fp:
   405                           	callstack 0
   406  000003                     strlen@a:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x2
   410  000003                     	ds	2
   411  000005                     ??_ControlAspersor:
   412  000005                     ??_ControlCalefactor:
   413  000005                     ??_fputc:
   414  000005                     LCD_String_xy@pos:
   415                           	callstack 0
   416  000005                     DatoSensorTH@RH_Integral:
   417                           	callstack 0
   418  000005                     CompararTempe@HumActual:
   419                           	callstack 0
   420  000005                     ___wmul@product:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     DatoSensorTH@T_Integral:
   426                           	callstack 0
   427  000006                     LCD_String_xy@msg:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ?_TemperaturaDigitada:
   433                           	callstack 0
   434  000007                     TemperaturaDigitada@prmTemperatura:
   435                           	callstack 0
   436  000007                     CompararTempe@TempDigitada:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x6
   440  000007                     	ds	1
   441  000008                     LCD_String_xy@row:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x7
   445  000008                     	ds	1
   446  000009                     ??_TemperaturaDigitada:
   447  000009                     LCD_String_xy@location:
   448                           	callstack 0
   449  000009                     CompararTempe@HumDigitada:
   450                           	callstack 0
   451  000009                     ___aodiv@divisor:
   452                           	callstack 0
   453  000009                     ___aomod@divisor:
   454                           	callstack 0
   455                           
   456                           ; 8 bytes @ 0x8
   457  000009                     	ds	1
   458  00000A                     TemperaturaDigitada@Unidad:
   459                           	callstack 0
   460  00000A                     PedirDato@Etiqueta:
   461                           	callstack 0
   462  00000A                     fputs@s:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x9
   466  00000A                     	ds	1
   467  00000B                     ??_CompararTempe:
   468                           
   469                           ; 1 bytes @ 0xA
   470  00000B                     	ds	1
   471  00000C                     TemperaturaDigitada@Resultado:
   472                           	callstack 0
   473  00000C                     PedirDato@vecLlenar:
   474                           	callstack 0
   475  00000C                     fputs@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xB
   479  00000C                     	ds	2
   480  00000E                     ??_PedirDato:
   481  00000E                     fputs@c:
   482                           	callstack 0
   483  00000E                     TemperaturaDigitada@Decena:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xD
   487  00000E                     	ds	1
   488  00000F                     fputs@i:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0xE
   492  00000F                     	ds	1
   493  000010                     PedirDato@tecla:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xF
   497  000010                     	ds	1
   498  000011                     ?_pad:
   499                           	callstack 0
   500  000011                     ___aodiv@counter:
   501                           	callstack 0
   502  000011                     ___aomod@counter:
   503                           	callstack 0
   504  000011                     PedirDato@i:
   505                           	callstack 0
   506  000011                     pad@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x10
   510  000011                     	ds	1
   511  000012                     CompararTempe@TemperaturaAdecuada:
   512                           	callstack 0
   513  000012                     ___aodiv@sign:
   514                           	callstack 0
   515  000012                     ___aomod@sign:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x11
   519  000012                     	ds	1
   520  000013                     ?_abs:
   521                           	callstack 0
   522  000013                     CompararTempe@HumedadAdecuada:
   523                           	callstack 0
   524  000013                     pad@buf:
   525                           	callstack 0
   526  000013                     abs@a:
   527                           	callstack 0
   528  000013                     ___aodiv@quotient:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x12
   532  000013                     	ds	2
   533  000015                     ??_abs:
   534  000015                     pad@p:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  000015                     	ds	2
   539  000017                     ??_pad:
   540                           
   541                           ; 1 bytes @ 0x16
   542  000017                     	ds	1
   543  000018                     pad@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x17
   547  000018                     	ds	2
   548  00001A                     pad@w:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x19
   552  00001A                     	ds	2
   553  00001C                     ?_dtoa:
   554                           	callstack 0
   555  00001C                     dtoa@fp:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1B
   559  00001C                     	ds	2
   560  00001E                     dtoa@d:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x1D
   564  00001E                     	ds	8
   565  000026                     ??_dtoa:
   566                           
   567                           ; 1 bytes @ 0x25
   568  000026                     	ds	8
   569  00002E                     _dtoa$1000:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x2D
   573  00002E                     	ds	2
   574  000030                     dtoa@p:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2F
   578  000030                     	ds	2
   579  000032                     dtoa@w:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x31
   583  000032                     	ds	2
   584  000034                     dtoa@s:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x33
   588  000034                     	ds	2
   589  000036                     dtoa@n:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x35
   593  000036                     	ds	8
   594  00003E                     dtoa@i:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x3D
   598  00003E                     	ds	2
   599  000040                     ?_vfpfcnvrt:
   600                           	callstack 0
   601  000040                     vfpfcnvrt@fp:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x3F
   605  000040                     	ds	2
   606  000042                     vfpfcnvrt@fmt:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x41
   610  000042                     	ds	2
   611  000044                     vfpfcnvrt@ap:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x43
   615  000044                     	ds	2
   616  000046                     ??_vfpfcnvrt:
   617                           
   618                           ; 1 bytes @ 0x45
   619  000046                     	ds	2
   620  000048                     vfpfcnvrt@ll:
   621                           	callstack 0
   622                           
   623                           ; 8 bytes @ 0x47
   624  000048                     	ds	8
   625  000050                     ?_vfprintf:
   626                           	callstack 0
   627  000050                     vfprintf@fp:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x4F
   631  000050                     	ds	2
   632  000052                     vfprintf@fmt:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x51
   636  000052                     	ds	2
   637  000054                     vfprintf@ap:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x53
   641  000054                     	ds	2
   642  000056                     vfprintf@cfmt:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x55
   646  000056                     	ds	2
   647  000058                     ?_sprintf:
   648                           	callstack 0
   649  000058                     sprintf@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x57
   653  000058                     	ds	2
   654  00005A                     sprintf@fmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x59
   658  00005A                     	ds	4
   659  00005E                     ??_main:
   660                           
   661                           ; 1 bytes @ 0x5D
   662  00005E                     	ds	2
   663                           
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 27 in file "Main_Invernadero.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  Cadena         10   13[BANK0 ] unsigned char [10]
   674 ;;  Datos           2   34[BANK0 ] unsigned char [2]
   675 ;;  Hume            2   25[BANK0 ] unsigned char [2]
   676 ;;  Tempe           2   23[BANK0 ] unsigned char [2]
   677 ;;  HumeAdecuada    2   31[BANK0 ] int 
   678 ;;  TempeAdecuad    2   29[BANK0 ] int 
   679 ;;  indice          2   27[BANK0 ] int 
   680 ;;  flag            1   33[BANK0 ] _Bool 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   690 ;;      Params:         0       0       0       0       0       0       0       0       0
   691 ;;      Locals:         0      23       0       0       0       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0
   693 ;;      Totals:         2      23       0       0       0       0       0       0       0
   694 ;;Total ram usage:       25 bytes
   695 ;; Hardware stack levels required when called: 8
   696 ;; This function calls:
   697 ;;		_CompararTempe
   698 ;;		_ControlAspersor
   699 ;;		_ControlCalefactor
   700 ;;		_DatoSensorTH
   701 ;;		_LCD_Char
   702 ;;		_LCD_Init
   703 ;;		_LCD_String
   704 ;;		_LCD_String_xy
   705 ;;		_LedsIniciar
   706 ;;		_PedirDato
   707 ;;		_TemperaturaDigitada
   708 ;;		_sprintf
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715  000B14                     __ptext0:
   716                           	callstack 0
   717  000B14                     _main:
   718                           	callstack 23
   719  000B14                     
   720                           ;Main_Invernadero.c: 30:     TRISE = 0;
   721  000B14  0E00               	movlw	0
   722  000B16  6E96               	movwf	150,c	;volatile
   723                           
   724                           ;Main_Invernadero.c: 35:     TRISD=0x00;
   725  000B18  0E00               	movlw	0
   726  000B1A  6E95               	movwf	149,c	;volatile
   727                           
   728                           ;Main_Invernadero.c: 36:     _Bool flag = 0;
   729  000B1C  0E00               	movlw	0
   730  000B1E  0100               	movlb	0	; () banked
   731  000B20  6FAC               	movwf	main@flag& (0+255),b
   732                           
   733                           ;Main_Invernadero.c: 37:     unsigned char Tempe[2];;Main_Invernadero.c: 38:     unsigne
      +                          d char Hume[2];;Main_Invernadero.c: 39:     char Datos[2];;Main_Invernadero.c: 40:     c
      +                          har Cadena[10];;Main_Invernadero.c: 41:     int indice = 0;
   734  000B22  0E00               	movlw	0
   735  000B24  6FA7               	movwf	(main@indice+1)& (0+255),b
   736  000B26  0E00               	movlw	0
   737  000B28  6FA6               	movwf	main@indice& (0+255),b
   738                           
   739                           ;Main_Invernadero.c: 42:     int TempeAdecuada=0;
   740  000B2A  0E00               	movlw	0
   741  000B2C  6FA9               	movwf	(main@TempeAdecuada+1)& (0+255),b
   742  000B2E  0E00               	movlw	0
   743  000B30  6FA8               	movwf	main@TempeAdecuada& (0+255),b
   744                           
   745                           ;Main_Invernadero.c: 43:     int HumeAdecuada=0;
   746  000B32  0E00               	movlw	0
   747  000B34  6FAB               	movwf	(main@HumeAdecuada+1)& (0+255),b
   748  000B36  0E00               	movlw	0
   749  000B38  6FAA               	movwf	main@HumeAdecuada& (0+255),b
   750                           
   751                           ;Main_Invernadero.c: 48:     OSCCON = 0x72;
   752  000B3A  0E72               	movlw	114
   753  000B3C  6ED3               	movwf	211,c	;volatile
   754                           
   755                           ;Main_Invernadero.c: 50:     ADCON1=0x0F;
   756  000B3E  0E0F               	movlw	15
   757  000B40  6EC1               	movwf	193,c	;volatile
   758                           
   759                           ;Main_Invernadero.c: 51:     TRISC=0x00;
   760  000B42  0E00               	movlw	0
   761  000B44  6E94               	movwf	148,c	;volatile
   762  000B46                     
   763                           ; BSR set to: 0
   764                           ;Main_Invernadero.c: 53:      RBPU=0;
   765  000B46  9EF1               	bcf	4081,7,c	;volatile
   766  000B48                     
   767                           ; BSR set to: 0
   768                           ;Main_Invernadero.c: 55:      LCD_Init();
   769  000B48  EC19  F00E         	call	_LCD_Init	;wreg free
   770  000B4C                     
   771                           ;Main_Invernadero.c: 57:      LedsIniciar();
   772  000B4C  EC91  F00E         	call	_LedsIniciar	;wreg free
   773  000B50                     l2547:
   774                           
   775                           ;Main_Invernadero.c: 59:      if(indice<2){
   776  000B50  0100               	movlb	0	; () banked
   777  000B52  BFA7               	btfsc	(main@indice+1)& (0+255),7,b
   778  000B54  EFB7  F005         	goto	u2340
   779  000B58  51A7               	movf	(main@indice+1)& (0+255),w,b
   780  000B5A  E107               	bnz	u2341
   781  000B5C  0E02               	movlw	2
   782  000B5E  5DA6               	subwf	main@indice& (0+255),w,b
   783  000B60  B0D8               	btfsc	status,0,c
   784  000B62  EFB5  F005         	goto	u2341
   785  000B66  EFB7  F005         	goto	u2340
   786  000B6A                     u2341:
   787  000B6A  EFDE  F005         	goto	l2557
   788  000B6E                     u2340:
   789  000B6E                     
   790                           ; BSR set to: 0
   791                           ;Main_Invernadero.c: 60:        PedirDato("Tempe. Optima",Tempe);
   792  000B6E  0E01               	movlw	low STR_1
   793  000B70  6E0A               	movwf	PedirDato@Etiqueta^0,c
   794  000B72  0E08               	movlw	high STR_1
   795  000B74  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   796  000B76  0EA2               	movlw	low main@Tempe
   797  000B78  6E0C               	movwf	PedirDato@vecLlenar^0,c
   798  000B7A  0E00               	movlw	high main@Tempe
   799  000B7C  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   800  000B7E  EC68  F00B         	call	_PedirDato	;wreg free
   801  000B82                     
   802                           ;Main_Invernadero.c: 61:        _delay((unsigned long)((100)*(8000000/4000.0)));
   803  000B82  0E02               	movlw	2
   804  000B84  6E5F               	movwf	(??_main+1)^0,c
   805  000B86  0E04               	movlw	4
   806  000B88  6E5E               	movwf	??_main^0,c
   807  000B8A  0EBA               	movlw	186
   808  000B8C                     u2377:
   809  000B8C  2EE8               	decfsz	wreg,f,c
   810  000B8E  D7FE               	bra	u2377
   811  000B90  2E5E               	decfsz	??_main^0,f,c
   812  000B92  D7FC               	bra	u2377
   813  000B94  2E5F               	decfsz	(??_main+1)^0,f,c
   814  000B96  D7FA               	bra	u2377
   815  000B98  D000               	nop2	
   816  000B9A                     
   817                           ;Main_Invernadero.c: 62:        PedirDato("Hume. Optima",Hume);
   818  000B9A  0E0F               	movlw	low STR_2
   819  000B9C  6E0A               	movwf	PedirDato@Etiqueta^0,c
   820  000B9E  0E08               	movlw	high STR_2
   821  000BA0  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   822  000BA2  0EA4               	movlw	low main@Hume
   823  000BA4  6E0C               	movwf	PedirDato@vecLlenar^0,c
   824  000BA6  0E00               	movlw	high main@Hume
   825  000BA8  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   826  000BAA  EC68  F00B         	call	_PedirDato	;wreg free
   827  000BAE                     
   828                           ;Main_Invernadero.c: 63:        indice = 2;
   829  000BAE  0E00               	movlw	0
   830  000BB0  0100               	movlb	0	; () banked
   831  000BB2  6FA7               	movwf	(main@indice+1)& (0+255),b
   832  000BB4  0E02               	movlw	2
   833  000BB6  6FA6               	movwf	main@indice& (0+255),b
   834                           
   835                           ;Main_Invernadero.c: 64:     }else{
   836  000BB8  EFFD  F005         	goto	l2563
   837  000BBC                     l2557:
   838                           
   839                           ; BSR set to: 0
   840                           ;Main_Invernadero.c: 65:         if(flag==0){
   841  000BBC  51AC               	movf	main@flag& (0+255),w,b
   842  000BBE  A4D8               	btfss	status,2,c
   843  000BC0  EFE4  F005         	goto	u2351
   844  000BC4  EFE6  F005         	goto	u2350
   845  000BC8                     u2351:
   846  000BC8  EFFA  F005         	goto	l2561
   847  000BCC                     u2350:
   848  000BCC                     
   849                           ; BSR set to: 0
   850                           ;Main_Invernadero.c: 66:          TempeAdecuada = TemperaturaDigitada(Tempe);
   851  000BCC  0EA2               	movlw	low main@Tempe
   852  000BCE  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   853  000BD0  0E00               	movlw	high main@Tempe
   854  000BD2  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   855  000BD4  ECA7  F00B         	call	_TemperaturaDigitada	;wreg free
   856  000BD8  C007  F0A8         	movff	?_TemperaturaDigitada,main@TempeAdecuada
   857  000BDC  C008  F0A9         	movff	?_TemperaturaDigitada+1,main@TempeAdecuada+1
   858                           
   859                           ;Main_Invernadero.c: 67:          HumeAdecuada = TemperaturaDigitada(Hume);
   860  000BE0  0EA4               	movlw	low main@Hume
   861  000BE2  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   862  000BE4  0E00               	movlw	high main@Hume
   863  000BE6  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   864  000BE8  ECA7  F00B         	call	_TemperaturaDigitada	;wreg free
   865  000BEC  C007  F0AA         	movff	?_TemperaturaDigitada,main@HumeAdecuada
   866  000BF0  C008  F0AB         	movff	?_TemperaturaDigitada+1,main@HumeAdecuada+1
   867  000BF4                     l2561:
   868                           
   869                           ;Main_Invernadero.c: 69:        flag=1;
   870  000BF4  0E01               	movlw	1
   871  000BF6  0100               	movlb	0	; () banked
   872  000BF8  6FAC               	movwf	main@flag& (0+255),b
   873  000BFA                     l2563:
   874                           
   875                           ; BSR set to: 0
   876                           ;Main_Invernadero.c: 71:      if (flag==1){
   877  000BFA  05AC               	decf	main@flag& (0+255),w,b
   878  000BFC  A4D8               	btfss	status,2,c
   879  000BFE  EF03  F006         	goto	u2361
   880  000C02  EF05  F006         	goto	u2360
   881  000C06                     u2361:
   882  000C06  EFA8  F005         	goto	l2547
   883  000C0A                     u2360:
   884  000C0A                     
   885                           ; BSR set to: 0
   886                           ;Main_Invernadero.c: 72:         DatoSensorTH(Datos);
   887  000C0A  0EAD               	movlw	low main@Datos
   888  000C0C  6E03               	movwf	DatoSensorTH@Datos^0,c
   889  000C0E  0E00               	movlw	high main@Datos
   890  000C10  6E04               	movwf	(DatoSensorTH@Datos+1)^0,c
   891  000C12  ECC4  F00D         	call	_DatoSensorTH	;wreg free
   892                           
   893                           ;Main_Invernadero.c: 73:         CompararTempe(&Datos[0],&Datos[1],TempeAdecuada,HumeAde
      +                          cuada);
   894  000C16  0EAD               	movlw	low main@Datos
   895  000C18  6E03               	movwf	CompararTempe@TempActual^0,c
   896  000C1A  0E00               	movlw	high main@Datos
   897  000C1C  6E04               	movwf	(CompararTempe@TempActual+1)^0,c
   898  000C1E  0EAE               	movlw	low (main@Datos+1)
   899  000C20  6E05               	movwf	CompararTempe@HumActual^0,c
   900  000C22  0E00               	movlw	high (main@Datos+1)
   901  000C24  6E06               	movwf	(CompararTempe@HumActual+1)^0,c
   902  000C26  C0A8  F007         	movff	main@TempeAdecuada,CompararTempe@TempDigitada
   903  000C2A  C0A9  F008         	movff	main@TempeAdecuada+1,CompararTempe@TempDigitada+1
   904  000C2E  C0AA  F009         	movff	main@HumeAdecuada,CompararTempe@HumDigitada
   905  000C32  C0AB  F00A         	movff	main@HumeAdecuada+1,CompararTempe@HumDigitada+1
   906  000C36  EC16  F00A         	call	_CompararTempe	;wreg free
   907                           
   908                           ;Main_Invernadero.c: 74:         ControlAspersor(&Datos[1],HumeAdecuada);
   909  000C3A  0EAE               	movlw	low (main@Datos+1)
   910  000C3C  6E01               	movwf	ControlAspersor@HumedadActual^0,c
   911  000C3E  0E00               	movlw	high (main@Datos+1)
   912  000C40  6E02               	movwf	(ControlAspersor@HumedadActual+1)^0,c
   913  000C42  C0AA  F003         	movff	main@HumeAdecuada,ControlAspersor@HumedadDigitada
   914  000C46  C0AB  F004         	movff	main@HumeAdecuada+1,ControlAspersor@HumedadDigitada+1
   915  000C4A  EC3B  F00D         	call	_ControlAspersor	;wreg free
   916                           
   917                           ;Main_Invernadero.c: 75:         ControlCalefactor(&Datos[0],TempeAdecuada);
   918  000C4E  0EAD               	movlw	low main@Datos
   919  000C50  6E01               	movwf	ControlCalefactor@TempActual^0,c
   920  000C52  0E00               	movlw	high main@Datos
   921  000C54  6E02               	movwf	(ControlCalefactor@TempActual+1)^0,c
   922  000C56  C0A8  F003         	movff	main@TempeAdecuada,ControlCalefactor@TempDigitada
   923  000C5A  C0A9  F004         	movff	main@TempeAdecuada+1,ControlCalefactor@TempDigitada+1
   924  000C5E  EC14  F00D         	call	_ControlCalefactor	;wreg free
   925  000C62                     
   926                           ;Main_Invernadero.c: 78:     sprintf(Cadena,"%d",Datos[1]);
   927  000C62  0E98               	movlw	low main@Cadena
   928  000C64  6E58               	movwf	sprintf@s^0,c
   929  000C66  0E00               	movlw	high main@Cadena
   930  000C68  6E59               	movwf	(sprintf@s+1)^0,c
   931  000C6A  0E2E               	movlw	low (STR_4+1)
   932  000C6C  6E5A               	movwf	sprintf@fmt^0,c
   933  000C6E  0E08               	movlw	high (STR_4+1)
   934  000C70  6E5B               	movwf	(sprintf@fmt+1)^0,c
   935  000C72  C0AE  F05C         	movff	main@Datos+1,?_sprintf+4
   936  000C76  6A5D               	clrf	(?_sprintf+5)^0,c
   937  000C78  EC9B  F00C         	call	_sprintf	;wreg free
   938  000C7C                     
   939                           ;Main_Invernadero.c: 79:     LCD_String_xy(0,0,Cadena);
   940  000C7C  0E00               	movlw	0
   941  000C7E  6E05               	movwf	LCD_String_xy@pos^0,c
   942  000C80  0E98               	movlw	low main@Cadena
   943  000C82  6E06               	movwf	LCD_String_xy@msg^0,c
   944  000C84  0E00               	movlw	high main@Cadena
   945  000C86  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   946  000C88  0E00               	movlw	0
   947  000C8A  ECA4  F00D         	call	_LCD_String_xy
   948  000C8E                     
   949                           ;Main_Invernadero.c: 80:     sprintf(Cadena,".%d",0);
   950  000C8E  0E98               	movlw	low main@Cadena
   951  000C90  6E58               	movwf	sprintf@s^0,c
   952  000C92  0E00               	movlw	high main@Cadena
   953  000C94  6E59               	movwf	(sprintf@s+1)^0,c
   954  000C96  0E2D               	movlw	low STR_4
   955  000C98  6E5A               	movwf	sprintf@fmt^0,c
   956  000C9A  0E08               	movlw	high STR_4
   957  000C9C  6E5B               	movwf	(sprintf@fmt+1)^0,c
   958  000C9E  0E00               	movlw	0
   959  000CA0  6E5D               	movwf	(?_sprintf+5)^0,c
   960  000CA2  0E00               	movlw	0
   961  000CA4  6E5C               	movwf	(?_sprintf+4)^0,c
   962  000CA6  EC9B  F00C         	call	_sprintf	;wreg free
   963  000CAA                     
   964                           ;Main_Invernadero.c: 81:     LCD_Char('%');
   965  000CAA  0E25               	movlw	37
   966  000CAC  ECC4  F00C         	call	_LCD_Char
   967                           
   968                           ;Main_Invernadero.c: 82:     sprintf(Cadena,"  Hume.");
   969  000CB0  0E98               	movlw	low main@Cadena
   970  000CB2  6E58               	movwf	sprintf@s^0,c
   971  000CB4  0E00               	movlw	high main@Cadena
   972  000CB6  6E59               	movwf	(sprintf@s+1)^0,c
   973  000CB8  0E25               	movlw	low STR_5
   974  000CBA  6E5A               	movwf	sprintf@fmt^0,c
   975  000CBC  0E08               	movlw	high STR_5
   976  000CBE  6E5B               	movwf	(sprintf@fmt+1)^0,c
   977  000CC0  EC9B  F00C         	call	_sprintf	;wreg free
   978  000CC4                     
   979                           ;Main_Invernadero.c: 83:      LCD_String(Cadena);
   980  000CC4  0E98               	movlw	low main@Cadena
   981  000CC6  6E03               	movwf	LCD_String@msg^0,c
   982  000CC8  0E00               	movlw	high main@Cadena
   983  000CCA  6E04               	movwf	(LCD_String@msg+1)^0,c
   984  000CCC  EC13  F00C         	call	_LCD_String	;wreg free
   985  000CD0                     
   986                           ;Main_Invernadero.c: 86:     sprintf(Cadena,"%d",Datos[0]);
   987  000CD0  0E98               	movlw	low main@Cadena
   988  000CD2  6E58               	movwf	sprintf@s^0,c
   989  000CD4  0E00               	movlw	high main@Cadena
   990  000CD6  6E59               	movwf	(sprintf@s+1)^0,c
   991  000CD8  0E2E               	movlw	low (STR_4+1)
   992  000CDA  6E5A               	movwf	sprintf@fmt^0,c
   993  000CDC  0E08               	movlw	high (STR_4+1)
   994  000CDE  6E5B               	movwf	(sprintf@fmt+1)^0,c
   995  000CE0  C0AD  F05C         	movff	main@Datos,?_sprintf+4
   996  000CE4  6A5D               	clrf	(?_sprintf+5)^0,c
   997  000CE6  EC9B  F00C         	call	_sprintf	;wreg free
   998                           
   999                           ;Main_Invernadero.c: 87:     LCD_String_xy(2,0,Cadena);
  1000  000CEA  0E00               	movlw	0
  1001  000CEC  6E05               	movwf	LCD_String_xy@pos^0,c
  1002  000CEE  0E98               	movlw	low main@Cadena
  1003  000CF0  6E06               	movwf	LCD_String_xy@msg^0,c
  1004  000CF2  0E00               	movlw	high main@Cadena
  1005  000CF4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1006  000CF6  0E02               	movlw	2
  1007  000CF8  ECA4  F00D         	call	_LCD_String_xy
  1008  000CFC                     
  1009                           ;Main_Invernadero.c: 88:     sprintf(Cadena,".%d",0);
  1010  000CFC  0E98               	movlw	low main@Cadena
  1011  000CFE  6E58               	movwf	sprintf@s^0,c
  1012  000D00  0E00               	movlw	high main@Cadena
  1013  000D02  6E59               	movwf	(sprintf@s+1)^0,c
  1014  000D04  0E2D               	movlw	low STR_4
  1015  000D06  6E5A               	movwf	sprintf@fmt^0,c
  1016  000D08  0E08               	movlw	high STR_4
  1017  000D0A  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1018  000D0C  0E00               	movlw	0
  1019  000D0E  6E5D               	movwf	(?_sprintf+5)^0,c
  1020  000D10  0E00               	movlw	0
  1021  000D12  6E5C               	movwf	(?_sprintf+4)^0,c
  1022  000D14  EC9B  F00C         	call	_sprintf	;wreg free
  1023  000D18                     
  1024                           ;Main_Invernadero.c: 89:     LCD_Char(0xdf);
  1025  000D18  0EDF               	movlw	223
  1026  000D1A  ECC4  F00C         	call	_LCD_Char
  1027  000D1E                     
  1028                           ;Main_Invernadero.c: 90:     sprintf(Cadena,"C Tempe.");
  1029  000D1E  0E98               	movlw	low main@Cadena
  1030  000D20  6E58               	movwf	sprintf@s^0,c
  1031  000D22  0E00               	movlw	high main@Cadena
  1032  000D24  6E59               	movwf	(sprintf@s+1)^0,c
  1033  000D26  0E1C               	movlw	low STR_8
  1034  000D28  6E5A               	movwf	sprintf@fmt^0,c
  1035  000D2A  0E08               	movlw	high STR_8
  1036  000D2C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1037  000D2E  EC9B  F00C         	call	_sprintf	;wreg free
  1038  000D32                     
  1039                           ;Main_Invernadero.c: 91:     LCD_String(Cadena);
  1040  000D32  0E98               	movlw	low main@Cadena
  1041  000D34  6E03               	movwf	LCD_String@msg^0,c
  1042  000D36  0E00               	movlw	high main@Cadena
  1043  000D38  6E04               	movwf	(LCD_String@msg+1)^0,c
  1044  000D3A  EC13  F00C         	call	_LCD_String	;wreg free
  1045  000D3E                     
  1046                           ;Main_Invernadero.c: 93:        _delay((unsigned long)((500)*(8000000/4000.0)));
  1047  000D3E  0E06               	movlw	6
  1048  000D40  6E5F               	movwf	(??_main+1)^0,c
  1049  000D42  0E13               	movlw	19
  1050  000D44  6E5E               	movwf	??_main^0,c
  1051  000D46  0EAE               	movlw	174
  1052  000D48                     u2387:
  1053  000D48  2EE8               	decfsz	wreg,f,c
  1054  000D4A  D7FE               	bra	u2387
  1055  000D4C  2E5E               	decfsz	??_main^0,f,c
  1056  000D4E  D7FC               	bra	u2387
  1057  000D50  2E5F               	decfsz	(??_main+1)^0,f,c
  1058  000D52  D7FA               	bra	u2387
  1059  000D54  EFA8  F005         	goto	l2547
  1060  000D58  EF00  F000         	goto	start
  1061  000D5C                     __end_of_main:
  1062                           	callstack 0
  1063                           
  1064 ;; *************** function _sprintf *****************
  1065 ;; Defined at:
  1066 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  s               2   87[COMRAM] PTR unsigned char 
  1069 ;;		 -> main@Cadena(10), 
  1070 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1071 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1072 ;;		 -> STR_4(4), STR_3(3), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  f              11    2[BANK0 ] struct _IO_FILE
  1075 ;;  ap              2    0[BANK0 ] PTR void [1]
  1076 ;;		 -> ?_sprintf(2), 
  1077 ;;  ret             2    0        int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   87[COMRAM] int 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         6       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         6      13       0       0       0       0       0       0       0
  1091 ;;Total ram usage:       19 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 7
  1094 ;; This function calls:
  1095 ;;		_vfprintf
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text1
  1102  001936                     __ptext1:
  1103                           	callstack 0
  1104  001936                     _sprintf:
  1105                           	callstack 23
  1106  001936  0E5C               	movlw	low (?_sprintf+4)
  1107  001938  0100               	movlb	0	; () banked
  1108  00193A  6F8B               	movwf	sprintf@ap& (0+255),b
  1109  00193C  0E00               	movlw	high (?_sprintf+4)
  1110  00193E  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
  1111  001940  C058  F08D         	movff	sprintf@s,sprintf@f
  1112  001944  C059  F08E         	movff	sprintf@s+1,sprintf@f+1
  1113  001948                     
  1114                           ; BSR set to: 0
  1115  001948  0E00               	movlw	0
  1116  00194A  6F91               	movwf	(sprintf@f+4)& (0+255),b
  1117  00194C  0E00               	movlw	0
  1118  00194E  6F90               	movwf	(sprintf@f+3)& (0+255),b
  1119  001950                     
  1120                           ; BSR set to: 0
  1121  001950  0E00               	movlw	0
  1122  001952  6F97               	movwf	(sprintf@f+10)& (0+255),b
  1123  001954  0E00               	movlw	0
  1124  001956  6F96               	movwf	(sprintf@f+9)& (0+255),b
  1125  001958                     
  1126                           ; BSR set to: 0
  1127  001958  0E8D               	movlw	low sprintf@f
  1128  00195A  6E50               	movwf	vfprintf@fp^0,c
  1129  00195C  0E00               	movlw	high sprintf@f
  1130  00195E  6E51               	movwf	(vfprintf@fp+1)^0,c
  1131  001960  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1132  001964  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1133  001968  0E8B               	movlw	low sprintf@ap
  1134  00196A  6E54               	movwf	vfprintf@ap^0,c
  1135  00196C  0E00               	movlw	high sprintf@ap
  1136  00196E  6E55               	movwf	(vfprintf@ap+1)^0,c
  1137  001970  ECE2  F00B         	call	_vfprintf	;wreg free
  1138  001974  0100               	movlb	0	; () banked
  1139  001976  5190               	movf	(sprintf@f+3)& (0+255),w,b
  1140  001978  2458               	addwf	sprintf@s^0,w,c
  1141  00197A  6ED9               	movwf	fsr2l,c
  1142  00197C  5191               	movf	(sprintf@f+4)& (0+255),w,b
  1143  00197E  2059               	addwfc	(sprintf@s+1)^0,w,c
  1144  001980  6EDA               	movwf	fsr2h,c
  1145  001982  0E00               	movlw	0
  1146  001984  6EDF               	movwf	indf2,c
  1147  001986                     
  1148                           ; BSR set to: 0
  1149  001986  0012               	return		;funcret
  1150  001988                     __end_of_sprintf:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function _vfprintf *****************
  1154 ;; Defined at:
  1155 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1158 ;;		 -> sprintf@f(11), 
  1159 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1160 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1161 ;;		 -> STR_4(4), STR_3(3), 
  1162 ;;  ap              2   83[COMRAM] PTR PTR void 
  1163 ;;		 -> sprintf@ap(2), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1166 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1167 ;;		 -> STR_4(4), STR_3(3), 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  2   79[COMRAM] int 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         6       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        8 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 6
  1184 ;; This function calls:
  1185 ;;		_vfpfcnvrt
  1186 ;; This function is called by:
  1187 ;;		_sprintf
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text2
  1192  0017C4                     __ptext2:
  1193                           	callstack 0
  1194  0017C4                     _vfprintf:
  1195                           	callstack 23
  1196  0017C4                     
  1197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1198  0017C4  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1199  0017C8  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1200  0017CC                     
  1201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1202  0017CC  0E00               	movlw	0
  1203  0017CE  0100               	movlb	0	; () banked
  1204  0017D0  6F61               	movwf	(_nout+1)& (0+255),b
  1205  0017D2  0E00               	movlw	0
  1206  0017D4  6F60               	movwf	_nout& (0+255),b
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1209  0017D6  EF00  F00C         	goto	l2389
  1210  0017DA                     l2387:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1214  0017DA  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1215  0017DE  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1216  0017E2  0E56               	movlw	low vfprintf@cfmt
  1217  0017E4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1218  0017E6  0E00               	movlw	high vfprintf@cfmt
  1219  0017E8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1220  0017EA  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1221  0017EE  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1222  0017F2  ECC6  F007         	call	_vfpfcnvrt	;wreg free
  1223  0017F6  5040               	movf	?_vfpfcnvrt^0,w,c
  1224  0017F8  0100               	movlb	0	; () banked
  1225  0017FA  2760               	addwf	_nout& (0+255),f,b
  1226  0017FC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1227  0017FE  2361               	addwfc	(_nout+1)& (0+255),f,b
  1228  001800                     l2389:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1232  001800  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1233  001804  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1234  001808                     	if	0	;tblptru may be non-zero
  1235  001808                     	endif
  1236  001808                     	if	0	;tblptru may be non-zero
  1237  001808                     	endif
  1238  001808  0008               	tblrd		*
  1239  00180A  50F5               	movf	tablat,w,c
  1240  00180C  0900               	iorlw	0
  1241  00180E  A4D8               	btfss	status,2,c
  1242  001810  EF0C  F00C         	goto	u2041
  1243  001814  EF0E  F00C         	goto	u2040
  1244  001818                     u2041:
  1245  001818  EFED  F00B         	goto	l2387
  1246  00181C                     u2040:
  1247  00181C                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1250  00181C  C060  F050         	movff	_nout,?_vfprintf
  1251  001820  C061  F051         	movff	_nout+1,?_vfprintf+1
  1252  001824                     
  1253                           ; BSR set to: 0
  1254  001824  0012               	return		;funcret
  1255  001826                     __end_of_vfprintf:
  1256                           	callstack 0
  1257                           
  1258 ;; *************** function _vfpfcnvrt *****************
  1259 ;; Defined at:
  1260 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1263 ;;		 -> sprintf@f(11), 
  1264 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1265 ;;		 -> vfprintf@cfmt(2), 
  1266 ;;  ap              2   67[COMRAM] PTR PTR void 
  1267 ;;		 -> sprintf@ap(2), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  ll              8   71[COMRAM] long long 
  1270 ;;  llu             8    0        unsigned long long 
  1271 ;;  f               4    0        unsigned long long 
  1272 ;;  vp              3    0        PTR void 
  1273 ;;  ct              3    0        unsigned char [3]
  1274 ;;  cp              3    0        PTR unsigned char 
  1275 ;;  i               2    0        int 
  1276 ;;  done            2    0        int 
  1277 ;;  c               1    0        unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2   63[COMRAM] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1287 ;;      Params:         6       0       0       0       0       0       0       0       0
  1288 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1289 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1290 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1291 ;;Total ram usage:       16 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 5
  1294 ;; This function calls:
  1295 ;;		_dtoa
  1296 ;;		_fputc
  1297 ;; This function is called by:
  1298 ;;		_vfprintf
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text3
  1303  000F8C                     __ptext3:
  1304                           	callstack 0
  1305  000F8C                     _vfpfcnvrt:
  1306                           	callstack 23
  1307  000F8C                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1309  000F8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1310  000F90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1311  000F94  CFDE FFF6          	movff	postinc2,tblptrl
  1312  000F98  CFDD FFF7          	movff	postdec2,tblptrh
  1313  000F9C                     	if	0	;tblptru may be non-zero
  1314  000F9C                     	endif
  1315  000F9C                     	if	0	;tblptru may be non-zero
  1316  000F9C                     	endif
  1317  000F9C  0008               	tblrd		*
  1318  000F9E  50F5               	movf	tablat,w,c
  1319  000FA0  0A25               	xorlw	37
  1320  000FA2  A4D8               	btfss	status,2,c
  1321  000FA4  EFD6  F007         	goto	u1731
  1322  000FA8  EFD8  F007         	goto	u1730
  1323  000FAC                     u1731:
  1324  000FAC  EF84  F008         	goto	l2205
  1325  000FB0                     u1730:
  1326  000FB0                     
  1327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1328  000FB0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1329  000FB4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1330  000FB8  2ADE               	incf	postinc2,f,c
  1331  000FBA  0E00               	movlw	0
  1332  000FBC  22DD               	addwfc	postdec2,f,c
  1333  000FBE                     
  1334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1335  000FBE  0E00               	movlw	0
  1336  000FC0  0100               	movlb	0	; () banked
  1337  000FC2  6F63               	movwf	(_width+1)& (0+255),b
  1338  000FC4  0E00               	movlw	0
  1339  000FC6  6F62               	movwf	_width& (0+255),b
  1340  000FC8  C062  F066         	movff	_width,_flags
  1341  000FCC  C063  F067         	movff	_width+1,_flags+1
  1342  000FD0                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1345  000FD0  6964               	setf	_prec& (0+255),b
  1346  000FD2  6965               	setf	(_prec+1)& (0+255),b
  1347  000FD4                     
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1350  000FD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351  000FD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352  000FDC  CFDE FFF6          	movff	postinc2,tblptrl
  1353  000FE0  CFDD FFF7          	movff	postdec2,tblptrh
  1354  000FE4                     	if	0	;tblptru may be non-zero
  1355  000FE4                     	endif
  1356  000FE4                     	if	0	;tblptru may be non-zero
  1357  000FE4                     	endif
  1358  000FE4  0008               	tblrd		*
  1359  000FE6  50F5               	movf	tablat,w,c
  1360  000FE8  0A64               	xorlw	100
  1361  000FEA  B4D8               	btfsc	status,2,c
  1362  000FEC  EFFA  F007         	goto	u1741
  1363  000FF0  EFFC  F007         	goto	u1740
  1364  000FF4                     u1741:
  1365  000FF4  EF0E  F008         	goto	l2183
  1366  000FF8                     u1740:
  1367  000FF8                     
  1368                           ; BSR set to: 0
  1369  000FF8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1370  000FFC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1371  001000  CFDE FFF6          	movff	postinc2,tblptrl
  1372  001004  CFDD FFF7          	movff	postdec2,tblptrh
  1373  001008                     	if	0	;tblptru may be non-zero
  1374  001008                     	endif
  1375  001008                     	if	0	;tblptru may be non-zero
  1376  001008                     	endif
  1377  001008  0008               	tblrd		*
  1378  00100A  50F5               	movf	tablat,w,c
  1379  00100C  0A69               	xorlw	105
  1380  00100E  A4D8               	btfss	status,2,c
  1381  001010  EF0C  F008         	goto	u1751
  1382  001014  EF0E  F008         	goto	u1750
  1383  001018                     u1751:
  1384  001018  EF4E  F008         	goto	l2189
  1385  00101C                     u1750:
  1386  00101C                     l2183:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1390  00101C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1391  001020  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1392  001024  2ADE               	incf	postinc2,f,c
  1393  001026  0E00               	movlw	0
  1394  001028  22DD               	addwfc	postdec2,f,c
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1397  00102A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1398  00102E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1399  001032  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1400  001036  0E02               	movlw	2
  1401  001038  26DE               	addwf	postinc2,f,c
  1402  00103A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1403  00103E  0E00               	movlw	0
  1404  001040  22DD               	addwfc	postdec2,f,c
  1405  001042  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1406  001046  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1407  00104A  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1408  00104E  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1409  001052  0E00               	movlw	0
  1410  001054  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1411  001056  0EFF               	movlw	-1
  1412  001058  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1413  00105A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1414  00105C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1415  00105E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1416  001060  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1417  001062  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1418  001064                     
  1419                           ; BSR set to: 0
  1420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1421  001064  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1422  001068  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1423  00106C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1424  001070  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1425  001074  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1426  001078  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1427  00107C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1428  001080  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1429  001084  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1430  001088  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1431  00108C  EC19  F004         	call	_dtoa	;wreg free
  1432  001090  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1433  001094  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1434  001098  EF9F  F008         	goto	l1136
  1435  00109C                     l2189:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1439  00109C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1440  0010A0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1441  0010A4  CFDE FFF6          	movff	postinc2,tblptrl
  1442  0010A8  CFDD FFF7          	movff	postdec2,tblptrh
  1443  0010AC                     	if	0	;tblptru may be non-zero
  1444  0010AC                     	endif
  1445  0010AC                     	if	0	;tblptru may be non-zero
  1446  0010AC                     	endif
  1447  0010AC  0008               	tblrd		*
  1448  0010AE  50F5               	movf	tablat,w,c
  1449  0010B0  0A25               	xorlw	37
  1450  0010B2  A4D8               	btfss	status,2,c
  1451  0010B4  EF5E  F008         	goto	u1761
  1452  0010B8  EF60  F008         	goto	u1760
  1453  0010BC                     u1761:
  1454  0010BC  EF77  F008         	goto	l2199
  1455  0010C0                     u1760:
  1456  0010C0                     
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1459  0010C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460  0010C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461  0010C8  2ADE               	incf	postinc2,f,c
  1462  0010CA  0E00               	movlw	0
  1463  0010CC  22DD               	addwfc	postdec2,f,c
  1464  0010CE                     
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1467  0010CE  0E00               	movlw	0
  1468  0010D0  6E02               	movwf	(fputc@c+1)^0,c
  1469  0010D2  0E25               	movlw	37
  1470  0010D4  6E01               	movwf	fputc@c^0,c
  1471  0010D6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1472  0010DA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1473  0010DE  ECA0  F00A         	call	_fputc	;wreg free
  1474  0010E2                     l2195:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1477  0010E2  0E00               	movlw	0
  1478  0010E4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1479  0010E6  0E01               	movlw	1
  1480  0010E8  6E40               	movwf	?_vfpfcnvrt^0,c
  1481  0010EA  EF9F  F008         	goto	l1136
  1482  0010EE                     l2199:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1486  0010EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487  0010F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488  0010F6  2ADE               	incf	postinc2,f,c
  1489  0010F8  0E00               	movlw	0
  1490  0010FA  22DD               	addwfc	postdec2,f,c
  1491  0010FC                     
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1494  0010FC  0E00               	movlw	0
  1495  0010FE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1496  001100  0E00               	movlw	0
  1497  001102  6E40               	movwf	?_vfpfcnvrt^0,c
  1498  001104  EF9F  F008         	goto	l1136
  1499  001108                     l2205:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1502  001108  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503  00110C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504  001110  CFDE FFF6          	movff	postinc2,tblptrl
  1505  001114  CFDD FFF7          	movff	postdec2,tblptrh
  1506  001118                     	if	0	;tblptru may be non-zero
  1507  001118                     	endif
  1508  001118                     	if	0	;tblptru may be non-zero
  1509  001118                     	endif
  1510  001118  0008               	tblrd		*
  1511  00111A  50F5               	movf	tablat,w,c
  1512  00111C  6E01               	movwf	fputc@c^0,c
  1513  00111E  6A02               	clrf	(fputc@c+1)^0,c
  1514  001120  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1515  001124  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1516  001128  ECA0  F00A         	call	_fputc	;wreg free
  1517  00112C                     
  1518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1519  00112C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1520  001130  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1521  001134  2ADE               	incf	postinc2,f,c
  1522  001136  0E00               	movlw	0
  1523  001138  22DD               	addwfc	postdec2,f,c
  1524  00113A  EF71  F008         	goto	l2195
  1525  00113E                     l1136:
  1526  00113E  0012               	return		;funcret
  1527  001140                     __end_of_vfpfcnvrt:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _dtoa *****************
  1531 ;; Defined at:
  1532 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1535 ;;		 -> sprintf@f(11), 
  1536 ;;  d               8   29[COMRAM] long long 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  n               8   53[COMRAM] long long 
  1539 ;;  i               2   61[COMRAM] int 
  1540 ;;  s               2   51[COMRAM] int 
  1541 ;;  w               2   49[COMRAM] int 
  1542 ;;  p               2   47[COMRAM] int 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2   27[COMRAM] int 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:        10       0       0       0       0       0       0       0       0
  1553 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1555 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:       36 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 4
  1559 ;; This function calls:
  1560 ;;		___aodiv
  1561 ;;		___aomod
  1562 ;;		_abs
  1563 ;;		_pad
  1564 ;; This function is called by:
  1565 ;;		_vfpfcnvrt
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text4
  1570  000832                     __ptext4:
  1571                           	callstack 0
  1572  000832                     _dtoa:
  1573                           	callstack 23
  1574  000832                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1576  000832  C01E  F036         	movff	dtoa@d,dtoa@n
  1577  000836  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1578  00083A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1579  00083E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1580  000842  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1581  000846  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1582  00084A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1583  00084E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1584  000852                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1586  000852  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1587  000854  EF2E  F004         	goto	u1551
  1588  000858  EF31  F004         	goto	u1550
  1589  00085C                     u1551:
  1590  00085C  0E01               	movlw	1
  1591  00085E  EF32  F004         	goto	u1560
  1592  000862                     u1550:
  1593  000862  0E00               	movlw	0
  1594  000864                     u1560:
  1595  000864  6E34               	movwf	dtoa@s^0,c
  1596  000866  6A35               	clrf	(dtoa@s+1)^0,c
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1599  000868  5034               	movf	dtoa@s^0,w,c
  1600  00086A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1601  00086C  B4D8               	btfsc	status,2,c
  1602  00086E  EF3B  F004         	goto	u1571
  1603  000872  EF3D  F004         	goto	u1570
  1604  000876                     u1571:
  1605  000876  EF4D  F004         	goto	l2085
  1606  00087A                     u1570:
  1607  00087A                     
  1608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1609  00087A  1E3D               	comf	(dtoa@n+7)^0,f,c
  1610  00087C  1E3C               	comf	(dtoa@n+6)^0,f,c
  1611  00087E  1E3B               	comf	(dtoa@n+5)^0,f,c
  1612  000880  1E3A               	comf	(dtoa@n+4)^0,f,c
  1613  000882  1E39               	comf	(dtoa@n+3)^0,f,c
  1614  000884  1E38               	comf	(dtoa@n+2)^0,f,c
  1615  000886  1E37               	comf	(dtoa@n+1)^0,f,c
  1616  000888  6C36               	negf	dtoa@n^0,c
  1617  00088A  0E00               	movlw	0
  1618  00088C  2237               	addwfc	(dtoa@n+1)^0,f,c
  1619  00088E  2238               	addwfc	(dtoa@n+2)^0,f,c
  1620  000890  2239               	addwfc	(dtoa@n+3)^0,f,c
  1621  000892  223A               	addwfc	(dtoa@n+4)^0,f,c
  1622  000894  223B               	addwfc	(dtoa@n+5)^0,f,c
  1623  000896  223C               	addwfc	(dtoa@n+6)^0,f,c
  1624  000898  223D               	addwfc	(dtoa@n+7)^0,f,c
  1625  00089A                     l2085:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1628  00089A  0100               	movlb	0	; () banked
  1629  00089C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1630  00089E  EF53  F004         	goto	u1581
  1631  0008A2  EF55  F004         	goto	u1580
  1632  0008A6                     u1581:
  1633  0008A6  EF56  F004         	goto	l2089
  1634  0008AA                     u1580:
  1635  0008AA                     
  1636                           ; BSR set to: 0
  1637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1638  0008AA  9366               	bcf	_flags& (0+255),1,b
  1639  0008AC                     l2089:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1643  0008AC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1644  0008AE  EF63  F004         	goto	u1590
  1645  0008B2  5165               	movf	(_prec+1)& (0+255),w,b
  1646  0008B4  E106               	bnz	u1591
  1647  0008B6  0564               	decf	_prec& (0+255),w,b
  1648  0008B8  B0D8               	btfsc	status,0,c
  1649  0008BA  EF61  F004         	goto	u1591
  1650  0008BE  EF63  F004         	goto	u1590
  1651  0008C2                     u1591:
  1652  0008C2  EF69  F004         	goto	l1109
  1653  0008C6                     u1590:
  1654  0008C6                     
  1655                           ; BSR set to: 0
  1656  0008C6  0E00               	movlw	0
  1657  0008C8  6E31               	movwf	(dtoa@p+1)^0,c
  1658  0008CA  0E01               	movlw	1
  1659  0008CC  6E30               	movwf	dtoa@p^0,c
  1660  0008CE  EF6D  F004         	goto	l1111
  1661  0008D2                     l1109:
  1662                           
  1663                           ; BSR set to: 0
  1664  0008D2  C064  F030         	movff	_prec,dtoa@p
  1665  0008D6  C065  F031         	movff	_prec+1,dtoa@p+1
  1666  0008DA                     l1111:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1670  0008DA  C062  F032         	movff	_width,dtoa@w
  1671  0008DE  C063  F033         	movff	_width+1,dtoa@w+1
  1672  0008E2                     
  1673                           ; BSR set to: 0
  1674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1675  0008E2  5034               	movf	dtoa@s^0,w,c
  1676  0008E4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1677  0008E6  A4D8               	btfss	status,2,c
  1678  0008E8  EF78  F004         	goto	u1601
  1679  0008EC  EF7A  F004         	goto	u1600
  1680  0008F0                     u1601:
  1681  0008F0  EF81  F004         	goto	l2097
  1682  0008F4                     u1600:
  1683  0008F4                     
  1684                           ; BSR set to: 0
  1685  0008F4  A566               	btfss	_flags& (0+255),2,b
  1686  0008F6  EF7F  F004         	goto	u1611
  1687  0008FA  EF81  F004         	goto	u1610
  1688  0008FE                     u1611:
  1689  0008FE  EF84  F004         	goto	l2099
  1690  000902                     u1610:
  1691  000902                     l2097:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1695  000902  0632               	decf	dtoa@w^0,f,c
  1696  000904  A0D8               	btfss	status,0,c
  1697  000906  0633               	decf	(dtoa@w+1)^0,f,c
  1698  000908                     l2099:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1702  000908  0E00               	movlw	0
  1703  00090A  6E3F               	movwf	(dtoa@i+1)^0,c
  1704  00090C  0E1F               	movlw	31
  1705  00090E  6E3E               	movwf	dtoa@i^0,c
  1706  000910                     
  1707                           ; BSR set to: 0
  1708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1709  000910  0E00               	movlw	0
  1710  000912  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1713  000914  EF08  F005         	goto	l2113
  1714  000918                     l2103:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1717  000918  063E               	decf	dtoa@i^0,f,c
  1718  00091A  A0D8               	btfss	status,0,c
  1719  00091C  063F               	decf	(dtoa@i+1)^0,f,c
  1720  00091E                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1722  00091E  0E6B               	movlw	low _dbuf
  1723  000920  243E               	addwf	dtoa@i^0,w,c
  1724  000922  6ED9               	movwf	fsr2l,c
  1725  000924  0E00               	movlw	high _dbuf
  1726  000926  203F               	addwfc	(dtoa@i+1)^0,w,c
  1727  000928  6EDA               	movwf	fsr2h,c
  1728  00092A  C036  F001         	movff	dtoa@n,___aomod@dividend
  1729  00092E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1730  000932  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1731  000936  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1732  00093A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1733  00093E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1734  000942  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1735  000946  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1736  00094A  0E0A               	movlw	10
  1737  00094C  6E09               	movwf	___aomod@divisor^0,c
  1738  00094E  0E00               	movlw	0
  1739  000950  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1740  000952  0E00               	movlw	0
  1741  000954  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1742  000956  0E00               	movlw	0
  1743  000958  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1744  00095A  0E00               	movlw	0
  1745  00095C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1746  00095E  0E00               	movlw	0
  1747  000960  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1748  000962  0E00               	movlw	0
  1749  000964  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1750  000966  0E00               	movlw	0
  1751  000968  6E10               	movwf	(___aomod@divisor+7)^0,c
  1752  00096A  EC64  F009         	call	___aomod	;wreg free
  1753  00096E  C001  F026         	movff	?___aomod,??_dtoa
  1754  000972  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1755  000976  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1756  00097A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1757  00097E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1758  000982  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1759  000986  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1760  00098A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1761  00098E  C026  F013         	movff	??_dtoa,abs@a
  1762  000992  C028  F014         	movff	??_dtoa+2,abs@a+1
  1763  000996  EC84  F00D         	call	_abs	;wreg free
  1764  00099A  5013               	movf	?_abs^0,w,c
  1765  00099C  0F30               	addlw	48
  1766  00099E  6EDF               	movwf	indf2,c
  1767  0009A0                     
  1768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  1769  0009A0  0630               	decf	dtoa@p^0,f,c
  1770  0009A2  A0D8               	btfss	status,0,c
  1771  0009A4  0631               	decf	(dtoa@p+1)^0,f,c
  1772  0009A6                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  1774  0009A6  0632               	decf	dtoa@w^0,f,c
  1775  0009A8  A0D8               	btfss	status,0,c
  1776  0009AA  0633               	decf	(dtoa@w+1)^0,f,c
  1777  0009AC                     
  1778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1779  0009AC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1780  0009B0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1781  0009B4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1782  0009B8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1783  0009BC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1784  0009C0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1785  0009C4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1786  0009C8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1787  0009CC  0E0A               	movlw	10
  1788  0009CE  6E09               	movwf	___aodiv@divisor^0,c
  1789  0009D0  0E00               	movlw	0
  1790  0009D2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1791  0009D4  0E00               	movlw	0
  1792  0009D6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1793  0009D8  0E00               	movlw	0
  1794  0009DA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1795  0009DC  0E00               	movlw	0
  1796  0009DE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1797  0009E0  0E00               	movlw	0
  1798  0009E2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1799  0009E4  0E00               	movlw	0
  1800  0009E6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1801  0009E8  0E00               	movlw	0
  1802  0009EA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1803  0009EC  ECA0  F008         	call	___aodiv	;wreg free
  1804  0009F0  C001  F036         	movff	?___aodiv,dtoa@n
  1805  0009F4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1806  0009F8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1807  0009FC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1808  000A00  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1809  000A04  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1810  000A08  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1811  000A0C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1812  000A10                     l2113:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1815  000A10  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1816  000A12  EF13  F005         	goto	u1621
  1817  000A16  503F               	movf	(dtoa@i+1)^0,w,c
  1818  000A18  E108               	bnz	u1620
  1819  000A1A  043E               	decf	dtoa@i^0,w,c
  1820  000A1C  A0D8               	btfss	status,0,c
  1821  000A1E  EF13  F005         	goto	u1621
  1822  000A22  EF15  F005         	goto	u1620
  1823  000A26                     u1621:
  1824  000A26  EF46  F005         	goto	l2123
  1825  000A2A                     u1620:
  1826  000A2A  5036               	movf	dtoa@n^0,w,c
  1827  000A2C  1037               	iorwf	(dtoa@n+1)^0,w,c
  1828  000A2E  1038               	iorwf	(dtoa@n+2)^0,w,c
  1829  000A30  1039               	iorwf	(dtoa@n+3)^0,w,c
  1830  000A32  103A               	iorwf	(dtoa@n+4)^0,w,c
  1831  000A34  103B               	iorwf	(dtoa@n+5)^0,w,c
  1832  000A36  103C               	iorwf	(dtoa@n+6)^0,w,c
  1833  000A38  103D               	iorwf	(dtoa@n+7)^0,w,c
  1834  000A3A  A4D8               	btfss	status,2,c
  1835  000A3C  EF22  F005         	goto	u1631
  1836  000A40  EF24  F005         	goto	u1630
  1837  000A44                     u1631:
  1838  000A44  EF8C  F004         	goto	l2103
  1839  000A48                     u1630:
  1840  000A48  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1841  000A4A  EF31  F005         	goto	u1640
  1842  000A4E  5031               	movf	(dtoa@p+1)^0,w,c
  1843  000A50  E106               	bnz	u1641
  1844  000A52  0430               	decf	dtoa@p^0,w,c
  1845  000A54  B0D8               	btfsc	status,0,c
  1846  000A56  EF2F  F005         	goto	u1641
  1847  000A5A  EF31  F005         	goto	u1640
  1848  000A5E                     u1641:
  1849  000A5E  EF8C  F004         	goto	l2103
  1850  000A62                     u1640:
  1851  000A62  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1852  000A64  EF3C  F005         	goto	u1651
  1853  000A68  5033               	movf	(dtoa@w+1)^0,w,c
  1854  000A6A  E108               	bnz	u1650
  1855  000A6C  0432               	decf	dtoa@w^0,w,c
  1856  000A6E  A0D8               	btfss	status,0,c
  1857  000A70  EF3C  F005         	goto	u1651
  1858  000A74  EF3E  F005         	goto	u1650
  1859  000A78                     u1651:
  1860  000A78  EF46  F005         	goto	l2123
  1861  000A7C                     u1650:
  1862  000A7C  0100               	movlb	0	; () banked
  1863  000A7E  B366               	btfsc	_flags& (0+255),1,b
  1864  000A80  EF44  F005         	goto	u1661
  1865  000A84  EF46  F005         	goto	u1660
  1866  000A88                     u1661:
  1867  000A88  EF8C  F004         	goto	l2103
  1868  000A8C                     u1660:
  1869  000A8C                     l2123:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1872  000A8C  5034               	movf	dtoa@s^0,w,c
  1873  000A8E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1874  000A90  A4D8               	btfss	status,2,c
  1875  000A92  EF4D  F005         	goto	u1671
  1876  000A96  EF4F  F005         	goto	u1670
  1877  000A9A                     u1671:
  1878  000A9A  EF57  F005         	goto	l2127
  1879  000A9E                     u1670:
  1880  000A9E  0100               	movlb	0	; () banked
  1881  000AA0  A566               	btfss	_flags& (0+255),2,b
  1882  000AA2  EF55  F005         	goto	u1681
  1883  000AA6  EF57  F005         	goto	u1680
  1884  000AAA                     u1681:
  1885  000AAA  EF75  F005         	goto	l2137
  1886  000AAE                     u1680:
  1887  000AAE                     l2127:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  1890  000AAE  063E               	decf	dtoa@i^0,f,c
  1891  000AB0  A0D8               	btfss	status,0,c
  1892  000AB2  063F               	decf	(dtoa@i+1)^0,f,c
  1893  000AB4                     
  1894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1895  000AB4  5034               	movf	dtoa@s^0,w,c
  1896  000AB6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1897  000AB8  A4D8               	btfss	status,2,c
  1898  000ABA  EF61  F005         	goto	u1691
  1899  000ABE  EF63  F005         	goto	u1690
  1900  000AC2                     u1691:
  1901  000AC2  EF69  F005         	goto	l2133
  1902  000AC6                     u1690:
  1903  000AC6  0E00               	movlw	0
  1904  000AC8  6E2F               	movwf	(_dtoa$1000+1)^0,c
  1905  000ACA  0E2B               	movlw	43
  1906  000ACC  6E2E               	movwf	_dtoa$1000^0,c
  1907  000ACE  EF6D  F005         	goto	l2135
  1908  000AD2                     l2133:
  1909  000AD2  0E00               	movlw	0
  1910  000AD4  6E2F               	movwf	(_dtoa$1000+1)^0,c
  1911  000AD6  0E2D               	movlw	45
  1912  000AD8  6E2E               	movwf	_dtoa$1000^0,c
  1913  000ADA                     l2135:
  1914  000ADA  0E6B               	movlw	low _dbuf
  1915  000ADC  243E               	addwf	dtoa@i^0,w,c
  1916  000ADE  6ED9               	movwf	fsr2l,c
  1917  000AE0  0E00               	movlw	high _dbuf
  1918  000AE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1919  000AE4  6EDA               	movwf	fsr2h,c
  1920  000AE6  C02E  FFDF         	movff	_dtoa$1000,indf2
  1921  000AEA                     l2137:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1924  000AEA  C01C  F011         	movff	dtoa@fp,pad@fp
  1925  000AEE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1926  000AF2  0E6B               	movlw	low _dbuf
  1927  000AF4  243E               	addwf	dtoa@i^0,w,c
  1928  000AF6  6E13               	movwf	pad@buf^0,c
  1929  000AF8  0E00               	movlw	high _dbuf
  1930  000AFA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1931  000AFC  6E14               	movwf	(pad@buf+1)^0,c
  1932  000AFE  C032  F015         	movff	dtoa@w,pad@p
  1933  000B02  C033  F016         	movff	dtoa@w+1,pad@p+1
  1934  000B06  EC05  F00B         	call	_pad	;wreg free
  1935  000B0A  C011  F01C         	movff	?_pad,?_dtoa
  1936  000B0E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1937  000B12  0012               	return		;funcret
  1938  000B14                     __end_of_dtoa:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _pad *****************
  1942 ;; Defined at:
  1943 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1946 ;;		 -> sprintf@f(11), 
  1947 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1948 ;;		 -> dbuf(32), 
  1949 ;;  p               2   20[COMRAM] int 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  w               2   25[COMRAM] int 
  1952 ;;  i               2   23[COMRAM] int 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2   16[COMRAM] int 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1962 ;;      Params:         6       0       0       0       0       0       0       0       0
  1963 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1964 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1965 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1966 ;;Total ram usage:       11 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 3
  1969 ;; This function calls:
  1970 ;;		_fputc
  1971 ;;		_fputs
  1972 ;;		_strlen
  1973 ;; This function is called by:
  1974 ;;		_dtoa
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text5
  1979  00160A                     __ptext5:
  1980                           	callstack 0
  1981  00160A                     _pad:
  1982                           	callstack 23
  1983  00160A                     
  1984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1985  00160A  0100               	movlb	0	; () banked
  1986  00160C  A166               	btfss	_flags& (0+255),0,b
  1987  00160E  EF0B  F00B         	goto	u1501
  1988  001612  EF0D  F00B         	goto	u1500
  1989  001616                     u1501:
  1990  001616  EF17  F00B         	goto	l2037
  1991  00161A                     u1500:
  1992  00161A                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1995  00161A  C013  F00A         	movff	pad@buf,fputs@s
  1996  00161E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1997  001622  C011  F00C         	movff	pad@fp,fputs@fp
  1998  001626  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1999  00162A  EC62  F00D         	call	_fputs	;wreg free
  2000  00162E                     l2037:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2003  00162E  BE16               	btfsc	(pad@p+1)^0,7,c
  2004  001630  EF1C  F00B         	goto	u1511
  2005  001634  EF1E  F00B         	goto	u1510
  2006  001638                     u1511:
  2007  001638  EF24  F00B         	goto	l2041
  2008  00163C                     u1510:
  2009  00163C  C015  F01A         	movff	pad@p,pad@w
  2010  001640  C016  F01B         	movff	pad@p+1,pad@w+1
  2011  001644  EF28  F00B         	goto	l1098
  2012  001648                     l2041:
  2013  001648  0E00               	movlw	0
  2014  00164A  6E1B               	movwf	(pad@w+1)^0,c
  2015  00164C  0E00               	movlw	0
  2016  00164E  6E1A               	movwf	pad@w^0,c
  2017  001650                     l1098:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2020  001650  0E00               	movlw	0
  2021  001652  6E19               	movwf	(pad@i+1)^0,c
  2022  001654  0E00               	movlw	0
  2023  001656  6E18               	movwf	pad@i^0,c
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2026  001658  EF3A  F00B         	goto	l2047
  2027  00165C                     l2043:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2030  00165C  0E00               	movlw	0
  2031  00165E  6E02               	movwf	(fputc@c+1)^0,c
  2032  001660  0E20               	movlw	32
  2033  001662  6E01               	movwf	fputc@c^0,c
  2034  001664  C011  F003         	movff	pad@fp,fputc@fp
  2035  001668  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2036  00166C  ECA0  F00A         	call	_fputc	;wreg free
  2037  001670                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2039  001670  4A18               	infsnz	pad@i^0,f,c
  2040  001672  2A19               	incf	(pad@i+1)^0,f,c
  2041  001674                     l2047:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2044  001674  501A               	movf	pad@w^0,w,c
  2045  001676  5C18               	subwf	pad@i^0,w,c
  2046  001678  5019               	movf	(pad@i+1)^0,w,c
  2047  00167A  0A80               	xorlw	128
  2048  00167C  6E17               	movwf	??_pad^0,c
  2049  00167E  501B               	movf	(pad@w+1)^0,w,c
  2050  001680  0A80               	xorlw	128
  2051  001682  5817               	subwfb	??_pad^0,w,c
  2052  001684  A0D8               	btfss	status,0,c
  2053  001686  EF47  F00B         	goto	u1521
  2054  00168A  EF49  F00B         	goto	u1520
  2055  00168E                     u1521:
  2056  00168E  EF2E  F00B         	goto	l2043
  2057  001692                     u1520:
  2058  001692                     
  2059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2060  001692  0100               	movlb	0	; () banked
  2061  001694  B166               	btfsc	_flags& (0+255),0,b
  2062  001696  EF4F  F00B         	goto	u1531
  2063  00169A  EF51  F00B         	goto	u1530
  2064  00169E                     u1531:
  2065  00169E  EF5B  F00B         	goto	l2051
  2066  0016A2                     u1530:
  2067  0016A2                     
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2070  0016A2  C013  F00A         	movff	pad@buf,fputs@s
  2071  0016A6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2072  0016AA  C011  F00C         	movff	pad@fp,fputs@fp
  2073  0016AE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2074  0016B2  EC62  F00D         	call	_fputs	;wreg free
  2075  0016B6                     l2051:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2078  0016B6  C013  F001         	movff	pad@buf,strlen@s
  2079  0016BA  C014  F002         	movff	pad@buf+1,strlen@s+1
  2080  0016BE  ECFE  F00D         	call	_strlen	;wreg free
  2081  0016C2  501A               	movf	pad@w^0,w,c
  2082  0016C4  2401               	addwf	?_strlen^0,w,c
  2083  0016C6  6E11               	movwf	?_pad^0,c
  2084  0016C8  501B               	movf	(pad@w+1)^0,w,c
  2085  0016CA  2002               	addwfc	(?_strlen+1)^0,w,c
  2086  0016CC  6E12               	movwf	(?_pad+1)^0,c
  2087  0016CE  0012               	return		;funcret
  2088  0016D0                     __end_of_pad:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _strlen *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2096 ;;		 -> dbuf(32), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2099 ;;		 -> dbuf(32), 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2    0[COMRAM] unsigned int 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         2       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2112 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2113 ;;Total ram usage:        4 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_pad
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text6
  2123  001BFC                     __ptext6:
  2124                           	callstack 0
  2125  001BFC                     _strlen:
  2126                           	callstack 25
  2127  001BFC  C001  F003         	movff	strlen@s,strlen@a
  2128  001C00  C002  F004         	movff	strlen@s+1,strlen@a+1
  2129  001C04  EF06  F00E         	goto	l1947
  2130  001C08                     l1945:
  2131  001C08  4A01               	infsnz	strlen@s^0,f,c
  2132  001C0A  2A02               	incf	(strlen@s+1)^0,f,c
  2133  001C0C                     l1947:
  2134  001C0C  C001  FFD9         	movff	strlen@s,fsr2l
  2135  001C10  C002  FFDA         	movff	strlen@s+1,fsr2h
  2136  001C14  50DF               	movf	indf2,w,c
  2137  001C16  A4D8               	btfss	status,2,c
  2138  001C18  EF10  F00E         	goto	u1361
  2139  001C1C  EF12  F00E         	goto	u1360
  2140  001C20                     u1361:
  2141  001C20  EF04  F00E         	goto	l1945
  2142  001C24                     u1360:
  2143  001C24  5003               	movf	strlen@a^0,w,c
  2144  001C26  5C01               	subwf	strlen@s^0,w,c
  2145  001C28  6E01               	movwf	?_strlen^0,c
  2146  001C2A  5004               	movf	(strlen@a+1)^0,w,c
  2147  001C2C  5802               	subwfb	(strlen@s+1)^0,w,c
  2148  001C2E  6E02               	movwf	(?_strlen+1)^0,c
  2149  001C30  0012               	return		;funcret
  2150  001C32                     __end_of_strlen:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _fputs *****************
  2154 ;; Defined at:
  2155 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2158 ;;		 -> dbuf(32), 
  2159 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2160 ;;		 -> sprintf@f(11), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               2   14[COMRAM] int 
  2163 ;;  c               1   13[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2    9[COMRAM] int 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         4       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        7 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 2
  2180 ;; This function calls:
  2181 ;;		_fputc
  2182 ;; This function is called by:
  2183 ;;		_pad
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text7
  2188  001AC4                     __ptext7:
  2189                           	callstack 0
  2190  001AC4                     _fputs:
  2191                           	callstack 23
  2192  001AC4  0E00               	movlw	0
  2193  001AC6  6E10               	movwf	(fputs@i+1)^0,c
  2194  001AC8  0E00               	movlw	0
  2195  001ACA  6E0F               	movwf	fputs@i^0,c
  2196  001ACC  EF73  F00D         	goto	l1941
  2197  001AD0                     l1937:
  2198  001AD0  C00E  F001         	movff	fputs@c,fputc@c
  2199  001AD4  6A02               	clrf	(fputc@c+1)^0,c
  2200  001AD6  C00C  F003         	movff	fputs@fp,fputc@fp
  2201  001ADA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2202  001ADE  ECA0  F00A         	call	_fputc	;wreg free
  2203  001AE2  4A0F               	infsnz	fputs@i^0,f,c
  2204  001AE4  2A10               	incf	(fputs@i+1)^0,f,c
  2205  001AE6                     l1941:
  2206  001AE6  500F               	movf	fputs@i^0,w,c
  2207  001AE8  240A               	addwf	fputs@s^0,w,c
  2208  001AEA  6ED9               	movwf	fsr2l,c
  2209  001AEC  5010               	movf	(fputs@i+1)^0,w,c
  2210  001AEE  200B               	addwfc	(fputs@s+1)^0,w,c
  2211  001AF0  6EDA               	movwf	fsr2h,c
  2212  001AF2  50DF               	movf	indf2,w,c
  2213  001AF4  6E0E               	movwf	fputs@c^0,c
  2214  001AF6  500E               	movf	fputs@c^0,w,c
  2215  001AF8  A4D8               	btfss	status,2,c
  2216  001AFA  EF81  F00D         	goto	u1351
  2217  001AFE  EF83  F00D         	goto	u1350
  2218  001B02                     u1351:
  2219  001B02  EF68  F00D         	goto	l1937
  2220  001B06                     u1350:
  2221  001B06  0012               	return		;funcret
  2222  001B08                     __end_of_fputs:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _fputc *****************
  2226 ;; Defined at:
  2227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  c               2    0[COMRAM] int 
  2230 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2231 ;;		 -> sprintf@f(11), 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[COMRAM] int 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         4       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        9 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 1
  2250 ;; This function calls:
  2251 ;;		_putch
  2252 ;; This function is called by:
  2253 ;;		_pad
  2254 ;;		_vfpfcnvrt
  2255 ;;		_fputs
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text8
  2260  001540                     __ptext8:
  2261                           	callstack 0
  2262  001540                     _fputc:
  2263                           	callstack 26
  2264  001540  5003               	movf	fputc@fp^0,w,c
  2265  001542  1004               	iorwf	(fputc@fp+1)^0,w,c
  2266  001544  B4D8               	btfsc	status,2,c
  2267  001546  EFA7  F00A         	goto	u1311
  2268  00154A  EFA9  F00A         	goto	u1310
  2269  00154E                     u1311:
  2270  00154E  EFB2  F00A         	goto	l1925
  2271  001552                     u1310:
  2272  001552  5003               	movf	fputc@fp^0,w,c
  2273  001554  1004               	iorwf	(fputc@fp+1)^0,w,c
  2274  001556  A4D8               	btfss	status,2,c
  2275  001558  EFB0  F00A         	goto	u1321
  2276  00155C  EFB2  F00A         	goto	u1320
  2277  001560                     u1321:
  2278  001560  EFB7  F00A         	goto	l1927
  2279  001564                     u1320:
  2280  001564                     l1925:
  2281  001564  5001               	movf	fputc@c^0,w,c
  2282  001566  EC95  F00E         	call	_putch
  2283  00156A  EF04  F00B         	goto	l1162
  2284  00156E                     l1927:
  2285  00156E  EE20 F009          	lfsr	2,9
  2286  001572  5003               	movf	fputc@fp^0,w,c
  2287  001574  26D9               	addwf	fsr2l,f,c
  2288  001576  5004               	movf	(fputc@fp+1)^0,w,c
  2289  001578  22DA               	addwfc	fsr2h,f,c
  2290  00157A  50DE               	movf	postinc2,w,c
  2291  00157C  10DE               	iorwf	postinc2,w,c
  2292  00157E  B4D8               	btfsc	status,2,c
  2293  001580  EFC4  F00A         	goto	u1331
  2294  001584  EFC6  F00A         	goto	u1330
  2295  001588                     u1331:
  2296  001588  EFE1  F00A         	goto	l1931
  2297  00158C                     u1330:
  2298  00158C  EE20 F009          	lfsr	2,9
  2299  001590  5003               	movf	fputc@fp^0,w,c
  2300  001592  26D9               	addwf	fsr2l,f,c
  2301  001594  5004               	movf	(fputc@fp+1)^0,w,c
  2302  001596  22DA               	addwfc	fsr2h,f,c
  2303  001598  EE10 F003          	lfsr	1,3
  2304  00159C  5003               	movf	fputc@fp^0,w,c
  2305  00159E  26E1               	addwf	fsr1l,f,c
  2306  0015A0  5004               	movf	(fputc@fp+1)^0,w,c
  2307  0015A2  22E2               	addwfc	fsr1h,f,c
  2308  0015A4  50DE               	movf	postinc2,w,c
  2309  0015A6  5CE6               	subwf	postinc1,w,c
  2310  0015A8  50E6               	movf	postinc1,w,c
  2311  0015AA  0A80               	xorlw	128
  2312  0015AC  6E09               	movwf	(??_fputc+4)^0,c
  2313  0015AE  50DE               	movf	postinc2,w,c
  2314  0015B0  0A80               	xorlw	128
  2315  0015B2  5809               	subwfb	(??_fputc+4)^0,w,c
  2316  0015B4  B0D8               	btfsc	status,0,c
  2317  0015B6  EFDF  F00A         	goto	u1341
  2318  0015BA  EFE1  F00A         	goto	u1340
  2319  0015BE                     u1341:
  2320  0015BE  EF04  F00B         	goto	l1162
  2321  0015C2                     u1340:
  2322  0015C2                     l1931:
  2323  0015C2  EE20 F003          	lfsr	2,3
  2324  0015C6  5003               	movf	fputc@fp^0,w,c
  2325  0015C8  26D9               	addwf	fsr2l,f,c
  2326  0015CA  5004               	movf	(fputc@fp+1)^0,w,c
  2327  0015CC  22DA               	addwfc	fsr2h,f,c
  2328  0015CE  CFDE F005          	movff	postinc2,??_fputc
  2329  0015D2  CFDD F006          	movff	postdec2,??_fputc+1
  2330  0015D6  C003  FFD9         	movff	fputc@fp,fsr2l
  2331  0015DA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2332  0015DE  CFDE F007          	movff	postinc2,??_fputc+2
  2333  0015E2  CFDD F008          	movff	postdec2,??_fputc+3
  2334  0015E6  5005               	movf	??_fputc^0,w,c
  2335  0015E8  2407               	addwf	(??_fputc+2)^0,w,c
  2336  0015EA  6ED9               	movwf	fsr2l,c
  2337  0015EC  5006               	movf	(??_fputc+1)^0,w,c
  2338  0015EE  2008               	addwfc	(??_fputc+3)^0,w,c
  2339  0015F0  6EDA               	movwf	fsr2h,c
  2340  0015F2  C001  FFDF         	movff	fputc@c,indf2
  2341  0015F6  EE20 F003          	lfsr	2,3
  2342  0015FA  5003               	movf	fputc@fp^0,w,c
  2343  0015FC  26D9               	addwf	fsr2l,f,c
  2344  0015FE  5004               	movf	(fputc@fp+1)^0,w,c
  2345  001600  22DA               	addwfc	fsr2h,f,c
  2346  001602  2ADE               	incf	postinc2,f,c
  2347  001604  0E00               	movlw	0
  2348  001606  22DD               	addwfc	postdec2,f,c
  2349  001608                     l1162:
  2350  001608  0012               	return		;funcret
  2351  00160A                     __end_of_fputc:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _putch *****************
  2355 ;; Defined at:
  2356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  c               1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  c               1    0[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        0 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_fputc
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text9
  2384  001D2A                     __ptext9:
  2385                           	callstack 0
  2386  001D2A                     _putch:
  2387                           	callstack 26
  2388  001D2A  0012               	return		;funcret
  2389  001D2C                     __end_of_putch:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _abs *****************
  2393 ;; Defined at:
  2394 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  a               2   18[COMRAM] int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2   18[COMRAM] int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         2       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        4 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_dtoa
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text10
  2422  001B08                     __ptext10:
  2423                           	callstack 0
  2424  001B08                     _abs:
  2425                           	callstack 26
  2426  001B08  BE14               	btfsc	(abs@a+1)^0,7,c
  2427  001B0A  EF91  F00D         	goto	u1540
  2428  001B0E  5014               	movf	(abs@a+1)^0,w,c
  2429  001B10  E106               	bnz	u1541
  2430  001B12  0413               	decf	abs@a^0,w,c
  2431  001B14  B0D8               	btfsc	status,0,c
  2432  001B16  EF8F  F00D         	goto	u1541
  2433  001B1A  EF91  F00D         	goto	u1540
  2434  001B1E                     u1541:
  2435  001B1E  EF9F  F00D         	goto	l1147
  2436  001B22                     u1540:
  2437  001B22  C013  F015         	movff	abs@a,??_abs
  2438  001B26  C014  F016         	movff	abs@a+1,??_abs+1
  2439  001B2A  1E15               	comf	??_abs^0,f,c
  2440  001B2C  1E16               	comf	(??_abs+1)^0,f,c
  2441  001B2E  4A15               	infsnz	??_abs^0,f,c
  2442  001B30  2A16               	incf	(??_abs+1)^0,f,c
  2443  001B32  C015  F013         	movff	??_abs,?_abs
  2444  001B36  C016  F014         	movff	??_abs+1,?_abs+1
  2445  001B3A  EFA3  F00D         	goto	l1150
  2446  001B3E                     l1147:
  2447  001B3E  C013  F013         	movff	abs@a,?_abs
  2448  001B42  C014  F014         	movff	abs@a+1,?_abs+1
  2449  001B46                     l1150:
  2450  001B46  0012               	return		;funcret
  2451  001B48                     __end_of_abs:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function ___aomod *****************
  2455 ;; Defined at:
  2456 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  dividend        8    0[COMRAM] long long 
  2459 ;;  divisor         8    8[COMRAM] long long 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  sign            1   17[COMRAM] unsigned char 
  2462 ;;  counter         1   16[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  8    0[COMRAM] long long 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:        16       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:       18 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_dtoa
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text11
  2486  0012C8                     __ptext11:
  2487                           	callstack 0
  2488  0012C8                     ___aomod:
  2489                           	callstack 26
  2490  0012C8  0E00               	movlw	0
  2491  0012CA  6E12               	movwf	___aomod@sign^0,c
  2492  0012CC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2493  0012CE  EF6D  F009         	goto	u1440
  2494  0012D2  EF6B  F009         	goto	u1441
  2495  0012D6                     u1441:
  2496  0012D6  EF7F  F009         	goto	l2005
  2497  0012DA                     u1440:
  2498  0012DA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2499  0012DC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2500  0012DE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2501  0012E0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2502  0012E2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2503  0012E4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2504  0012E6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2505  0012E8  6C01               	negf	___aomod@dividend^0,c
  2506  0012EA  0E00               	movlw	0
  2507  0012EC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2508  0012EE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2509  0012F0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2510  0012F2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2511  0012F4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2512  0012F6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2513  0012F8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2514  0012FA  0E01               	movlw	1
  2515  0012FC  6E12               	movwf	___aomod@sign^0,c
  2516  0012FE                     l2005:
  2517  0012FE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2518  001300  EF86  F009         	goto	u1450
  2519  001304  EF84  F009         	goto	u1451
  2520  001308                     u1451:
  2521  001308  EF96  F009         	goto	l2009
  2522  00130C                     u1450:
  2523  00130C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2524  00130E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2525  001310  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2526  001312  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2527  001314  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2528  001316  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2529  001318  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2530  00131A  6C09               	negf	___aomod@divisor^0,c
  2531  00131C  0E00               	movlw	0
  2532  00131E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2533  001320  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2534  001322  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2535  001324  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2536  001326  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2537  001328  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2538  00132A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2539  00132C                     l2009:
  2540  00132C  5009               	movf	___aomod@divisor^0,w,c
  2541  00132E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2542  001330  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2543  001332  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2544  001334  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2545  001336  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2546  001338  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2547  00133A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2548  00133C  B4D8               	btfsc	status,2,c
  2549  00133E  EFA3  F009         	goto	u1461
  2550  001342  EFA5  F009         	goto	u1460
  2551  001346                     u1461:
  2552  001346  EFED  F009         	goto	l2025
  2553  00134A                     u1460:
  2554  00134A  0E01               	movlw	1
  2555  00134C  6E11               	movwf	___aomod@counter^0,c
  2556  00134E  EFB3  F009         	goto	l2015
  2557  001352                     l2013:
  2558  001352  90D8               	bcf	status,0,c
  2559  001354  3609               	rlcf	___aomod@divisor^0,f,c
  2560  001356  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2561  001358  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2562  00135A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2563  00135C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2564  00135E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2565  001360  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2566  001362  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2567  001364  2A11               	incf	___aomod@counter^0,f,c
  2568  001366                     l2015:
  2569  001366  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2570  001368  EFB8  F009         	goto	u1471
  2571  00136C  EFBA  F009         	goto	u1470
  2572  001370                     u1471:
  2573  001370  EFA9  F009         	goto	l2013
  2574  001374                     u1470:
  2575  001374                     l2017:
  2576  001374  5009               	movf	___aomod@divisor^0,w,c
  2577  001376  5C01               	subwf	___aomod@dividend^0,w,c
  2578  001378  500A               	movf	(___aomod@divisor+1)^0,w,c
  2579  00137A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2580  00137C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2581  00137E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2582  001380  500C               	movf	(___aomod@divisor+3)^0,w,c
  2583  001382  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2584  001384  500D               	movf	(___aomod@divisor+4)^0,w,c
  2585  001386  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2586  001388  500E               	movf	(___aomod@divisor+5)^0,w,c
  2587  00138A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2588  00138C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2589  00138E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2590  001390  5010               	movf	(___aomod@divisor+7)^0,w,c
  2591  001392  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2592  001394  A0D8               	btfss	status,0,c
  2593  001396  EFCF  F009         	goto	u1481
  2594  00139A  EFD1  F009         	goto	u1480
  2595  00139E                     u1481:
  2596  00139E  EFE1  F009         	goto	l2021
  2597  0013A2                     u1480:
  2598  0013A2  5009               	movf	___aomod@divisor^0,w,c
  2599  0013A4  5E01               	subwf	___aomod@dividend^0,f,c
  2600  0013A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  2601  0013A8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2602  0013AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  2603  0013AC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2604  0013AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  2605  0013B0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2606  0013B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  2607  0013B4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2608  0013B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  2609  0013B8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2610  0013BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  2611  0013BC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2612  0013BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  2613  0013C0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2614  0013C2                     l2021:
  2615  0013C2  90D8               	bcf	status,0,c
  2616  0013C4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2617  0013C6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2618  0013C8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2619  0013CA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2620  0013CC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2621  0013CE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2622  0013D0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2623  0013D2  3209               	rrcf	___aomod@divisor^0,f,c
  2624  0013D4  2E11               	decfsz	___aomod@counter^0,f,c
  2625  0013D6  EFBA  F009         	goto	l2017
  2626  0013DA                     l2025:
  2627  0013DA  5012               	movf	___aomod@sign^0,w,c
  2628  0013DC  B4D8               	btfsc	status,2,c
  2629  0013DE  EFF3  F009         	goto	u1491
  2630  0013E2  EFF5  F009         	goto	u1490
  2631  0013E6                     u1491:
  2632  0013E6  EF05  F00A         	goto	l2029
  2633  0013EA                     u1490:
  2634  0013EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2635  0013EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2636  0013EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2637  0013F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2638  0013F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2639  0013F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2640  0013F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2641  0013F8  6C01               	negf	___aomod@dividend^0,c
  2642  0013FA  0E00               	movlw	0
  2643  0013FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2644  0013FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2645  001400  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2646  001402  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2647  001404  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2648  001406  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2649  001408  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2650  00140A                     l2029:
  2651  00140A  C001  F001         	movff	___aomod@dividend,?___aomod
  2652  00140E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2653  001412  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2654  001416  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2655  00141A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2656  00141E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2657  001422  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2658  001426  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2659  00142A  0012               	return		;funcret
  2660  00142C                     __end_of___aomod:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function ___aodiv *****************
  2664 ;; Defined at:
  2665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  dividend        8    0[COMRAM] long long 
  2668 ;;  divisor         8    8[COMRAM] long long 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  quotient        8   18[COMRAM] long long 
  2671 ;;  sign            1   17[COMRAM] unsigned char 
  2672 ;;  counter         1   16[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  8    0[COMRAM] long long 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:        16       0       0       0       0       0       0       0       0
  2683 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:       26 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_dtoa
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text12
  2696  001140                     __ptext12:
  2697                           	callstack 0
  2698  001140                     ___aodiv:
  2699                           	callstack 26
  2700  001140  0E00               	movlw	0
  2701  001142  6E12               	movwf	___aodiv@sign^0,c
  2702  001144  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2703  001146  EFA9  F008         	goto	u1370
  2704  00114A  EFA7  F008         	goto	u1371
  2705  00114E                     u1371:
  2706  00114E  EFBB  F008         	goto	l1961
  2707  001152                     u1370:
  2708  001152  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2709  001154  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2710  001156  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2711  001158  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2712  00115A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2713  00115C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2714  00115E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2715  001160  6C09               	negf	___aodiv@divisor^0,c
  2716  001162  0E00               	movlw	0
  2717  001164  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2718  001166  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2719  001168  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2720  00116A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2721  00116C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2722  00116E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2723  001170  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2724  001172  0E01               	movlw	1
  2725  001174  6E12               	movwf	___aodiv@sign^0,c
  2726  001176                     l1961:
  2727  001176  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2728  001178  EFC2  F008         	goto	u1380
  2729  00117C  EFC0  F008         	goto	u1381
  2730  001180                     u1381:
  2731  001180  EFD4  F008         	goto	l1967
  2732  001184                     u1380:
  2733  001184  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2734  001186  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2735  001188  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2736  00118A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2737  00118C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2738  00118E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2739  001190  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2740  001192  6C01               	negf	___aodiv@dividend^0,c
  2741  001194  0E00               	movlw	0
  2742  001196  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2743  001198  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2744  00119A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2745  00119C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2746  00119E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2747  0011A0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2748  0011A2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2749  0011A4  0E01               	movlw	1
  2750  0011A6  1A12               	xorwf	___aodiv@sign^0,f,c
  2751  0011A8                     l1967:
  2752  0011A8  EE20  F013         	lfsr	2,___aodiv@quotient
  2753  0011AC  0E07               	movlw	7
  2754  0011AE                     u1391:
  2755  0011AE  6ADE               	clrf	postinc2,c
  2756  0011B0  06E8               	decf	wreg,f,c
  2757  0011B2  E2FD               	bc	u1391
  2758  0011B4  5009               	movf	___aodiv@divisor^0,w,c
  2759  0011B6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2760  0011B8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2761  0011BA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2762  0011BC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2763  0011BE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2764  0011C0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2765  0011C2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2766  0011C4  B4D8               	btfsc	status,2,c
  2767  0011C6  EFE7  F008         	goto	u1401
  2768  0011CA  EFE9  F008         	goto	u1400
  2769  0011CE                     u1401:
  2770  0011CE  EF3B  F009         	goto	l1989
  2771  0011D2                     u1400:
  2772  0011D2  0E01               	movlw	1
  2773  0011D4  6E11               	movwf	___aodiv@counter^0,c
  2774  0011D6  EFF7  F008         	goto	l1975
  2775  0011DA                     l1973:
  2776  0011DA  90D8               	bcf	status,0,c
  2777  0011DC  3609               	rlcf	___aodiv@divisor^0,f,c
  2778  0011DE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2779  0011E0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2780  0011E2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2781  0011E4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2782  0011E6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2783  0011E8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2784  0011EA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2785  0011EC  2A11               	incf	___aodiv@counter^0,f,c
  2786  0011EE                     l1975:
  2787  0011EE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2788  0011F0  EFFC  F008         	goto	u1411
  2789  0011F4  EFFE  F008         	goto	u1410
  2790  0011F8                     u1411:
  2791  0011F8  EFED  F008         	goto	l1973
  2792  0011FC                     u1410:
  2793  0011FC                     l1977:
  2794  0011FC  90D8               	bcf	status,0,c
  2795  0011FE  3613               	rlcf	___aodiv@quotient^0,f,c
  2796  001200  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2797  001202  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2798  001204  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2799  001206  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2800  001208  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2801  00120A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2802  00120C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2803  00120E  5009               	movf	___aodiv@divisor^0,w,c
  2804  001210  5C01               	subwf	___aodiv@dividend^0,w,c
  2805  001212  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2806  001214  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2807  001216  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2808  001218  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2809  00121A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2810  00121C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2811  00121E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2812  001220  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2813  001222  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2814  001224  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2815  001226  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2816  001228  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2817  00122A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2818  00122C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2819  00122E  A0D8               	btfss	status,0,c
  2820  001230  EF1C  F009         	goto	u1421
  2821  001234  EF1E  F009         	goto	u1420
  2822  001238                     u1421:
  2823  001238  EF2F  F009         	goto	l1985
  2824  00123C                     u1420:
  2825  00123C  5009               	movf	___aodiv@divisor^0,w,c
  2826  00123E  5E01               	subwf	___aodiv@dividend^0,f,c
  2827  001240  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2828  001242  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2829  001244  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2830  001246  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2831  001248  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2832  00124A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2833  00124C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2834  00124E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2835  001250  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2836  001252  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2837  001254  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2838  001256  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2839  001258  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2840  00125A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2841  00125C  8013               	bsf	___aodiv@quotient^0,0,c
  2842  00125E                     l1985:
  2843  00125E  90D8               	bcf	status,0,c
  2844  001260  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2845  001262  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2846  001264  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2847  001266  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2848  001268  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2849  00126A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2850  00126C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2851  00126E  3209               	rrcf	___aodiv@divisor^0,f,c
  2852  001270  2E11               	decfsz	___aodiv@counter^0,f,c
  2853  001272  EFFE  F008         	goto	l1977
  2854  001276                     l1989:
  2855  001276  5012               	movf	___aodiv@sign^0,w,c
  2856  001278  B4D8               	btfsc	status,2,c
  2857  00127A  EF41  F009         	goto	u1431
  2858  00127E  EF43  F009         	goto	u1430
  2859  001282                     u1431:
  2860  001282  EF53  F009         	goto	l1993
  2861  001286                     u1430:
  2862  001286  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2863  001288  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2864  00128A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2865  00128C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2866  00128E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2867  001290  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2868  001292  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2869  001294  6C13               	negf	___aodiv@quotient^0,c
  2870  001296  0E00               	movlw	0
  2871  001298  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2872  00129A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2873  00129C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2874  00129E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2875  0012A0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2876  0012A2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2877  0012A4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2878  0012A6                     l1993:
  2879  0012A6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2880  0012AA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2881  0012AE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2882  0012B2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2883  0012B6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2884  0012BA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2885  0012BE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2886  0012C2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2887  0012C6  0012               	return		;funcret
  2888  0012C8                     __end_of___aodiv:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _TemperaturaDigitada *****************
  2892 ;; Defined at:
  2893 ;;		line 112 in file "Main_Invernadero.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  2896 ;;		 -> main@Hume(2), main@Tempe(2), 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  Decena          2   13[COMRAM] int 
  2899 ;;  Resultado       2   11[COMRAM] int 
  2900 ;;  Unidad          2    9[COMRAM] int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    6[COMRAM] int 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         2       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2913 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        9 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 1
  2917 ;; This function calls:
  2918 ;;		___wmul
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text13
  2925  00174E                     __ptext13:
  2926                           	callstack 0
  2927  00174E                     _TemperaturaDigitada:
  2928                           	callstack 29
  2929  00174E                     
  2930                           ;Main_Invernadero.c: 114:     int Unidad = 0;
  2931  00174E  0E00               	movlw	0
  2932  001750  6E0B               	movwf	(TemperaturaDigitada@Unidad+1)^0,c
  2933  001752  0E00               	movlw	0
  2934  001754  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2935                           
  2936                           ;Main_Invernadero.c: 115:     int Resultado=0;
  2937  001756  0E00               	movlw	0
  2938  001758  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2939  00175A  0E00               	movlw	0
  2940  00175C  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2941  00175E                     
  2942                           ;Main_Invernadero.c: 116:     Decena = prmTemperatura[0]-'0';
  2943  00175E  C007  FFD9         	movff	TemperaturaDigitada@prmTemperatura,fsr2l
  2944  001762  C008  FFDA         	movff	TemperaturaDigitada@prmTemperatura+1,fsr2h
  2945  001766  50DF               	movf	indf2,w,c
  2946  001768  6E09               	movwf	??_TemperaturaDigitada^0,c
  2947  00176A  0ED0               	movlw	208
  2948  00176C  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2949  00176E  6E0E               	movwf	TemperaturaDigitada@Decena^0,c
  2950  001770  6A0F               	clrf	(TemperaturaDigitada@Decena+1)^0,c
  2951  001772  0EFF               	movlw	255
  2952  001774  220F               	addwfc	(TemperaturaDigitada@Decena+1)^0,f,c
  2953  001776                     
  2954                           ;Main_Invernadero.c: 117:     Unidad = prmTemperatura[1]-'0';
  2955  001776  EE20 F001          	lfsr	2,1
  2956  00177A  5007               	movf	TemperaturaDigitada@prmTemperatura^0,w,c
  2957  00177C  26D9               	addwf	fsr2l,f,c
  2958  00177E  5008               	movf	(TemperaturaDigitada@prmTemperatura+1)^0,w,c
  2959  001780  22DA               	addwfc	fsr2h,f,c
  2960  001782  50DF               	movf	indf2,w,c
  2961  001784  6E09               	movwf	??_TemperaturaDigitada^0,c
  2962  001786  0ED0               	movlw	208
  2963  001788  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2964  00178A  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2965  00178C  6A0B               	clrf	(TemperaturaDigitada@Unidad+1)^0,c
  2966  00178E  0EFF               	movlw	255
  2967  001790  220B               	addwfc	(TemperaturaDigitada@Unidad+1)^0,f,c
  2968  001792                     
  2969                           ;Main_Invernadero.c: 119:     Decena = Decena * 10;
  2970  001792  C00E  F001         	movff	TemperaturaDigitada@Decena,___wmul@multiplier
  2971  001796  C00F  F002         	movff	TemperaturaDigitada@Decena+1,___wmul@multiplier+1
  2972  00179A  0E00               	movlw	0
  2973  00179C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2974  00179E  0E0A               	movlw	10
  2975  0017A0  6E03               	movwf	___wmul@multiplicand^0,c
  2976  0017A2  EC5E  F00E         	call	___wmul	;wreg free
  2977  0017A6  C001  F00E         	movff	?___wmul,TemperaturaDigitada@Decena
  2978  0017AA  C002  F00F         	movff	?___wmul+1,TemperaturaDigitada@Decena+1
  2979  0017AE                     
  2980                           ;Main_Invernadero.c: 120:     Resultado = Decena + Unidad;
  2981  0017AE  500A               	movf	TemperaturaDigitada@Unidad^0,w,c
  2982  0017B0  240E               	addwf	TemperaturaDigitada@Decena^0,w,c
  2983  0017B2  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2984  0017B4  500B               	movf	(TemperaturaDigitada@Unidad+1)^0,w,c
  2985  0017B6  200F               	addwfc	(TemperaturaDigitada@Decena+1)^0,w,c
  2986  0017B8  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2987  0017BA                     
  2988                           ;Main_Invernadero.c: 122:     return Resultado;
  2989  0017BA  C00C  F007         	movff	TemperaturaDigitada@Resultado,?_TemperaturaDigitada
  2990  0017BE  C00D  F008         	movff	TemperaturaDigitada@Resultado+1,?_TemperaturaDigitada+1
  2991  0017C2  0012               	return		;funcret
  2992  0017C4                     __end_of_TemperaturaDigitada:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function ___wmul *****************
  2996 ;; Defined at:
  2997 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  multiplier      2    0[COMRAM] unsigned int 
  3000 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  product         2    4[COMRAM] unsigned int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    0[COMRAM] unsigned int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, prodl, prodh
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         4       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        6 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_TemperaturaDigitada
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text14
  3026  001CBC                     __ptext14:
  3027                           	callstack 0
  3028  001CBC                     ___wmul:
  3029                           	callstack 29
  3030  001CBC  5001               	movf	___wmul@multiplier^0,w,c
  3031  001CBE  0203               	mulwf	___wmul@multiplicand^0,c
  3032  001CC0  CFF3 F005          	movff	prodl,___wmul@product
  3033  001CC4  CFF4 F006          	movff	prodh,___wmul@product+1
  3034  001CC8  5001               	movf	___wmul@multiplier^0,w,c
  3035  001CCA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3036  001CCC  50F3               	movf	243,w,c
  3037  001CCE  2606               	addwf	(___wmul@product+1)^0,f,c
  3038  001CD0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3039  001CD2  0203               	mulwf	___wmul@multiplicand^0,c
  3040  001CD4  50F3               	movf	243,w,c
  3041  001CD6  2606               	addwf	(___wmul@product+1)^0,f,c
  3042  001CD8  C005  F001         	movff	___wmul@product,?___wmul
  3043  001CDC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3044  001CE0  0012               	return		;funcret
  3045  001CE2                     __end_of___wmul:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _PedirDato *****************
  3049 ;; Defined at:
  3050 ;;		line 139 in file "Main_Invernadero.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3053 ;;		 -> STR_2(13), STR_1(14), 
  3054 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3055 ;;		 -> main@Hume(2), main@Tempe(2), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  i               2   16[COMRAM] int 
  3058 ;;  tecla           1   15[COMRAM] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3068 ;;      Params:         4       0       0       0       0       0       0       0       0
  3069 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3070 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3071 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3072 ;;Total ram usage:        9 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 3
  3075 ;; This function calls:
  3076 ;;		_LCD_Char
  3077 ;;		_LCD_Clear
  3078 ;;		_LCD_Command
  3079 ;;		_LCD_String_xy
  3080 ;;		_keyfind
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text15
  3087  0016D0                     __ptext15:
  3088                           	callstack 0
  3089  0016D0                     _PedirDato:
  3090                           	callstack 27
  3091  0016D0                     
  3092                           ;Main_Invernadero.c: 140:      LCD_Clear();
  3093  0016D0  EC49  F00E         	call	_LCD_Clear	;wreg free
  3094  0016D4                     
  3095                           ;Main_Invernadero.c: 142:      unsigned char tecla;;Main_Invernadero.c: 143:      LCD_St
      +                          ring_xy(0,0,Etiqueta);
  3096  0016D4  0E00               	movlw	0
  3097  0016D6  6E05               	movwf	LCD_String_xy@pos^0,c
  3098  0016D8  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3099  0016DC  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3100  0016E0  0E00               	movlw	0
  3101  0016E2  ECA4  F00D         	call	_LCD_String_xy
  3102  0016E6                     
  3103                           ;Main_Invernadero.c: 144:      LCD_Command(0xC0);
  3104  0016E6  0EC0               	movlw	192
  3105  0016E8  ECEC  F00C         	call	_LCD_Command
  3106  0016EC                     
  3107                           ;Main_Invernadero.c: 145:      for(int i=0 ; i < 2 ; i++){
  3108  0016EC  0E00               	movlw	0
  3109  0016EE  6E12               	movwf	(PedirDato@i+1)^0,c
  3110  0016F0  0E00               	movlw	0
  3111  0016F2  6E11               	movwf	PedirDato@i^0,c
  3112  0016F4                     l2417:
  3113                           
  3114                           ;Main_Invernadero.c: 146:      tecla=keyfind();
  3115  0016F4  ECAE  F006         	call	_keyfind	;wreg free
  3116  0016F8  6E10               	movwf	PedirDato@tecla^0,c
  3117  0016FA                     
  3118                           ;Main_Invernadero.c: 147:      LCD_Char(tecla);
  3119  0016FA  5010               	movf	PedirDato@tecla^0,w,c
  3120  0016FC  ECC4  F00C         	call	_LCD_Char
  3121  001700                     
  3122                           ;Main_Invernadero.c: 148:      vecLlenar[i] = tecla;
  3123  001700  5011               	movf	PedirDato@i^0,w,c
  3124  001702  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3125  001704  6ED9               	movwf	fsr2l,c
  3126  001706  5012               	movf	(PedirDato@i+1)^0,w,c
  3127  001708  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3128  00170A  6EDA               	movwf	fsr2h,c
  3129  00170C  C010  FFDF         	movff	PedirDato@tecla,indf2
  3130  001710                     
  3131                           ;Main_Invernadero.c: 149:      }
  3132  001710  4A11               	infsnz	PedirDato@i^0,f,c
  3133  001712  2A12               	incf	(PedirDato@i+1)^0,f,c
  3134  001714  BE12               	btfsc	(PedirDato@i+1)^0,7,c
  3135  001716  EF96  F00B         	goto	u2051
  3136  00171A  5012               	movf	(PedirDato@i+1)^0,w,c
  3137  00171C  E109               	bnz	u2050
  3138  00171E  0E02               	movlw	2
  3139  001720  5C11               	subwf	PedirDato@i^0,w,c
  3140  001722  A0D8               	btfss	status,0,c
  3141  001724  EF96  F00B         	goto	u2051
  3142  001728  EF98  F00B         	goto	u2050
  3143  00172C                     u2051:
  3144  00172C  EF7A  F00B         	goto	l2417
  3145  001730                     u2050:
  3146  001730                     
  3147                           ;Main_Invernadero.c: 150:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3148  001730  0E02               	movlw	2
  3149  001732  6E0F               	movwf	(??_PedirDato+1)^0,c
  3150  001734  0E04               	movlw	4
  3151  001736  6E0E               	movwf	??_PedirDato^0,c
  3152  001738  0EBA               	movlw	186
  3153  00173A                     u2397:
  3154  00173A  2EE8               	decfsz	wreg,f,c
  3155  00173C  D7FE               	bra	u2397
  3156  00173E  2E0E               	decfsz	??_PedirDato^0,f,c
  3157  001740  D7FC               	bra	u2397
  3158  001742  2E0F               	decfsz	(??_PedirDato+1)^0,f,c
  3159  001744  D7FA               	bra	u2397
  3160  001746  D000               	nop2	
  3161  001748                     
  3162                           ;Main_Invernadero.c: 151:      LCD_Clear();
  3163  001748  EC49  F00E         	call	_LCD_Clear	;wreg free
  3164  00174C  0012               	return		;funcret
  3165  00174E                     __end_of_PedirDato:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _keyfind *****************
  3169 ;; Defined at:
  3170 ;;		line 174 in file "keypad.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  temp1           1    0        unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      unsigned char 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3186 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3187 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3188 ;;Total ram usage:        1 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_PedirDato
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text16
  3198  000D5C                     __ptext16:
  3199                           	callstack 0
  3200  000D5C                     _keyfind:
  3201                           	callstack 29
  3202  000D5C                     
  3203                           ;keypad.c: 177:     TRISB = 0xf0;
  3204  000D5C  0EF0               	movlw	240
  3205  000D5E  6E93               	movwf	147,c	;volatile
  3206                           
  3207                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
  3208  000D60  0EF0               	movlw	240
  3209  000D62  6E8A               	movwf	138,c	;volatile
  3210  000D64                     l2235:
  3211                           
  3212                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
  3213  000D64  5081               	movf	129,w,c	;volatile
  3214  000D66  0BF0               	andlw	240
  3215  000D68  0100               	movlb	0	; () banked
  3216  000D6A  6F6A               	movwf	_col_loc& (0+255),b
  3217  000D6C                     
  3218                           ; BSR set to: 0
  3219                           ;keypad.c: 188:         }while(col_loc!=0xf0);
  3220  000D6C  0EF0               	movlw	240
  3221  000D6E  196A               	xorwf	_col_loc& (0+255),w,b
  3222  000D70  A4D8               	btfss	status,2,c
  3223  000D72  EFBD  F006         	goto	u1781
  3224  000D76  EFBF  F006         	goto	u1780
  3225  000D7A                     u1781:
  3226  000D7A  EFB2  F006         	goto	l2235
  3227  000D7E                     u1780:
  3228  000D7E                     
  3229                           ; BSR set to: 0
  3230                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
  3231  000D7E  5081               	movf	129,w,c	;volatile
  3232  000D80  0BF0               	andlw	240
  3233  000D82  6F6A               	movwf	_col_loc& (0+255),b
  3234                           
  3235                           ;keypad.c: 190:       }while(col_loc!=0xf0);
  3236  000D84  0EF0               	movlw	240
  3237  000D86  196A               	xorwf	_col_loc& (0+255),w,b
  3238  000D88  A4D8               	btfss	status,2,c
  3239  000D8A  EFC9  F006         	goto	u1791
  3240  000D8E  EFCB  F006         	goto	u1790
  3241  000D92                     u1791:
  3242  000D92  EFB2  F006         	goto	l2235
  3243  000D96                     u1790:
  3244  000D96                     
  3245                           ; BSR set to: 0
  3246                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000/4000.0)));
  3247  000D96  0E4E               	movlw	78
  3248  000D98  6E01               	movwf	??_keyfind^0,c
  3249  000D9A  0EEB               	movlw	235
  3250  000D9C                     u2407:
  3251  000D9C  2EE8               	decfsz	wreg,f,c
  3252  000D9E  D7FE               	bra	u2407
  3253  000DA0  2E01               	decfsz	??_keyfind^0,f,c
  3254  000DA2  D7FC               	bra	u2407
  3255  000DA4  F000               	nop	
  3256  000DA6                     
  3257                           ;keypad.c: 193:         LATB = 0xf0;
  3258  000DA6  0EF0               	movlw	240
  3259  000DA8  6E8A               	movwf	138,c	;volatile
  3260  000DAA                     l2245:
  3261                           
  3262                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
  3263  000DAA  5081               	movf	129,w,c	;volatile
  3264  000DAC  0BF0               	andlw	240
  3265  000DAE  0100               	movlb	0	; () banked
  3266  000DB0  6F6A               	movwf	_col_loc& (0+255),b
  3267  000DB2                     
  3268                           ; BSR set to: 0
  3269                           ;keypad.c: 200:             }while(col_loc==0xf0);
  3270  000DB2  0EF0               	movlw	240
  3271  000DB4  196A               	xorwf	_col_loc& (0+255),w,b
  3272  000DB6  B4D8               	btfsc	status,2,c
  3273  000DB8  EFE0  F006         	goto	u1801
  3274  000DBC  EFE2  F006         	goto	u1800
  3275  000DC0                     u1801:
  3276  000DC0  EFD5  F006         	goto	l2245
  3277  000DC4                     u1800:
  3278  000DC4                     
  3279                           ; BSR set to: 0
  3280                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
  3281  000DC4  5081               	movf	129,w,c	;volatile
  3282  000DC6  0BF0               	andlw	240
  3283  000DC8  6F6A               	movwf	_col_loc& (0+255),b
  3284                           
  3285                           ;keypad.c: 202:         }while(col_loc==0xf0);
  3286  000DCA  0EF0               	movlw	240
  3287  000DCC  196A               	xorwf	_col_loc& (0+255),w,b
  3288  000DCE  B4D8               	btfsc	status,2,c
  3289  000DD0  EFEC  F006         	goto	u1811
  3290  000DD4  EFEE  F006         	goto	u1810
  3291  000DD8                     u1811:
  3292  000DD8  EFD5  F006         	goto	l2245
  3293  000DDC                     u1810:
  3294  000DDC                     
  3295                           ; BSR set to: 0
  3296                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000/4000.0)));
  3297  000DDC  0E4E               	movlw	78
  3298  000DDE  6E01               	movwf	??_keyfind^0,c
  3299  000DE0  0EEB               	movlw	235
  3300  000DE2                     u2417:
  3301  000DE2  2EE8               	decfsz	wreg,f,c
  3302  000DE4  D7FE               	bra	u2417
  3303  000DE6  2E01               	decfsz	??_keyfind^0,f,c
  3304  000DE8  D7FC               	bra	u2417
  3305  000DEA  F000               	nop	
  3306  000DEC                     
  3307                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
  3308  000DEC  5081               	movf	129,w,c	;volatile
  3309  000DEE  0BF0               	andlw	240
  3310  000DF0  0100               	movlb	0	; () banked
  3311  000DF2  6F6A               	movwf	_col_loc& (0+255),b
  3312  000DF4                     l2255:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
  3316  000DF4  0EFE               	movlw	254
  3317  000DF6  6E8A               	movwf	138,c	;volatile
  3318  000DF8                     
  3319                           ; BSR set to: 0
  3320                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
  3321  000DF8  5081               	movf	129,w,c	;volatile
  3322  000DFA  0BF0               	andlw	240
  3323  000DFC  6F6A               	movwf	_col_loc& (0+255),b
  3324  000DFE                     
  3325                           ; BSR set to: 0
  3326                           ;keypad.c: 214:         temp_col=col_loc;
  3327  000DFE  C06A  F068         	movff	_col_loc,_temp_col
  3328  000E02                     
  3329                           ; BSR set to: 0
  3330                           ;keypad.c: 215:         if(col_loc!=0xf0)
  3331  000E02  0EF0               	movlw	240
  3332  000E04  196A               	xorwf	_col_loc& (0+255),w,b
  3333  000E06  B4D8               	btfsc	status,2,c
  3334  000E08  EF08  F007         	goto	u1821
  3335  000E0C  EF0A  F007         	goto	u1820
  3336  000E10                     u1821:
  3337  000E10  EF1C  F007         	goto	l2267
  3338  000E14                     u1820:
  3339  000E14                     
  3340                           ; BSR set to: 0
  3341                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
  3342  000E14  0E00               	movlw	0
  3343  000E16  6F69               	movwf	_rowloc& (0+255),b
  3344                           
  3345                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3346  000E18  EF11  F007         	goto	l214
  3347  000E1C                     l2265:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
  3351  000E1C  5081               	movf	129,w,c	;volatile
  3352  000E1E  0BF0               	andlw	240
  3353  000E20  6F68               	movwf	_temp_col& (0+255),b
  3354  000E22                     l214:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3358  000E22  0EF0               	movlw	240
  3359  000E24  1968               	xorwf	_temp_col& (0+255),w,b
  3360  000E26  A4D8               	btfss	status,2,c
  3361  000E28  EF18  F007         	goto	u1831
  3362  000E2C  EF1A  F007         	goto	u1830
  3363  000E30                     u1831:
  3364  000E30  EF0E  F007         	goto	l2265
  3365  000E34                     u1830:
  3366  000E34  EF80  F007         	goto	l2303
  3367  000E38                     l2267:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;keypad.c: 225:         LATB = 0xfd;
  3371  000E38  0EFD               	movlw	253
  3372  000E3A  6E8A               	movwf	138,c	;volatile
  3373  000E3C                     
  3374                           ; BSR set to: 0
  3375                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
  3376  000E3C  5081               	movf	129,w,c	;volatile
  3377  000E3E  0BF0               	andlw	240
  3378  000E40  6F6A               	movwf	_col_loc& (0+255),b
  3379  000E42                     
  3380                           ; BSR set to: 0
  3381                           ;keypad.c: 227:         temp_col=col_loc;
  3382  000E42  C06A  F068         	movff	_col_loc,_temp_col
  3383  000E46                     
  3384                           ; BSR set to: 0
  3385                           ;keypad.c: 228:         if(col_loc!=0xf0)
  3386  000E46  0EF0               	movlw	240
  3387  000E48  196A               	xorwf	_col_loc& (0+255),w,b
  3388  000E4A  B4D8               	btfsc	status,2,c
  3389  000E4C  EF2A  F007         	goto	u1841
  3390  000E50  EF2C  F007         	goto	u1840
  3391  000E54                     u1841:
  3392  000E54  EF3E  F007         	goto	l2279
  3393  000E58                     u1840:
  3394  000E58                     
  3395                           ; BSR set to: 0
  3396                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
  3397  000E58  0E01               	movlw	1
  3398  000E5A  6F69               	movwf	_rowloc& (0+255),b
  3399                           
  3400                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3401  000E5C  EF33  F007         	goto	l219
  3402  000E60                     l2277:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
  3406  000E60  5081               	movf	129,w,c	;volatile
  3407  000E62  0BF0               	andlw	240
  3408  000E64  6F68               	movwf	_temp_col& (0+255),b
  3409  000E66                     l219:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3413  000E66  0EF0               	movlw	240
  3414  000E68  1968               	xorwf	_temp_col& (0+255),w,b
  3415  000E6A  A4D8               	btfss	status,2,c
  3416  000E6C  EF3A  F007         	goto	u1851
  3417  000E70  EF3C  F007         	goto	u1850
  3418  000E74                     u1851:
  3419  000E74  EF30  F007         	goto	l2277
  3420  000E78                     u1850:
  3421  000E78  EF80  F007         	goto	l2303
  3422  000E7C                     l2279:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;keypad.c: 238:         LATB = 0xfb;
  3426  000E7C  0EFB               	movlw	251
  3427  000E7E  6E8A               	movwf	138,c	;volatile
  3428  000E80                     
  3429                           ; BSR set to: 0
  3430                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
  3431  000E80  5081               	movf	129,w,c	;volatile
  3432  000E82  0BF0               	andlw	240
  3433  000E84  6F6A               	movwf	_col_loc& (0+255),b
  3434  000E86                     
  3435                           ; BSR set to: 0
  3436                           ;keypad.c: 240:         temp_col=col_loc;
  3437  000E86  C06A  F068         	movff	_col_loc,_temp_col
  3438  000E8A                     
  3439                           ; BSR set to: 0
  3440                           ;keypad.c: 241:         if(col_loc!=0xf0)
  3441  000E8A  0EF0               	movlw	240
  3442  000E8C  196A               	xorwf	_col_loc& (0+255),w,b
  3443  000E8E  B4D8               	btfsc	status,2,c
  3444  000E90  EF4C  F007         	goto	u1861
  3445  000E94  EF4E  F007         	goto	u1860
  3446  000E98                     u1861:
  3447  000E98  EF60  F007         	goto	l2291
  3448  000E9C                     u1860:
  3449  000E9C                     
  3450                           ; BSR set to: 0
  3451                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
  3452  000E9C  0E02               	movlw	2
  3453  000E9E  6F69               	movwf	_rowloc& (0+255),b
  3454                           
  3455                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3456  000EA0  EF55  F007         	goto	l223
  3457  000EA4                     l2289:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
  3461  000EA4  5081               	movf	129,w,c	;volatile
  3462  000EA6  0BF0               	andlw	240
  3463  000EA8  6F68               	movwf	_temp_col& (0+255),b
  3464  000EAA                     l223:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3468  000EAA  0EF0               	movlw	240
  3469  000EAC  1968               	xorwf	_temp_col& (0+255),w,b
  3470  000EAE  A4D8               	btfss	status,2,c
  3471  000EB0  EF5C  F007         	goto	u1871
  3472  000EB4  EF5E  F007         	goto	u1870
  3473  000EB8                     u1871:
  3474  000EB8  EF52  F007         	goto	l2289
  3475  000EBC                     u1870:
  3476  000EBC  EF80  F007         	goto	l2303
  3477  000EC0                     l2291:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;keypad.c: 251:         LATB = 0xf7;
  3481  000EC0  0EF7               	movlw	247
  3482  000EC2  6E8A               	movwf	138,c	;volatile
  3483  000EC4                     
  3484                           ; BSR set to: 0
  3485                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
  3486  000EC4  5081               	movf	129,w,c	;volatile
  3487  000EC6  0BF0               	andlw	240
  3488  000EC8  6F6A               	movwf	_col_loc& (0+255),b
  3489  000ECA                     
  3490                           ; BSR set to: 0
  3491                           ;keypad.c: 253:         temp_col=col_loc;
  3492  000ECA  C06A  F068         	movff	_col_loc,_temp_col
  3493  000ECE                     
  3494                           ; BSR set to: 0
  3495                           ;keypad.c: 254:         if(col_loc!=0xf0)
  3496  000ECE  0EF0               	movlw	240
  3497  000ED0  196A               	xorwf	_col_loc& (0+255),w,b
  3498  000ED2  B4D8               	btfsc	status,2,c
  3499  000ED4  EF6E  F007         	goto	u1881
  3500  000ED8  EF70  F007         	goto	u1880
  3501  000EDC                     u1881:
  3502  000EDC  EFFA  F006         	goto	l2255
  3503  000EE0                     u1880:
  3504  000EE0                     
  3505                           ; BSR set to: 0
  3506                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
  3507  000EE0  0E03               	movlw	3
  3508  000EE2  6F69               	movwf	_rowloc& (0+255),b
  3509                           
  3510                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3511  000EE4  EF77  F007         	goto	l227
  3512  000EE8                     l2301:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
  3516  000EE8  5081               	movf	129,w,c	;volatile
  3517  000EEA  0BF0               	andlw	240
  3518  000EEC  6F68               	movwf	_temp_col& (0+255),b
  3519  000EEE                     l227:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3523  000EEE  0EF0               	movlw	240
  3524  000EF0  1968               	xorwf	_temp_col& (0+255),w,b
  3525  000EF2  A4D8               	btfss	status,2,c
  3526  000EF4  EF7E  F007         	goto	u1891
  3527  000EF8  EF80  F007         	goto	u1890
  3528  000EFC                     u1891:
  3529  000EFC  EF74  F007         	goto	l2301
  3530  000F00                     u1890:
  3531  000F00                     l2303:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
  3535  000F00  0EE0               	movlw	224
  3536  000F02  196A               	xorwf	_col_loc& (0+255),w,b
  3537  000F04  A4D8               	btfss	status,2,c
  3538  000F06  EF87  F007         	goto	u1901
  3539  000F0A  EF89  F007         	goto	u1900
  3540  000F0E                     u1901:
  3541  000F0E  EF94  F007         	goto	l2311
  3542  000F12                     u1900:
  3543  000F12                     
  3544                           ; BSR set to: 0
  3545                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
  3546  000F12  5169               	movf	_rowloc& (0+255),w,b
  3547  000F14  0D04               	mullw	4
  3548  000F16  0EAF               	movlw	low _keypad
  3549  000F18  24F3               	addwf	243,w,c
  3550  000F1A  6ED9               	movwf	fsr2l,c
  3551  000F1C  0E00               	movlw	high _keypad
  3552  000F1E  20F4               	addwfc	prodh,w,c
  3553  000F20  6EDA               	movwf	fsr2h,c
  3554  000F22  50DF               	movf	indf2,w,c
  3555  000F24  EFC5  F007         	goto	l233
  3556  000F28                     l2311:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;keypad.c: 275:             if(col_loc==0xd0)
  3560  000F28  0ED0               	movlw	208
  3561  000F2A  196A               	xorwf	_col_loc& (0+255),w,b
  3562  000F2C  A4D8               	btfss	status,2,c
  3563  000F2E  EF9B  F007         	goto	u1911
  3564  000F32  EF9D  F007         	goto	u1910
  3565  000F36                     u1911:
  3566  000F36  EFA8  F007         	goto	l2319
  3567  000F3A                     u1910:
  3568  000F3A                     
  3569                           ; BSR set to: 0
  3570                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
  3571  000F3A  5169               	movf	_rowloc& (0+255),w,b
  3572  000F3C  0D04               	mullw	4
  3573  000F3E  0EB0               	movlw	low (_keypad+1)
  3574  000F40  24F3               	addwf	243,w,c
  3575  000F42  6ED9               	movwf	fsr2l,c
  3576  000F44  0E00               	movlw	high (_keypad+1)
  3577  000F46  20F4               	addwfc	prodh,w,c
  3578  000F48  6EDA               	movwf	fsr2h,c
  3579  000F4A  50DF               	movf	indf2,w,c
  3580  000F4C  EFC5  F007         	goto	l233
  3581  000F50                     l2319:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;keypad.c: 280:             if(col_loc==0xb0)
  3585  000F50  0EB0               	movlw	176
  3586  000F52  196A               	xorwf	_col_loc& (0+255),w,b
  3587  000F54  A4D8               	btfss	status,2,c
  3588  000F56  EFAF  F007         	goto	u1921
  3589  000F5A  EFB1  F007         	goto	u1920
  3590  000F5E                     u1921:
  3591  000F5E  EFBC  F007         	goto	l2327
  3592  000F62                     u1920:
  3593  000F62                     
  3594                           ; BSR set to: 0
  3595                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
  3596  000F62  5169               	movf	_rowloc& (0+255),w,b
  3597  000F64  0D04               	mullw	4
  3598  000F66  0EB1               	movlw	low (_keypad+2)
  3599  000F68  24F3               	addwf	243,w,c
  3600  000F6A  6ED9               	movwf	fsr2l,c
  3601  000F6C  0E00               	movlw	high (_keypad+2)
  3602  000F6E  20F4               	addwfc	prodh,w,c
  3603  000F70  6EDA               	movwf	fsr2h,c
  3604  000F72  50DF               	movf	indf2,w,c
  3605  000F74  EFC5  F007         	goto	l233
  3606  000F78                     l2327:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
  3610  000F78  5169               	movf	_rowloc& (0+255),w,b
  3611  000F7A  0D04               	mullw	4
  3612  000F7C  0EB2               	movlw	low (_keypad+3)
  3613  000F7E  24F3               	addwf	243,w,c
  3614  000F80  6ED9               	movwf	fsr2l,c
  3615  000F82  0E00               	movlw	high (_keypad+3)
  3616  000F84  20F4               	addwfc	prodh,w,c
  3617  000F86  6EDA               	movwf	fsr2h,c
  3618  000F88  50DF               	movf	indf2,w,c
  3619  000F8A                     l233:
  3620                           
  3621                           ; BSR set to: 0
  3622  000F8A  0012               	return		;funcret
  3623  000F8C                     __end_of_keyfind:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _LCD_String_xy *****************
  3627 ;; Defined at:
  3628 ;;		line 80 in file "LCD.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  row             1    wreg     unsigned char 
  3631 ;;  pos             1    4[COMRAM] unsigned char 
  3632 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3633 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  row             1    7[COMRAM] unsigned char 
  3636 ;;  location        1    8[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3646 ;;      Params:         3       0       0       0       0       0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3649 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        5 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 2
  3653 ;; This function calls:
  3654 ;;		_LCD_Command
  3655 ;;		_LCD_String
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;;		_PedirDato
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text17
  3663  001B48                     __ptext17:
  3664                           	callstack 0
  3665  001B48                     _LCD_String_xy:
  3666                           	callstack 27
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;incstack = 0
  3670                           ;LCD_String_xy@row stored from wreg
  3671  001B48  6E08               	movwf	LCD_String_xy@row^0,c
  3672  001B4A                     
  3673                           ;LCD.c: 83:     if(row<=1)
  3674  001B4A  0E02               	movlw	2
  3675  001B4C  6008               	cpfslt	LCD_String_xy@row^0,c
  3676  001B4E  EFAB  F00D         	goto	u1771
  3677  001B52  EFAD  F00D         	goto	u1770
  3678  001B56                     u1771:
  3679  001B56  EFB6  F00D         	goto	l2221
  3680  001B5A                     u1770:
  3681  001B5A                     
  3682                           ;LCD.c: 84:     {;LCD.c: 85:         location = (0x80) | ((pos) & 0x0f);
  3683  001B5A  5005               	movf	LCD_String_xy@pos^0,w,c
  3684  001B5C  0B0F               	andlw	15
  3685  001B5E  0980               	iorlw	128
  3686  001B60  6E09               	movwf	LCD_String_xy@location^0,c
  3687  001B62                     
  3688                           ;LCD.c: 86:         LCD_Command(location);
  3689  001B62  5009               	movf	LCD_String_xy@location^0,w,c
  3690  001B64  ECEC  F00C         	call	_LCD_Command
  3691                           
  3692                           ;LCD.c: 87:     }
  3693  001B68  EFBD  F00D         	goto	l2225
  3694  001B6C                     l2221:
  3695                           
  3696                           ;LCD.c: 89:     {;LCD.c: 90:         location = (0xC0) | ((pos) & 0x0f);
  3697  001B6C  5005               	movf	LCD_String_xy@pos^0,w,c
  3698  001B6E  0B0F               	andlw	15
  3699  001B70  09C0               	iorlw	192
  3700  001B72  6E09               	movwf	LCD_String_xy@location^0,c
  3701  001B74                     
  3702                           ;LCD.c: 91:         LCD_Command(location);
  3703  001B74  5009               	movf	LCD_String_xy@location^0,w,c
  3704  001B76  ECEC  F00C         	call	_LCD_Command
  3705  001B7A                     l2225:
  3706                           
  3707                           ;LCD.c: 95:     LCD_String(msg);
  3708  001B7A  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3709  001B7E  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3710  001B82  EC13  F00C         	call	_LCD_String	;wreg free
  3711  001B86  0012               	return		;funcret
  3712  001B88                     __end_of_LCD_String_xy:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _LCD_String *****************
  3716 ;; Defined at:
  3717 ;;		line 70 in file "LCD.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3720 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         2       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        2 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 1
  3739 ;; This function calls:
  3740 ;;		_LCD_Char
  3741 ;; This function is called by:
  3742 ;;		_LCD_String_xy
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text18
  3748  001826                     __ptext18:
  3749                           	callstack 0
  3750  001826                     _LCD_String:
  3751                           	callstack 27
  3752  001826                     
  3753                           ;LCD.c: 70: void LCD_String(const char *msg);LCD.c: 71: {;LCD.c: 72:  while((*msg)!=0)
  3754  001826  EF29  F00C         	goto	l2167
  3755  00182A                     l2163:
  3756                           
  3757                           ;LCD.c: 73:  {;LCD.c: 74:    LCD_Char(*msg);
  3758  00182A  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3759  00182E  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3760  001832  6AF8               	clrf	tblptru,c
  3761  001834  0E07               	movlw	(high __ramtop+-1)
  3762  001836  64F7               	cpfsgt	tblptrh,c
  3763  001838  D003               	bra	u1707
  3764  00183A  0008               	tblrd		*
  3765  00183C  50F5               	movf	tablat,w,c
  3766  00183E  D005               	bra	u1700
  3767  001840                     u1707:
  3768  001840  CFF6 FFE1          	movff	tblptrl,fsr1l
  3769  001844  CFF7 FFE2          	movff	tblptrh,fsr1h
  3770  001848  50E7               	movf	indf1,w,c
  3771  00184A                     u1700:
  3772  00184A  ECC4  F00C         	call	_LCD_Char
  3773  00184E                     
  3774                           ;LCD.c: 75:    msg++;
  3775  00184E  4A03               	infsnz	LCD_String@msg^0,f,c
  3776  001850  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3777  001852                     l2167:
  3778                           
  3779                           ;LCD.c: 72:  while((*msg)!=0)
  3780  001852  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3781  001856  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3782  00185A  6AF8               	clrf	tblptru,c
  3783  00185C  0E07               	movlw	(high __ramtop+-1)
  3784  00185E  64F7               	cpfsgt	tblptrh,c
  3785  001860  D003               	bra	u1717
  3786  001862  0008               	tblrd		*
  3787  001864  50F5               	movf	tablat,w,c
  3788  001866  D005               	bra	u1710
  3789  001868                     u1717:
  3790  001868  CFF6 FFE1          	movff	tblptrl,fsr1l
  3791  00186C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3792  001870  50E7               	movf	indf1,w,c
  3793  001872                     u1710:
  3794  001872  0900               	iorlw	0
  3795  001874  A4D8               	btfss	status,2,c
  3796  001876  EF3F  F00C         	goto	u1721
  3797  00187A  EF41  F00C         	goto	u1720
  3798  00187E                     u1721:
  3799  00187E  EF15  F00C         	goto	l2163
  3800  001882                     u1720:
  3801  001882  0012               	return		;funcret
  3802  001884                     __end_of_LCD_String:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _LCD_Char *****************
  3806 ;; Defined at:
  3807 ;;		line 56 in file "LCD.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  dat             1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  dat             1    1[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3825 ;;Total ram usage:        2 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_LCD_String
  3831 ;;		_main
  3832 ;;		_PedirDato
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text19
  3837  001988                     __ptext19:
  3838                           	callstack 0
  3839  001988                     _LCD_Char:
  3840                           	callstack 27
  3841                           
  3842                           ;incstack = 0
  3843                           ;LCD_Char@dat stored from wreg
  3844  001988  6E02               	movwf	LCD_Char@dat^0,c
  3845  00198A                     
  3846                           ;LCD.c: 56: void LCD_Char(unsigned char dat);LCD.c: 57: {;LCD.c: 58:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3847  00198A  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3848  00198E  0EF0               	movlw	240
  3849  001990  1601               	andwf	??_LCD_Char^0,f,c
  3850  001992  508C               	movf	140,w,c	;volatile
  3851  001994  0B0F               	andlw	15
  3852  001996  1001               	iorwf	??_LCD_Char^0,w,c
  3853  001998  6E8C               	movwf	140,c	;volatile
  3854  00199A                     
  3855                           ;LCD.c: 59:  LATD0 = 1;
  3856  00199A  808C               	bsf	3980,0,c	;volatile
  3857  00199C                     
  3858                           ;LCD.c: 60:  LATD1 = 1;
  3859  00199C  828C               	bsf	3980,1,c	;volatile
  3860  00199E                     
  3861                           ;LCD.c: 61:  __nop();
  3862  00199E  F000               	nop	
  3863  0019A0                     
  3864                           ;LCD.c: 62:  LATD1 = 0;
  3865  0019A0  928C               	bcf	3980,1,c	;volatile
  3866  0019A2                     
  3867                           ;LCD.c: 63:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3868  0019A2  0E03               	movlw	3
  3869  0019A4  6E01               	movwf	??_LCD_Char^0,c
  3870  0019A6  0E98               	movlw	152
  3871  0019A8                     u2427:
  3872  0019A8  2EE8               	decfsz	wreg,f,c
  3873  0019AA  D7FE               	bra	u2427
  3874  0019AC  2E01               	decfsz	??_LCD_Char^0,f,c
  3875  0019AE  D7FC               	bra	u2427
  3876  0019B0                     
  3877                           ;LCD.c: 64:     LATD = (LATD & 0x0f) | (dat<<4);
  3878  0019B0  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3879  0019B4  3A01               	swapf	??_LCD_Char^0,f,c
  3880  0019B6  0EF0               	movlw	240
  3881  0019B8  1601               	andwf	??_LCD_Char^0,f,c
  3882  0019BA  508C               	movf	140,w,c	;volatile
  3883  0019BC  0B0F               	andlw	15
  3884  0019BE  1001               	iorwf	??_LCD_Char^0,w,c
  3885  0019C0  6E8C               	movwf	140,c	;volatile
  3886  0019C2                     
  3887                           ;LCD.c: 65:  LATD1 = 1;
  3888  0019C2  828C               	bsf	3980,1,c	;volatile
  3889  0019C4                     
  3890                           ;LCD.c: 66:  __nop();
  3891  0019C4  F000               	nop	
  3892  0019C6                     
  3893                           ;LCD.c: 67:  LATD1 = 0;
  3894  0019C6  928C               	bcf	3980,1,c	;volatile
  3895                           
  3896                           ;LCD.c: 68:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3897  0019C8  0E08               	movlw	8
  3898  0019CA  6E01               	movwf	??_LCD_Char^0,c
  3899  0019CC  0ECA               	movlw	202
  3900  0019CE                     u2437:
  3901  0019CE  2EE8               	decfsz	wreg,f,c
  3902  0019D0  D7FE               	bra	u2437
  3903  0019D2  2E01               	decfsz	??_LCD_Char^0,f,c
  3904  0019D4  D7FC               	bra	u2437
  3905  0019D6  0012               	return		;funcret
  3906  0019D8                     __end_of_LCD_Char:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _LCD_Clear *****************
  3910 ;; Defined at:
  3911 ;;		line 99 in file "LCD.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3927 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3928 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 1
  3932 ;; This function calls:
  3933 ;;		_LCD_Command
  3934 ;; This function is called by:
  3935 ;;		_PedirDato
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text20
  3940  001C92                     __ptext20:
  3941                           	callstack 0
  3942  001C92                     _LCD_Clear:
  3943                           	callstack 28
  3944  001C92                     
  3945                           ;LCD.c: 101:     LCD_Command(0x01);
  3946  001C92  0E01               	movlw	1
  3947  001C94  ECEC  F00C         	call	_LCD_Command
  3948  001C98                     
  3949                           ;LCD.c: 102:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3950  001C98  0E08               	movlw	8
  3951  001C9A  6E03               	movwf	??_LCD_Clear^0,c
  3952  001C9C  0ECA               	movlw	202
  3953  001C9E                     u2447:
  3954  001C9E  2EE8               	decfsz	wreg,f,c
  3955  001CA0  D7FE               	bra	u2447
  3956  001CA2  2E03               	decfsz	??_LCD_Clear^0,f,c
  3957  001CA4  D7FC               	bra	u2447
  3958  001CA6                     
  3959                           ;LCD.c: 103:     LCD_Command (0x80);
  3960  001CA6  0E80               	movlw	128
  3961  001CA8  ECEC  F00C         	call	_LCD_Command
  3962                           
  3963                           ;LCD.c: 104:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3964  001CAC  0E03               	movlw	3
  3965  001CAE  6E03               	movwf	??_LCD_Clear^0,c
  3966  001CB0  0E98               	movlw	152
  3967  001CB2                     u2457:
  3968  001CB2  2EE8               	decfsz	wreg,f,c
  3969  001CB4  D7FE               	bra	u2457
  3970  001CB6  2E03               	decfsz	??_LCD_Clear^0,f,c
  3971  001CB8  D7FC               	bra	u2457
  3972  001CBA  0012               	return		;funcret
  3973  001CBC                     __end_of_LCD_Clear:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _LCD_Init *****************
  3977 ;; Defined at:
  3978 ;;		line 25 in file "LCD.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3994 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3995 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3996 ;;Total ram usage:        1 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 1
  3999 ;; This function calls:
  4000 ;;		_LCD_Command
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text21
  4007  001C32                     __ptext21:
  4008                           	callstack 0
  4009  001C32                     _LCD_Init:
  4010                           	callstack 29
  4011  001C32                     
  4012                           ;LCD.c: 27:     TRISD = 0;
  4013  001C32  0E00               	movlw	0
  4014  001C34  6E95               	movwf	149,c	;volatile
  4015  001C36                     
  4016                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4017  001C36  0E27               	movlw	39
  4018  001C38  6E03               	movwf	??_LCD_Init^0,c
  4019  001C3A  0EF5               	movlw	245
  4020  001C3C                     u2467:
  4021  001C3C  2EE8               	decfsz	wreg,f,c
  4022  001C3E  D7FE               	bra	u2467
  4023  001C40  2E03               	decfsz	??_LCD_Init^0,f,c
  4024  001C42  D7FC               	bra	u2467
  4025  001C44  F000               	nop	
  4026  001C46                     
  4027                           ;LCD.c: 29:     LCD_Command(0x02);
  4028  001C46  0E02               	movlw	2
  4029  001C48  ECEC  F00C         	call	_LCD_Command
  4030  001C4C                     
  4031                           ;LCD.c: 31:     LCD_Command(0x28);
  4032  001C4C  0E28               	movlw	40
  4033  001C4E  ECEC  F00C         	call	_LCD_Command
  4034  001C52                     
  4035                           ;LCD.c: 33:  LCD_Command(0x01);
  4036  001C52  0E01               	movlw	1
  4037  001C54  ECEC  F00C         	call	_LCD_Command
  4038  001C58                     
  4039                           ;LCD.c: 34:     LCD_Command(0x0c);
  4040  001C58  0E0C               	movlw	12
  4041  001C5A  ECEC  F00C         	call	_LCD_Command
  4042  001C5E                     
  4043                           ;LCD.c: 35:  LCD_Command(0x06);
  4044  001C5E  0E06               	movlw	6
  4045  001C60  ECEC  F00C         	call	_LCD_Command
  4046  001C64  0012               	return		;funcret
  4047  001C66                     __end_of_LCD_Init:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _LCD_Command *****************
  4051 ;; Defined at:
  4052 ;;		line 38 in file "LCD.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  cmd             1    wreg     unsigned char 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  cmd             1    1[COMRAM] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0
  4067 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4068 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4069 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_LCD_Init
  4076 ;;		_LCD_String_xy
  4077 ;;		_LCD_Clear
  4078 ;;		_PedirDato
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text22
  4083  0019D8                     __ptext22:
  4084                           	callstack 0
  4085  0019D8                     _LCD_Command:
  4086                           	callstack 28
  4087                           
  4088                           ;incstack = 0
  4089                           ;LCD_Command@cmd stored from wreg
  4090  0019D8  6E02               	movwf	LCD_Command@cmd^0,c
  4091  0019DA                     
  4092                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4093  0019DA  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4094  0019DE  0EF0               	movlw	240
  4095  0019E0  1601               	andwf	??_LCD_Command^0,f,c
  4096  0019E2  508C               	movf	140,w,c	;volatile
  4097  0019E4  0B0F               	andlw	15
  4098  0019E6  1001               	iorwf	??_LCD_Command^0,w,c
  4099  0019E8  6E8C               	movwf	140,c	;volatile
  4100  0019EA                     
  4101                           ;LCD.c: 41:  LATD0 = 0;
  4102  0019EA  908C               	bcf	3980,0,c	;volatile
  4103  0019EC                     
  4104                           ;LCD.c: 42:  LATD1 = 1;
  4105  0019EC  828C               	bsf	3980,1,c	;volatile
  4106  0019EE                     
  4107                           ;LCD.c: 43:  __nop();
  4108  0019EE  F000               	nop	
  4109  0019F0                     
  4110                           ;LCD.c: 44:  LATD1 = 0;
  4111  0019F0  928C               	bcf	3980,1,c	;volatile
  4112  0019F2                     
  4113                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4114  0019F2  0E03               	movlw	3
  4115  0019F4  6E01               	movwf	??_LCD_Command^0,c
  4116  0019F6  0E98               	movlw	152
  4117  0019F8                     u2477:
  4118  0019F8  2EE8               	decfsz	wreg,f,c
  4119  0019FA  D7FE               	bra	u2477
  4120  0019FC  2E01               	decfsz	??_LCD_Command^0,f,c
  4121  0019FE  D7FC               	bra	u2477
  4122  001A00                     
  4123                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4124  001A00  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4125  001A04  3A01               	swapf	??_LCD_Command^0,f,c
  4126  001A06  0EF0               	movlw	240
  4127  001A08  1601               	andwf	??_LCD_Command^0,f,c
  4128  001A0A  508C               	movf	140,w,c	;volatile
  4129  001A0C  0B0F               	andlw	15
  4130  001A0E  1001               	iorwf	??_LCD_Command^0,w,c
  4131  001A10  6E8C               	movwf	140,c	;volatile
  4132  001A12                     
  4133                           ;LCD.c: 47:  LATD1 = 1;
  4134  001A12  828C               	bsf	3980,1,c	;volatile
  4135  001A14                     
  4136                           ;LCD.c: 48:  __nop();
  4137  001A14  F000               	nop	
  4138  001A16                     
  4139                           ;LCD.c: 49:  LATD1 = 0;
  4140  001A16  928C               	bcf	3980,1,c	;volatile
  4141                           
  4142                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4143  001A18  0E08               	movlw	8
  4144  001A1A  6E01               	movwf	??_LCD_Command^0,c
  4145  001A1C  0ECA               	movlw	202
  4146  001A1E                     u2487:
  4147  001A1E  2EE8               	decfsz	wreg,f,c
  4148  001A20  D7FE               	bra	u2487
  4149  001A22  2E01               	decfsz	??_LCD_Command^0,f,c
  4150  001A24  D7FC               	bra	u2487
  4151  001A26  0012               	return		;funcret
  4152  001A28                     __end_of_LCD_Command:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _DatoSensorTH *****************
  4156 ;; Defined at:
  4157 ;;		line 154 in file "Main_Invernadero.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4160 ;;		 -> main@Datos(2), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4163 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4164 ;;  Checksum        1    0        unsigned char 
  4165 ;;  T_Decimal       1    0        unsigned char 
  4166 ;;  RH_Decimal      1    0        unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         2       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        4 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 1
  4183 ;; This function calls:
  4184 ;;		_DHT11_CheckResponse
  4185 ;;		_DHT11_ReadData
  4186 ;;		_DHT11_Start
  4187 ;; This function is called by:
  4188 ;;		_main
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text23
  4193  001B88                     __ptext23:
  4194                           	callstack 0
  4195  001B88                     _DatoSensorTH:
  4196                           	callstack 29
  4197  001B88                     
  4198                           ;Main_Invernadero.c: 155:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Mai
      +                          n_Invernadero.c: 156:          char Checksum;;Main_Invernadero.c: 157:          DHT11_St
      +                          art();
  4199  001B88  EC81  F00E         	call	_DHT11_Start	;wreg free
  4200  001B8C                     
  4201                           ;Main_Invernadero.c: 158:          DHT11_CheckResponse();
  4202  001B8C  EC33  F00E         	call	_DHT11_CheckResponse	;wreg free
  4203  001B90                     
  4204                           ;Main_Invernadero.c: 161:          RH_Integral = DHT11_ReadData();
  4205  001B90  EC42  F00C         	call	_DHT11_ReadData	;wreg free
  4206  001B94  6E05               	movwf	DatoSensorTH@RH_Integral^0,c
  4207  001B96  EC42  F00C         	call	_DHT11_ReadData	;wreg free
  4208  001B9A                     
  4209                           ;Main_Invernadero.c: 163:          T_Integral = DHT11_ReadData();
  4210  001B9A  EC42  F00C         	call	_DHT11_ReadData	;wreg free
  4211  001B9E  6E06               	movwf	DatoSensorTH@T_Integral^0,c
  4212  001BA0  EC42  F00C         	call	_DHT11_ReadData	;wreg free
  4213  001BA4  EC42  F00C         	call	_DHT11_ReadData	;wreg free
  4214  001BA8                     
  4215                           ;Main_Invernadero.c: 167:          Datos[0]=T_Integral;
  4216  001BA8  C003  FFD9         	movff	DatoSensorTH@Datos,fsr2l
  4217  001BAC  C004  FFDA         	movff	DatoSensorTH@Datos+1,fsr2h
  4218  001BB0  C006  FFDF         	movff	DatoSensorTH@T_Integral,indf2
  4219  001BB4                     
  4220                           ;Main_Invernadero.c: 168:          Datos[1]=RH_Integral;
  4221  001BB4  EE20 F001          	lfsr	2,1
  4222  001BB8  5003               	movf	DatoSensorTH@Datos^0,w,c
  4223  001BBA  26D9               	addwf	fsr2l,f,c
  4224  001BBC  5004               	movf	(DatoSensorTH@Datos+1)^0,w,c
  4225  001BBE  22DA               	addwfc	fsr2h,f,c
  4226  001BC0  C005  FFDF         	movff	DatoSensorTH@RH_Integral,indf2
  4227  001BC4  0012               	return		;funcret
  4228  001BC6                     __end_of_DatoSensorTH:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _DHT11_Start *****************
  4232 ;; Defined at:
  4233 ;;		line 22 in file "DHT11.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4250 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:        1 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_DatoSensorTH
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text24
  4261  001D02                     __ptext24:
  4262                           	callstack 0
  4263  001D02                     _DHT11_Start:
  4264                           	callstack 29
  4265  001D02                     
  4266                           ;DHT11.c: 24:     TRISAbits.RA0 = 0;
  4267  001D02  9092               	bcf	146,0,c	;volatile
  4268                           
  4269                           ;DHT11.c: 25:     LATA0 = 0;
  4270  001D04  9089               	bcf	3977,0,c	;volatile
  4271  001D06                     
  4272                           ;DHT11.c: 26:     _delay((unsigned long)((18)*(8000000/4000.0)));
  4273  001D06  0E2F               	movlw	47
  4274  001D08  6E01               	movwf	??_DHT11_Start^0,c
  4275  001D0A  0EC0               	movlw	192
  4276  001D0C                     u2497:
  4277  001D0C  2EE8               	decfsz	wreg,f,c
  4278  001D0E  D7FE               	bra	u2497
  4279  001D10  2E01               	decfsz	??_DHT11_Start^0,f,c
  4280  001D12  D7FC               	bra	u2497
  4281  001D14                     
  4282                           ;DHT11.c: 27:     LATA0 = 1;
  4283  001D14  8089               	bsf	3977,0,c	;volatile
  4284                           
  4285                           ;DHT11.c: 28:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  4286  001D16  0E0D               	movlw	13
  4287  001D18                     u2507:
  4288  001D18  2EE8               	decfsz	wreg,f,c
  4289  001D1A  D7FE               	bra	u2507
  4290  001D1C  F000               	nop	
  4291  001D1E                     
  4292                           ;DHT11.c: 29:     TRISAbits.RA0 = 1;
  4293  001D1E  8092               	bsf	146,0,c	;volatile
  4294  001D20  0012               	return		;funcret
  4295  001D22                     __end_of_DHT11_Start:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _DHT11_ReadData *****************
  4299 ;; Defined at:
  4300 ;;		line 6 in file "DHT11.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  data            1    1[COMRAM] unsigned char 
  4305 ;;  i               1    0[COMRAM] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      unsigned char 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0
  4316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4318 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4319 ;;Total ram usage:        2 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_DatoSensorTH
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text25
  4329  001884                     __ptext25:
  4330                           	callstack 0
  4331  001884                     _DHT11_ReadData:
  4332                           	callstack 29
  4333  001884                     
  4334                           ;DHT11.c: 8:   char i,data = 0;
  4335  001884  0E00               	movlw	0
  4336  001886  6E02               	movwf	DHT11_ReadData@data^0,c
  4337                           
  4338                           ;DHT11.c: 9:     for(i=0;i<8;i++)
  4339  001888  0E00               	movlw	0
  4340  00188A  6E01               	movwf	DHT11_ReadData@i^0,c
  4341  00188C                     l253:
  4342  00188C  A080               	btfss	128,0,c	;volatile
  4343  00188E  EF4B  F00C         	goto	u1931
  4344  001892  EF4D  F00C         	goto	u1930
  4345  001896                     u1931:
  4346  001896  EF46  F00C         	goto	l253
  4347  00189A                     u1930:
  4348  00189A                     
  4349                           ;DHT11.c: 12:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  4350  00189A  0E14               	movlw	20
  4351  00189C                     u2517:
  4352  00189C  2EE8               	decfsz	wreg,f,c
  4353  00189E  D7FE               	bra	u2517
  4354  0018A0                     
  4355                           ;DHT11.c: 13:         if(PORTAbits.RA0 & 1)
  4356  0018A0  A080               	btfss	128,0,c	;volatile
  4357  0018A2  EF55  F00C         	goto	u1941
  4358  0018A6  EF57  F00C         	goto	u1940
  4359  0018AA                     u1941:
  4360  0018AA  EF5B  F00C         	goto	l2345
  4361  0018AE                     u1940:
  4362  0018AE                     
  4363                           ;DHT11.c: 14:           data = ((data<<1) | 1);
  4364  0018AE  80D8               	bsf	status,0,c
  4365  0018B0  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4366  0018B2  EF5E  F00C         	goto	l258
  4367  0018B6                     l2345:
  4368                           
  4369                           ;DHT11.c: 16:           data = (data<<1);
  4370  0018B6  5002               	movf	DHT11_ReadData@data^0,w,c
  4371  0018B8  2402               	addwf	DHT11_ReadData@data^0,w,c
  4372  0018BA  6E02               	movwf	DHT11_ReadData@data^0,c
  4373  0018BC                     l258:
  4374  0018BC  B080               	btfsc	128,0,c	;volatile
  4375  0018BE  EF63  F00C         	goto	u1951
  4376  0018C2  EF65  F00C         	goto	u1950
  4377  0018C6                     u1951:
  4378  0018C6  EF5E  F00C         	goto	l258
  4379  0018CA                     u1950:
  4380  0018CA                     
  4381                           ;DHT11.c: 18:     }
  4382  0018CA  2A01               	incf	DHT11_ReadData@i^0,f,c
  4383  0018CC  0E07               	movlw	7
  4384  0018CE  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4385  0018D0  EF6C  F00C         	goto	u1961
  4386  0018D4  EF6E  F00C         	goto	u1960
  4387  0018D8                     u1961:
  4388  0018D8  EF46  F00C         	goto	l253
  4389  0018DC                     u1960:
  4390  0018DC                     
  4391                           ;DHT11.c: 19:   return data;
  4392  0018DC  5002               	movf	DHT11_ReadData@data^0,w,c
  4393  0018DE  0012               	return		;funcret
  4394  0018E0                     __end_of_DHT11_ReadData:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _DHT11_CheckResponse *****************
  4398 ;; Defined at:
  4399 ;;		line 35 in file "DHT11.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		None
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_DatoSensorTH
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text26
  4427  001C66                     __ptext26:
  4428                           	callstack 0
  4429  001C66                     _DHT11_CheckResponse:
  4430                           	callstack 29
  4431  001C66                     l267:
  4432  001C66  B080               	btfsc	128,0,c	;volatile
  4433  001C68  EF38  F00E         	goto	u1971
  4434  001C6C  EF3A  F00E         	goto	u1970
  4435  001C70                     u1971:
  4436  001C70  EF33  F00E         	goto	l267
  4437  001C74                     u1970:
  4438  001C74                     l270:
  4439  001C74  A080               	btfss	128,0,c	;volatile
  4440  001C76  EF3F  F00E         	goto	u1981
  4441  001C7A  EF41  F00E         	goto	u1980
  4442  001C7E                     u1981:
  4443  001C7E  EF3A  F00E         	goto	l270
  4444  001C82                     u1980:
  4445  001C82                     l273:
  4446  001C82  B080               	btfsc	128,0,c	;volatile
  4447  001C84  EF46  F00E         	goto	u1991
  4448  001C88  EF48  F00E         	goto	u1990
  4449  001C8C                     u1991:
  4450  001C8C  EF41  F00E         	goto	l273
  4451  001C90                     u1990:
  4452  001C90  0012               	return		;funcret
  4453  001C92                     __end_of_DHT11_CheckResponse:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _ControlCalefactor *****************
  4457 ;; Defined at:
  4458 ;;		line 185 in file "Main_Invernadero.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4461 ;;		 -> main@Datos(2), 
  4462 ;;  TempDigitada    2    2[COMRAM] int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4474 ;;      Params:         4       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4476 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4477 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4478 ;;Total ram usage:       11 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text27
  4488  001A28                     __ptext27:
  4489                           	callstack 0
  4490  001A28                     _ControlCalefactor:
  4491                           	callstack 30
  4492  001A28                     
  4493                           ;Main_Invernadero.c: 186:     if(*TempActual<TempDigitada-2){
  4494  001A28  0EFE               	movlw	254
  4495  001A2A  6E05               	movwf	??_ControlCalefactor^0,c
  4496  001A2C  0EFF               	movlw	255
  4497  001A2E  6E06               	movwf	(??_ControlCalefactor+1)^0,c
  4498  001A30  C003  F007         	movff	ControlCalefactor@TempDigitada,??_ControlCalefactor+2
  4499  001A34  C004  F008         	movff	ControlCalefactor@TempDigitada+1,??_ControlCalefactor+3
  4500  001A38  5005               	movf	??_ControlCalefactor^0,w,c
  4501  001A3A  2607               	addwf	(??_ControlCalefactor+2)^0,f,c
  4502  001A3C  5006               	movf	(??_ControlCalefactor+1)^0,w,c
  4503  001A3E  2208               	addwfc	(??_ControlCalefactor+3)^0,f,c
  4504  001A40  C001  FFD9         	movff	ControlCalefactor@TempActual,fsr2l
  4505  001A44  C002  FFDA         	movff	ControlCalefactor@TempActual+1,fsr2h
  4506  001A48  50DF               	movf	indf2,w,c
  4507  001A4A  6E09               	movwf	(??_ControlCalefactor+4)^0,c
  4508  001A4C  6A0A               	clrf	(??_ControlCalefactor+5)^0,c
  4509  001A4E  5007               	movf	(??_ControlCalefactor+2)^0,w,c
  4510  001A50  5C09               	subwf	(??_ControlCalefactor+4)^0,w,c
  4511  001A52  500A               	movf	(??_ControlCalefactor+5)^0,w,c
  4512  001A54  0A80               	xorlw	128
  4513  001A56  6E0B               	movwf	(??_ControlCalefactor+6)^0,c
  4514  001A58  5008               	movf	(??_ControlCalefactor+3)^0,w,c
  4515  001A5A  0A80               	xorlw	128
  4516  001A5C  580B               	subwfb	(??_ControlCalefactor+6)^0,w,c
  4517  001A5E  B0D8               	btfsc	status,0,c
  4518  001A60  EF34  F00D         	goto	u2111
  4519  001A64  EF36  F00D         	goto	u2110
  4520  001A68                     u2111:
  4521  001A68  EF39  F00D         	goto	l388
  4522  001A6C                     u2110:
  4523  001A6C                     
  4524                           ;Main_Invernadero.c: 187:         LATC7=1;
  4525  001A6C  8E8B               	bsf	3979,7,c	;volatile
  4526                           
  4527                           ;Main_Invernadero.c: 189:     }else{
  4528  001A6E  EF3A  F00D         	goto	l390
  4529  001A72                     l388:
  4530                           
  4531                           ;Main_Invernadero.c: 190:         LATC7=0;
  4532  001A72  9E8B               	bcf	3979,7,c	;volatile
  4533  001A74                     l390:
  4534  001A74  0012               	return		;funcret
  4535  001A76                     __end_of_ControlCalefactor:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _ControlAspersor *****************
  4539 ;; Defined at:
  4540 ;;		line 175 in file "Main_Invernadero.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4543 ;;		 -> main@Datos(2), 
  4544 ;;  HumedadDigit    2    2[COMRAM] int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4556 ;;      Params:         4       0       0       0       0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4558 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4559 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4560 ;;Total ram usage:       11 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text28
  4570  001A76                     __ptext28:
  4571                           	callstack 0
  4572  001A76                     _ControlAspersor:
  4573                           	callstack 30
  4574  001A76                     
  4575                           ;Main_Invernadero.c: 176:     if(*HumedadActual<HumedadDigitada-2){
  4576  001A76  0EFE               	movlw	254
  4577  001A78  6E05               	movwf	??_ControlAspersor^0,c
  4578  001A7A  0EFF               	movlw	255
  4579  001A7C  6E06               	movwf	(??_ControlAspersor+1)^0,c
  4580  001A7E  C003  F007         	movff	ControlAspersor@HumedadDigitada,??_ControlAspersor+2
  4581  001A82  C004  F008         	movff	ControlAspersor@HumedadDigitada+1,??_ControlAspersor+3
  4582  001A86  5005               	movf	??_ControlAspersor^0,w,c
  4583  001A88  2607               	addwf	(??_ControlAspersor+2)^0,f,c
  4584  001A8A  5006               	movf	(??_ControlAspersor+1)^0,w,c
  4585  001A8C  2208               	addwfc	(??_ControlAspersor+3)^0,f,c
  4586  001A8E  C001  FFD9         	movff	ControlAspersor@HumedadActual,fsr2l
  4587  001A92  C002  FFDA         	movff	ControlAspersor@HumedadActual+1,fsr2h
  4588  001A96  50DF               	movf	indf2,w,c
  4589  001A98  6E09               	movwf	(??_ControlAspersor+4)^0,c
  4590  001A9A  6A0A               	clrf	(??_ControlAspersor+5)^0,c
  4591  001A9C  5007               	movf	(??_ControlAspersor+2)^0,w,c
  4592  001A9E  5C09               	subwf	(??_ControlAspersor+4)^0,w,c
  4593  001AA0  500A               	movf	(??_ControlAspersor+5)^0,w,c
  4594  001AA2  0A80               	xorlw	128
  4595  001AA4  6E0B               	movwf	(??_ControlAspersor+6)^0,c
  4596  001AA6  5008               	movf	(??_ControlAspersor+3)^0,w,c
  4597  001AA8  0A80               	xorlw	128
  4598  001AAA  580B               	subwfb	(??_ControlAspersor+6)^0,w,c
  4599  001AAC  B0D8               	btfsc	status,0,c
  4600  001AAE  EF5B  F00D         	goto	u2101
  4601  001AB2  EF5D  F00D         	goto	u2100
  4602  001AB6                     u2101:
  4603  001AB6  EF60  F00D         	goto	l383
  4604  001ABA                     u2100:
  4605  001ABA                     
  4606                           ;Main_Invernadero.c: 177:         LATC0=1;
  4607  001ABA  808B               	bsf	3979,0,c	;volatile
  4608                           
  4609                           ;Main_Invernadero.c: 179:     }else{
  4610  001ABC  EF61  F00D         	goto	l385
  4611  001AC0                     l383:
  4612                           
  4613                           ;Main_Invernadero.c: 180:         LATC0=0;
  4614  001AC0  908B               	bcf	3979,0,c	;volatile
  4615  001AC2                     l385:
  4616  001AC2  0012               	return		;funcret
  4617  001AC4                     __end_of_ControlAspersor:
  4618                           	callstack 0
  4619                           
  4620 ;; *************** function _CompararTempe *****************
  4621 ;; Defined at:
  4622 ;;		line 126 in file "Main_Invernadero.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  4625 ;;		 -> main@Datos(2), 
  4626 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  4627 ;;		 -> main@Datos(2), 
  4628 ;;  TempDigitada    2    6[COMRAM] int 
  4629 ;;  HumDigitada     2    8[COMRAM] int 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  HumedadAdecu    1   18[COMRAM] _Bool 
  4632 ;;  TemperaturaA    1   17[COMRAM] _Bool 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         8       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4645 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:       17 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 2
  4649 ;; This function calls:
  4650 ;;		_IniciarLed
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text29
  4657  00142C                     __ptext29:
  4658                           	callstack 0
  4659  00142C                     _CompararTempe:
  4660                           	callstack 28
  4661  00142C                     
  4662                           ;Main_Invernadero.c: 127:     _Bool TemperaturaAdecuada= 1;
  4663  00142C  0E01               	movlw	1
  4664  00142E  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4665                           
  4666                           ;Main_Invernadero.c: 128:     _Bool HumedadAdecuada =1;
  4667  001430  0E01               	movlw	1
  4668  001432  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4669  001434                     
  4670                           ;Main_Invernadero.c: 129:     if(*TempActual<TempDigitada-2 || *TempActual >TempDigitada
      +                          +2){
  4671  001434  0EFE               	movlw	254
  4672  001436  6E0B               	movwf	??_CompararTempe^0,c
  4673  001438  0EFF               	movlw	255
  4674  00143A  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4675  00143C  C007  F00D         	movff	CompararTempe@TempDigitada,??_CompararTempe+2
  4676  001440  C008  F00E         	movff	CompararTempe@TempDigitada+1,??_CompararTempe+3
  4677  001444  500B               	movf	??_CompararTempe^0,w,c
  4678  001446  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4679  001448  500C               	movf	(??_CompararTempe+1)^0,w,c
  4680  00144A  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4681  00144C  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4682  001450  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4683  001454  50DF               	movf	indf2,w,c
  4684  001456  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4685  001458  6A10               	clrf	(??_CompararTempe+5)^0,c
  4686  00145A  500D               	movf	(??_CompararTempe+2)^0,w,c
  4687  00145C  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4688  00145E  5010               	movf	(??_CompararTempe+5)^0,w,c
  4689  001460  0A80               	xorlw	128
  4690  001462  6E11               	movwf	(??_CompararTempe+6)^0,c
  4691  001464  500E               	movf	(??_CompararTempe+3)^0,w,c
  4692  001466  0A80               	xorlw	128
  4693  001468  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4694  00146A  A0D8               	btfss	status,0,c
  4695  00146C  EF3A  F00A         	goto	u2061
  4696  001470  EF3C  F00A         	goto	u2060
  4697  001474                     u2061:
  4698  001474  EF58  F00A         	goto	l2469
  4699  001478                     u2060:
  4700  001478  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4701  00147C  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4702  001480  50DF               	movf	indf2,w,c
  4703  001482  6E0B               	movwf	??_CompararTempe^0,c
  4704  001484  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4705  001486  0E02               	movlw	2
  4706  001488  2407               	addwf	CompararTempe@TempDigitada^0,w,c
  4707  00148A  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4708  00148C  0E00               	movlw	0
  4709  00148E  2008               	addwfc	(CompararTempe@TempDigitada+1)^0,w,c
  4710  001490  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4711  001492  500B               	movf	??_CompararTempe^0,w,c
  4712  001494  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4713  001496  500E               	movf	(??_CompararTempe+3)^0,w,c
  4714  001498  0A80               	xorlw	128
  4715  00149A  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4716  00149C  500C               	movf	(??_CompararTempe+1)^0,w,c
  4717  00149E  0A80               	xorlw	128
  4718  0014A0  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4719  0014A2  B0D8               	btfsc	status,0,c
  4720  0014A4  EF56  F00A         	goto	u2071
  4721  0014A8  EF58  F00A         	goto	u2070
  4722  0014AC                     u2071:
  4723  0014AC  EF5A  F00A         	goto	l2471
  4724  0014B0                     u2070:
  4725  0014B0                     l2469:
  4726                           
  4727                           ;Main_Invernadero.c: 130:            TemperaturaAdecuada=0;
  4728  0014B0  0E00               	movlw	0
  4729  0014B2  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4730  0014B4                     l2471:
  4731                           
  4732                           ;Main_Invernadero.c: 132:     if(*HumActual<HumDigitada-2 || *HumActual>HumDigitada+2){
  4733  0014B4  0EFE               	movlw	254
  4734  0014B6  6E0B               	movwf	??_CompararTempe^0,c
  4735  0014B8  0EFF               	movlw	255
  4736  0014BA  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4737  0014BC  C009  F00D         	movff	CompararTempe@HumDigitada,??_CompararTempe+2
  4738  0014C0  C00A  F00E         	movff	CompararTempe@HumDigitada+1,??_CompararTempe+3
  4739  0014C4  500B               	movf	??_CompararTempe^0,w,c
  4740  0014C6  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4741  0014C8  500C               	movf	(??_CompararTempe+1)^0,w,c
  4742  0014CA  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4743  0014CC  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4744  0014D0  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4745  0014D4  50DF               	movf	indf2,w,c
  4746  0014D6  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4747  0014D8  6A10               	clrf	(??_CompararTempe+5)^0,c
  4748  0014DA  500D               	movf	(??_CompararTempe+2)^0,w,c
  4749  0014DC  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4750  0014DE  5010               	movf	(??_CompararTempe+5)^0,w,c
  4751  0014E0  0A80               	xorlw	128
  4752  0014E2  6E11               	movwf	(??_CompararTempe+6)^0,c
  4753  0014E4  500E               	movf	(??_CompararTempe+3)^0,w,c
  4754  0014E6  0A80               	xorlw	128
  4755  0014E8  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4756  0014EA  A0D8               	btfss	status,0,c
  4757  0014EC  EF7A  F00A         	goto	u2081
  4758  0014F0  EF7C  F00A         	goto	u2080
  4759  0014F4                     u2081:
  4760  0014F4  EF98  F00A         	goto	l2475
  4761  0014F8                     u2080:
  4762  0014F8  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4763  0014FC  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4764  001500  50DF               	movf	indf2,w,c
  4765  001502  6E0B               	movwf	??_CompararTempe^0,c
  4766  001504  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4767  001506  0E02               	movlw	2
  4768  001508  2409               	addwf	CompararTempe@HumDigitada^0,w,c
  4769  00150A  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4770  00150C  0E00               	movlw	0
  4771  00150E  200A               	addwfc	(CompararTempe@HumDigitada+1)^0,w,c
  4772  001510  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4773  001512  500B               	movf	??_CompararTempe^0,w,c
  4774  001514  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4775  001516  500E               	movf	(??_CompararTempe+3)^0,w,c
  4776  001518  0A80               	xorlw	128
  4777  00151A  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4778  00151C  500C               	movf	(??_CompararTempe+1)^0,w,c
  4779  00151E  0A80               	xorlw	128
  4780  001520  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4781  001522  B0D8               	btfsc	status,0,c
  4782  001524  EF96  F00A         	goto	u2091
  4783  001528  EF98  F00A         	goto	u2090
  4784  00152C                     u2091:
  4785  00152C  EF9A  F00A         	goto	l2477
  4786  001530                     u2090:
  4787  001530                     l2475:
  4788                           
  4789                           ;Main_Invernadero.c: 133:         HumedadAdecuada=0;
  4790  001530  0E00               	movlw	0
  4791  001532  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4792  001534                     l2477:
  4793                           
  4794                           ;Main_Invernadero.c: 136:    IniciarLed(TemperaturaAdecuada,HumedadAdecuada);
  4795  001534  C013  F001         	movff	CompararTempe@HumedadAdecuada,IniciarLed@HumedadOptima
  4796  001538  5012               	movf	CompararTempe@TemperaturaAdecuada^0,w,c
  4797  00153A  EC70  F00C         	call	_IniciarLed
  4798  00153E  0012               	return		;funcret
  4799  001540                     __end_of_CompararTempe:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _IniciarLed *****************
  4803 ;; Defined at:
  4804 ;;		line 100 in file "Main_Invernadero.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  TemperaturaO    1    wreg     _Bool 
  4807 ;;  HumedadOptim    1    0[COMRAM] _Bool 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  TemperaturaO    1    1[COMRAM] _Bool 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         1       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 1
  4826 ;; This function calls:
  4827 ;;		_LedsIniciar
  4828 ;; This function is called by:
  4829 ;;		_CompararTempe
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text30
  4834  0018E0                     __ptext30:
  4835                           	callstack 0
  4836  0018E0                     _IniciarLed:
  4837                           	callstack 28
  4838                           
  4839                           ;incstack = 0
  4840                           ;IniciarLed@TemperaturaOptima stored from wreg
  4841  0018E0  6E02               	movwf	IniciarLed@TemperaturaOptima^0,c
  4842  0018E2                     
  4843                           ;Main_Invernadero.c: 101:     LedsIniciar();
  4844  0018E2  EC91  F00E         	call	_LedsIniciar	;wreg free
  4845  0018E6                     
  4846                           ;Main_Invernadero.c: 102:     if(TemperaturaOptima==0 && HumedadOptima==0){
  4847  0018E6  5002               	movf	IniciarLed@TemperaturaOptima^0,w,c
  4848  0018E8  A4D8               	btfss	status,2,c
  4849  0018EA  EF79  F00C         	goto	u2001
  4850  0018EE  EF7B  F00C         	goto	u2000
  4851  0018F2                     u2001:
  4852  0018F2  EF86  F00C         	goto	l2373
  4853  0018F6                     u2000:
  4854  0018F6  5001               	movf	IniciarLed@HumedadOptima^0,w,c
  4855  0018F8  A4D8               	btfss	status,2,c
  4856  0018FA  EF81  F00C         	goto	u2011
  4857  0018FE  EF83  F00C         	goto	u2010
  4858  001902                     u2011:
  4859  001902  EF86  F00C         	goto	l2373
  4860  001906                     u2010:
  4861  001906                     
  4862                           ;Main_Invernadero.c: 103:        LATE0=1;
  4863  001906  808D               	bsf	3981,0,c	;volatile
  4864                           
  4865                           ;Main_Invernadero.c: 104:     }else if(TemperaturaOptima==0 || HumedadOptima==0){
  4866  001908  EF9A  F00C         	goto	l357
  4867  00190C                     l2373:
  4868  00190C  5002               	movf	IniciarLed@TemperaturaOptima^0,w,c
  4869  00190E  B4D8               	btfsc	status,2,c
  4870  001910  EF8C  F00C         	goto	u2021
  4871  001914  EF8E  F00C         	goto	u2020
  4872  001918                     u2021:
  4873  001918  EF96  F00C         	goto	l355
  4874  00191C                     u2020:
  4875  00191C  5001               	movf	IniciarLed@HumedadOptima^0,w,c
  4876  00191E  A4D8               	btfss	status,2,c
  4877  001920  EF94  F00C         	goto	u2031
  4878  001924  EF96  F00C         	goto	u2030
  4879  001928                     u2031:
  4880  001928  EF99  F00C         	goto	l353
  4881  00192C                     u2030:
  4882  00192C                     l355:
  4883                           
  4884                           ;Main_Invernadero.c: 105:         LATE1=1;
  4885  00192C  828D               	bsf	3981,1,c	;volatile
  4886                           
  4887                           ;Main_Invernadero.c: 106:     }else{
  4888  00192E  EF9A  F00C         	goto	l357
  4889  001932                     l353:
  4890                           
  4891                           ;Main_Invernadero.c: 107:         LATE2=1;
  4892  001932  848D               	bsf	3981,2,c	;volatile
  4893  001934                     l357:
  4894  001934  0012               	return		;funcret
  4895  001936                     __end_of_IniciarLed:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _LedsIniciar *****************
  4899 ;; Defined at:
  4900 ;;		line 170 in file "Main_Invernadero.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_main
  4924 ;;		_IniciarLed
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text31
  4929  001D22                     __ptext31:
  4930                           	callstack 0
  4931  001D22                     _LedsIniciar:
  4932                           	callstack 30
  4933  001D22                     
  4934                           ;Main_Invernadero.c: 171:     LATE1=0;
  4935  001D22  928D               	bcf	3981,1,c	;volatile
  4936                           
  4937                           ;Main_Invernadero.c: 172:     LATE0=0;
  4938  001D24  908D               	bcf	3981,0,c	;volatile
  4939                           
  4940                           ;Main_Invernadero.c: 173:     LATE2=0;
  4941  001D26  948D               	bcf	3981,2,c	;volatile
  4942  001D28  0012               	return		;funcret
  4943  001D2A                     __end_of_LedsIniciar:
  4944                           	callstack 0
  4945                           
  4946                           	psect	rparam
  4947  0000                     
  4948                           	psect	idloc
  4949                           
  4950                           ;Config register IDLOC0 @ 0x200000
  4951                           ;	unspecified, using default values
  4952  200000                     	org	2097152
  4953  200000  FF                 	db	255
  4954                           
  4955                           ;Config register IDLOC1 @ 0x200001
  4956                           ;	unspecified, using default values
  4957  200001                     	org	2097153
  4958  200001  FF                 	db	255
  4959                           
  4960                           ;Config register IDLOC2 @ 0x200002
  4961                           ;	unspecified, using default values
  4962  200002                     	org	2097154
  4963  200002  FF                 	db	255
  4964                           
  4965                           ;Config register IDLOC3 @ 0x200003
  4966                           ;	unspecified, using default values
  4967  200003                     	org	2097155
  4968  200003  FF                 	db	255
  4969                           
  4970                           ;Config register IDLOC4 @ 0x200004
  4971                           ;	unspecified, using default values
  4972  200004                     	org	2097156
  4973  200004  FF                 	db	255
  4974                           
  4975                           ;Config register IDLOC5 @ 0x200005
  4976                           ;	unspecified, using default values
  4977  200005                     	org	2097157
  4978  200005  FF                 	db	255
  4979                           
  4980                           ;Config register IDLOC6 @ 0x200006
  4981                           ;	unspecified, using default values
  4982  200006                     	org	2097158
  4983  200006  FF                 	db	255
  4984                           
  4985                           ;Config register IDLOC7 @ 0x200007
  4986                           ;	unspecified, using default values
  4987  200007                     	org	2097159
  4988  200007  FF                 	db	255
  4989                           
  4990                           	psect	config
  4991                           
  4992                           ;Config register CONFIG1L @ 0x300000
  4993                           ;	PLL Prescaler Selection bits
  4994                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4995                           ;	System Clock Postscaler Selection bits
  4996                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4997                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4998                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4999  300000                     	org	3145728
  5000  300000  00                 	db	0
  5001                           
  5002                           ;Config register CONFIG1H @ 0x300001
  5003                           ;	Oscillator Selection bits
  5004                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5005                           ;	Fail-Safe Clock Monitor Enable bit
  5006                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5007                           ;	Internal/External Oscillator Switchover bit
  5008                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5009  300001                     	org	3145729
  5010  300001  09                 	db	9
  5011                           
  5012                           ;Config register CONFIG2L @ 0x300002
  5013                           ;	Power-up Timer Enable bit
  5014                           ;	PWRT = OFF, PWRT disabled
  5015                           ;	Brown-out Reset Enable bits
  5016                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5017                           ;	Brown-out Reset Voltage bits
  5018                           ;	BORV = 3, Minimum setting 2.05V
  5019                           ;	USB Voltage Regulator Enable bit
  5020                           ;	VREGEN = OFF, USB voltage regulator disabled
  5021  300002                     	org	3145730
  5022  300002  1F                 	db	31
  5023                           
  5024                           ;Config register CONFIG2H @ 0x300003
  5025                           ;	Watchdog Timer Enable bit
  5026                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5027                           ;	Watchdog Timer Postscale Select bits
  5028                           ;	WDTPS = 32768, 1:32768
  5029  300003                     	org	3145731
  5030  300003  1E                 	db	30
  5031                           
  5032                           ; Padding undefined space
  5033  300004                     	org	3145732
  5034  300004  FF                 	db	255
  5035                           
  5036                           ;Config register CONFIG3H @ 0x300005
  5037                           ;	CCP2 MUX bit
  5038                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5039                           ;	PORTB A/D Enable bit
  5040                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5041                           ;	Low-Power Timer 1 Oscillator Enable bit
  5042                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5043                           ;	MCLR Pin Enable bit
  5044                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5045  300005                     	org	3145733
  5046  300005  81                 	db	129
  5047                           
  5048                           ;Config register CONFIG4L @ 0x300006
  5049                           ;	Stack Full/Underflow Reset Enable bit
  5050                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5051                           ;	Single-Supply ICSP Enable bit
  5052                           ;	LVP = OFF, Single-Supply ICSP disabled
  5053                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5054                           ;	ICPRT = OFF, ICPORT disabled
  5055                           ;	Extended Instruction Set Enable bit
  5056                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5057                           ;	Background Debugger Enable bit
  5058                           ;	DEBUG = 0x1, unprogrammed default
  5059  300006                     	org	3145734
  5060  300006  81                 	db	129
  5061                           
  5062                           ; Padding undefined space
  5063  300007                     	org	3145735
  5064  300007  FF                 	db	255
  5065                           
  5066                           ;Config register CONFIG5L @ 0x300008
  5067                           ;	Code Protection bit
  5068                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5069                           ;	Code Protection bit
  5070                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5071                           ;	Code Protection bit
  5072                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5073                           ;	Code Protection bit
  5074                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5075  300008                     	org	3145736
  5076  300008  0F                 	db	15
  5077                           
  5078                           ;Config register CONFIG5H @ 0x300009
  5079                           ;	Boot Block Code Protection bit
  5080                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5081                           ;	Data EEPROM Code Protection bit
  5082                           ;	CPD = OFF, Data EEPROM is not code-protected
  5083  300009                     	org	3145737
  5084  300009  C0                 	db	192
  5085                           
  5086                           ;Config register CONFIG6L @ 0x30000A
  5087                           ;	Write Protection bit
  5088                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5089                           ;	Write Protection bit
  5090                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5091                           ;	Write Protection bit
  5092                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5093                           ;	Write Protection bit
  5094                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5095  30000A                     	org	3145738
  5096  30000A  0F                 	db	15
  5097                           
  5098                           ;Config register CONFIG6H @ 0x30000B
  5099                           ;	Configuration Register Write Protection bit
  5100                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5101                           ;	Boot Block Write Protection bit
  5102                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5103                           ;	Data EEPROM Write Protection bit
  5104                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5105  30000B                     	org	3145739
  5106  30000B  E0                 	db	224
  5107                           
  5108                           ;Config register CONFIG7L @ 0x30000C
  5109                           ;	Table Read Protection bit
  5110                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5111                           ;	Table Read Protection bit
  5112                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5113                           ;	Table Read Protection bit
  5114                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5115                           ;	Table Read Protection bit
  5116                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5117  30000C                     	org	3145740
  5118  30000C  0F                 	db	15
  5119                           
  5120                           ;Config register CONFIG7H @ 0x30000D
  5121                           ;	Boot Block Table Read Protection bit
  5122                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5123  30000D                     	org	3145741
  5124  30000D  40                 	db	64
  5125                           tosu	equ	0xFFF
  5126                           tosh	equ	0xFFE
  5127                           tosl	equ	0xFFD
  5128                           stkptr	equ	0xFFC
  5129                           pclatu	equ	0xFFB
  5130                           pclath	equ	0xFFA
  5131                           pcl	equ	0xFF9
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           indf0	equ	0xFEF
  5139                           postinc0	equ	0xFEE
  5140                           postdec0	equ	0xFED
  5141                           preinc0	equ	0xFEC
  5142                           plusw0	equ	0xFEB
  5143                           fsr0h	equ	0xFEA
  5144                           fsr0l	equ	0xFE9
  5145                           wreg	equ	0xFE8
  5146                           indf1	equ	0xFE7
  5147                           postinc1	equ	0xFE6
  5148                           postdec1	equ	0xFE5
  5149                           preinc1	equ	0xFE4
  5150                           plusw1	equ	0xFE3
  5151                           fsr1h	equ	0xFE2
  5152                           fsr1l	equ	0xFE1
  5153                           bsr	equ	0xFE0
  5154                           indf2	equ	0xFDF
  5155                           postinc2	equ	0xFDE
  5156                           postdec2	equ	0xFDD
  5157                           preinc2	equ	0xFDC
  5158                           plusw2	equ	0xFDB
  5159                           fsr2h	equ	0xFDA
  5160                           fsr2l	equ	0xFD9
  5161                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     36     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S918$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S918$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ControlCalefactor@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    ControlAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    DatoSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    CompararTempe@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    CompararTempe@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    TemperaturaDigitada@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TemperaturaDigitada->___wmul
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatoSensorTH->_DHT11_ReadData
    _CompararTempe->_IniciarLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   12829
                                             93 COMRAM     2     2      0
                                             13 BANK0     23    23      0
                      _CompararTempe
                    _ControlAspersor
                  _ControlCalefactor
                       _DatoSensorTH
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                        _LedsIniciar
                          _PedirDato
                _TemperaturaDigitada
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _TemperaturaDigitada                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PedirDato                                            9     5      4    1545
                                              9 COMRAM     9     5      4
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (2) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatoSensorTH                                         7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCalefactor                                   11     7      4     196
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _ControlAspersor                                     11     7      4     196
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _CompararTempe                                       17     9      8     692
                                              2 COMRAM    17     9      8
                         _IniciarLed
 ---------------------------------------------------------------------------------
 (2) _IniciarLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                        _LedsIniciar
 ---------------------------------------------------------------------------------
 (1) _LedsIniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompararTempe
     _IniciarLed
       _LedsIniciar
   _ControlAspersor
   _ControlCalefactor
   _DatoSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _LedsIniciar
   _PedirDato
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
     _keyfind
   _TemperaturaDigitada
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhlll       2A      0       0      23        0.0%
BITBIGSFRllll       20      0       0      27        0.0%
BITBIGSFRhlh        1D      0       0      21        0.0%
BITBIGSFRhllh       11      0       0      22        0.0%
BITBIGSFRhh          E      0       0      20        0.0%
BITBIGSFRllhl        5      0       0      25        0.0%
BITBIGSFRlhl         4      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      28        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 05 16:15:29 2022

             ?_TemperaturaDigitada 0007                    ??_CompararTempe 000B  
                     ?_LCD_Command 0001                                 l20 1A26  
                               l23 19D6                                 l17 1C64  
                    ??_LedsIniciar 0001                                 l34 1B86  
                               l37 1CBA                                 l29 1882  
              ___wmul@multiplicand 0003                        ?_LCD_String 0003  
                              l214 0E22                                l223 0EAA  
                              l233 0F8A                                l227 0EEE  
                              l219 0E66                                l261 18DE  
                              l253 188C                                l270 1C74  
                              l264 1D20                                l360 17C2  
                              l520 142A                                l353 1932  
                              l273 1C82                                l258 18BC  
                              l355 192C                                l267 1C66  
                              l507 12C6                                l380 1D28  
                              l276 1C90                                l357 1934  
                              l390 1A74                                l374 174C  
                              l383 1AC0                                l369 153E  
                              l385 1AC2                                l377 1BC4  
                              l393 1CE0                                l388 1A72  
                              _abs 1B08                                _pad 160A  
                              prod 000FF3                                wreg 000FE8  
                      LCD_Char@dat 0002                     PedirDato@tecla 0010  
                             l1101 1692                               l1103 16CE  
                             l1111 08DA                               l2001 12DA  
                             l2011 134A                               l2003 12FA  
                             ?_abs 0013                               l2021 13C2  
                             l2013 1352                               l2005 12FE  
                             l2101 0910                               l1109 08D2  
                             l1150 1B46                               l1142 181C  
                             l2023 13D4                               l2015 1366  
                             l2007 130C                               l2111 09AC  
                             l2103 0918                               l1143 1824  
                             l1071 1986                               l1136 113E  
                             l2017 1374                               l2025 13DA  
                             l2009 132C                               l2041 1648  
                             l2033 160A                               l1129 0B12  
                             l2121 0A7C                               l2105 091E  
                             l2113 0A10                               l2201 10FC  
                             l1162 1608                               l1170 1B06  
                             l2027 13EA                               l2019 13A2  
                             l1147 1B3E                               l2051 16B6  
                             l2043 165C                               l2035 161A  
                             l2131 0AC6                               l2115 0A2A  
                             l2123 0A8C                               l2107 09A0  
                             l2141 19DA                               l2061 199A  
                             l2221 1B6C                               l2213 1B4A  
                             l2301 0EE8                               l2029 140A  
                             l1173 1D2A                               l2045 1670  
                             l2037 162E                               l2133 0AD2  
                             l2125 0A9E                               l2117 0A48  
                             l2109 09A6                               l2205 1108  
                             l2151 19F2                               l2143 19EA  
                             l2231 1CA6                               l2071 19B0  
                             l2063 199C                               l2223 1B74  
                             l2215 1B4A                               l2311 0F28  
                             l2303 0F00                               l2055 1B08  
                             l2047 1674                               l2039 163C  
                             l2135 0ADA                               l2127 0AAE  
                             l2119 0A62                               l2207 112C  
                             l2153 1A00                               l2145 19EC  
                             l2401 1C58                               l2073 19C2  
                             l2065 199E                               l2161 1826  
                             l2225 1B7A                               l2217 1B5A  
                             l2321 0F62                               l2313 0F3A  
                             l2305 0F12                               l2241 0D96  
                             l2233 0D5C                               l2057 1B22  
                             l2049 16A2                               l2129 0AB4  
                             l2137 0AEA                               l2081 0852  
                             l1098 1650                               l2155 1A12  
                             l2147 19EE                               l2403 1C5E  
                             l2227 1C92                               l2075 19C4  
                             l2067 19A0                               l2059 198A  
                             l2163 182A                               l2219 1B62  
                             l2251 0DDC                               l2243 0DA6  
                             l2235 0D64                               l2411 16EC  
                             l1179 1C30                               l2091 08C6  
                             l2083 087A                               l2171 0F8C  
                             l2341 18A0                               l2333 1884  
                             l2157 1A14                               l2149 19F0  
                             l2229 1C98                               l2077 19C6  
                             l2069 19A2                               l2165 184E  
                             l2261 0E02                               l2253 0DEC  
                             l2245 0DAA                               l2237 0D6C  
                             l2421 1700                               l2405 16D0  
                             l2093 08E2                               l2085 089A  
                             l2181 0FF8                               l2173 0FB0  
                             l2351 18DC                               l2343 18AE  
                             l2159 1A16                               l2167 1852  
                             l2327 0F78                               l2319 0F50  
                             l2271 0E42                               l2263 0E14  
                             l2255 0DF4                               l2247 0DB2  
                             l2239 0D7E                               l2423 1710  
                             l2407 16D4                               l2431 174E  
                             l2095 08F4                               l2087 08AA  
                             l2079 0832                               l2191 10C0  
                             l2183 101C                               l2175 0FBE  
                             l2169 1D22                               l2345 18B6  
                             l2361 1D1E                               l2281 0E80  
                             l2273 0E46                               l2265 0E1C  
                             l2257 0DF8                               l2249 0DC4  
                             l2425 1714                               l2417 16F4  
                             l2409 16E6                               l2441 17BA  
                             l2433 175E                               l2097 0902  
                             l2089 08AC                               l2193 10CE  
                             l2185 1064                               l2177 0FD0  
                             l2371 1906                               l2363 1C66  
                             l2347 18CA                               l2339 189A  
                             l2355 1D02                               l2451 1B96  
                             l2291 0EC0                               l2283 0E86  
                             l2275 0E58                               l2267 0E38  
                             l2259 0DFE                               l2427 1730  
                             l2419 16FA                               l2435 1776  
                             l2099 0908                               l2195 10E2  
                             l2179 0FD4                               l2373 190C  
                             l2365 18E2                               l2349 18CC  
                             l2357 1D06                               l2461 1BB4  
                             l2453 1B9A                               l2445 1B88  
                             l2293 0EC4                               l2285 0E8A  
                             l2277 0E60                               l2269 0E3C  
                             l2429 1748                               l2437 1792  
                             l2189 109C                               l2541 0B46  
                             l2375 191C                               l2367 18E6  
                             l2471 14B4                               l2463 142C  
                             l2359 1D14                               l2455 1BA0  
                             l2447 1B8C                               l2391 1C32  
                             l2295 0ECA                               l2287 0E9C  
                             l2279 0E7C                               l2439 17AE  
                             l2199 10EE                               l2383 17C4  
                             l2551 0B82                               l2543 0B48  
                             l2369 18F6                               l2473 14F8  
                             l2465 1434                               l2481 1ABA  
                             l2457 1BA4                               l2449 1B90  
                             l2393 1C36                               l2297 0ECE  
                             l2289 0EA4                               l2377 1CBC  
                             l1921 1540                               l2385 17CC  
                             l2561 0BF4                               l2553 0B9A  
                             l2545 0B4C                               l2475 1530  
                             l2467 1478                               l2483 1A28  
                             l2459 1BA8                               l2395 1C46  
                             l2299 0EE0                               l2379 1CD8  
                             l1931 15C2                               l1923 1552  
                             l2387 17DA                               l2491 1950  
                             l2571 0C8E                               l2563 0BFA  
                             l2555 0BAE                               l2547 0B50  
                             l2539 0B14                               l2477 1534  
                             l2469 14B0                               l2485 1A6C  
                             l2397 1C4C                               l1925 1564  
                             l1941 1AE6                               l2389 1800  
                             l2493 1958                               l2581 0D18  
                             l2573 0CAA                               l2565 0C0A  
                             l2549 0B6E                               l2557 0BBC  
                             l2479 1A76                               l2399 1C52  
                             l1927 156E                               l1935 1AC4  
                             l1943 1BFC                               l2495 1974  
                             l2487 1936                               l2583 0D1E  
                             l2575 0CC4                               l2567 0C62  
                             l2559 0BCC                               l1961 1176  
                             l1953 1140                               l1929 158C  
                             l1937 1AD0                               l1945 1C08  
                             l2489 1948                               l2585 0D32  
                             l2577 0CD0                               l2569 0C7C  
                             l1971 11D2                               l1963 1184  
                             l1955 1144                               l1939 1AE2  
                             l1947 1C0C                               l2587 0D3E  
                             l2579 0CFC                               l1981 123C  
                             l1973 11DA                               l1965 11A4  
                             l1957 1152                               l1949 1C24  
                             ?_pad 0011                               l1991 1286  
                             l1983 125C                               l1975 11EE  
                             l1967 11A8                               l1959 1172  
                             l1993 12A6                               l1985 125E  
                             l1977 11FC                               l1969 11B4  
                             l1987 1270                               l1979 120E  
                             l1989 1276                               l1997 12C8  
                             l1999 12CC                               STR_1 0801  
                             STR_2 080F                               STR_3 082E  
                             STR_4 082D                               STR_5 0825  
                             STR_6 082E                               STR_7 082D  
                             STR_8 081C                               u2000 18F6  
                             u2001 18F2                               u2010 1906  
                             u2011 1902                               u2020 191C  
                             u2100 1ABA                               u2021 1918  
                             u2101 1AB6                               u2030 192C  
                             u2110 1A6C                               u1310 1552  
                             u2031 1928                               u2111 1A68  
                             u1311 154E                               u1400 11D2  
                             u1320 1564                               u2040 181C  
                             u1401 11CE                               u1321 1560  
                             u2041 1818                               u2050 1730  
                             u1410 11FC                               u1330 158C  
                             u2051 172C                               u1411 11F8  
                             u1331 1588                               u2060 1478  
                             u1420 123C                               u1340 15C2  
                             u1500 161A                               u2061 1474  
                             u1421 1238                               u1341 15BE  
                             u1501 1616                               u2070 14B0  
                             u1430 1286                               u1350 1B06  
                             u1510 163C                               _LATB 000F8A  
                             u2071 14AC                               u1431 1282  
                             u1351 1B02                               u1511 1638  
                             u2080 14F8                               u1440 12DA  
                             u1360 1C24                               u1520 1692  
                             u1600 08F4                               _LATD 000F8C  
                             u2081 14F4                               u1441 12D6  
                             u1361 1C20                               u1521 168E  
                             u1601 08F0                               u2090 1530  
                             u1370 1152                               u1450 130C  
                             u1530 16A2                               u1610 0902  
                             u2091 152C                               u1371 114E  
                             u1451 1308                               u1531 169E  
                             u1611 08FE                               u1700 184A  
                             u1380 1184                               u1460 134A  
                             u1540 1B22                               u1620 0A2A  
                             u2340 0B6E                               u1381 1180  
                             u1461 1346                               u1541 1B1E  
                             u1621 0A26                               u2341 0B6A  
                             u1710 1872                               u1470 1374  
                             u1630 0A48                               u1550 0862  
                             u2350 0BCC                               u2407 0D9C  
                             u1391 11AE                               u1471 1370  
                             u1631 0A44                               u1551 085C  
                             u2351 0BC8                               u1720 1882  
                             u1800 0DC4                               u1480 13A2  
                             u1640 0A62                               u1560 0864  
                             u2360 0C0A                               u1721 187E  
                             u2417 0DE2                               u1801 0DC0  
                             u1481 139E                               u1641 0A5E  
                             u2361 0C06                               u1810 0DDC  
                             u1490 13EA                               u1650 0A7C  
                             u1570 087A                               u1730 0FB0  
                             u2507 1D18                               u2427 19A8  
                             u1707 1840                               u1811 0DD8  
                             u1491 13E6                               u1651 0A78  
                             u1571 0876                               u1731 0FAC  
                             u1900 0F12                               u1820 0E14  
                             u1660 0A8C                               u1580 08AA  
                             u1740 0FF8                               u2517 189C  
                             u2437 19CE                               u1717 1868  
                             u1901 0F0E                               u1821 0E10  
                             u1661 0A88                               u1581 08A6  
                             u1741 0FF4                               u1910 0F3A  
                             u1830 0E34                               u1670 0A9E  
                             u1590 08C6                               u1750 101C  
                             u2447 1C9E                               u1911 0F36  
                             u1831 0E30                               u1671 0A9A  
                             u1591 08C2                               u1751 1018  
                             u1920 0F62                               u1840 0E58  
                             u1680 0AAE                               u1760 10C0  
                             u2457 1CB2                               u1921 0F5E  
                             u1841 0E54                               u1681 0AAA  
                             u1761 10BC                               u2377 0B8C  
                             u1930 189A                               u1770 1B5A  
                             u1850 0E78                               u1690 0AC6  
                             u1931 1896                               u2467 1C3C  
                             u1771 1B56                               u1851 0E74  
                             u1691 0AC2                               u2387 0D48  
                             u1940 18AE                               u1860 0E9C  
                             u1780 0D7E                               u1941 18AA  
                             u2477 19F8                               u1861 0E98  
                             u1781 0D7A                               u2397 173A  
                             u1950 18CA                               u1870 0EBC  
                             u1790 0D96                               u1951 18C6  
                             u2487 1A1E                               u1871 0EB8  
                             u1791 0D92                               u1960 18DC  
                             u1880 0EE0                               u1961 18D8  
                             u2497 1D0C                               u1881 0EDC  
                             u1970 1C74                               u1890 0F00  
                             u1971 1C70                               u1891 0EFC  
                             u1980 1C82                               u1981 1C7E  
                             u1990 1C90                               u1991 1C8C  
                             _RBPU 007F8F                               abs@a 0013  
                             _dbuf 006B                               _main 0B14  
                             _dtoa 0832                               _prec 0064  
                             _nout 0060                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               fsr2l 000FD9  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                   ??_DHT11_ReadData 0001  
                    _LCD_String_xy 1B48                         PedirDato@i 0011  
            ??_TemperaturaDigitada 0009                       ___param_bank 000000  
                            ??_abs 0015                              ??_pad 0017  
                 __end_of_LCD_Char 19D8                   __end_of_LCD_Init 1C66  
                  __end_of___aodiv 12C8                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 142C  
                            _LATA0 007C48                              _LATC0 007C58  
                            _LATD0 007C60                              _LATD1 007C61  
                            _LATE0 007C68                              _LATE1 007C69  
                            _LATE2 007C6A                              _LATC7 007C5F  
                     vfpfcnvrt@fmt 0042                              _PORTB 000F81  
                            _PORTD 000F83                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                __end_of_LedsIniciar 1D2A  
                            _flags 0066                              _fputc 1540  
                  __end_of_keyfind 0F8C                              _fputs 1AC4  
                            pad@fp 0011                              _width 0062  
                            _putch 1D2A                              dtoa@d 001E  
                            dtoa@i 003E                              dtoa@n 0036  
                            dtoa@p 0030                              dtoa@s 0034  
                            dtoa@w 0032                              tablat 000FF5  
                            status 000FD8                    __end_of_sprintf 1988  
                       _IniciarLed 18E0                     ?_LCD_String_xy 0005  
                  __initialization 1BC6                       __end_of_main 0D5C  
                     __end_of_dtoa 0B14                             ??_main 005E  
                           ??_dtoa 0026                  __end_of_LCD_Clear 1CBC  
                    __activetblptr 000002                             _ADCON1 000FC1  
                           ?_fputc 0001                             ?_fputs 000A  
                           ?_putch 0001                _DHT11_CheckResponse 1C66  
                 LCD_String_xy@msg 0006                   LCD_String_xy@pos 0005  
                 LCD_String_xy@row 0008                             _OSCCON 000FD3  
                     vfprintf@cfmt 0056                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 1CBC  
             ?_DHT11_CheckResponse 0001                             _keypad 00AF  
                      _LedsIniciar 1D22                             clear_0 1BEC  
                           isa$std 000001                             pad@buf 0013  
                           _rowloc 0069                             dtoa@fp 001C  
                           _strlen 1BFC                             fputc@c 0001  
                           fputs@c 000E                             fputs@i 000F  
                           fputs@s 000A                          ??_keyfind 0001  
                     _DatoSensorTH 1B88                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8     ControlAspersor@HumedadDigitada 0003  
                           putch@c 0001                   __end_of_vfprintf 1826  
                        ??_sprintf 005E       CompararTempe@HumedadAdecuada 0013  
                PedirDato@Etiqueta 000A                          ?_LCD_Char 0001  
                       __accesstop 0060            __end_of__initialization 1BF2  
                        ?_LCD_Init 0001                    ??_LCD_String_xy 0008  
                    ___rparam_used 000001                        ?_IniciarLed 0001  
        TemperaturaDigitada@Decena 000E                     __pcstackCOMRAM 0001  
                     __pidataBANK0 1CE2              ??_DHT11_CheckResponse 0001  
                main@TempeAdecuada 00A8          TemperaturaDigitada@Unidad 000A  
                    __end_of_fputc 160A                      __end_of_fputs 1B08  
                    __end_of_putch 1D2C                       ??_LCD_String 0005  
                __end_of_PedirDato 174E                            ??_fputc 0005  
                          ??_fputs 000E                            ??_putch 0001  
                       __pbssBANK0 0060                         ??_LCD_Char 0001  
                       ??_LCD_Init 0003                 __end_of_LCD_String 1884  
                          ?___wmul 0001              __end_of_CompararTempe 1540  
                          ?_strlen 0001                      ??_DHT11_Start 0001  
      __end_of_TemperaturaDigitada 17C4                      LCD_String@msg 0003  
                          __Hparam 0000                            __Lparam 0000  
                          ___aodiv 1140                            ___aomod 12C8  
                        ?_vfprintf 0050                       __psmallconst 0800  
                          __pcinit 1BC6                            __ramtop 0800  
                 main@HumeAdecuada 00AA                            __ptext0 0B14  
                          __ptext1 1936                            __ptext2 17C4  
                          __ptext3 0F8C                            __ptext4 0832  
                          __ptext5 160A                            __ptext6 1BFC  
                          __ptext7 1AC4                            __ptext8 1540  
                          __ptext9 1D2A                            _col_loc 006A  
                          _keyfind 0D5C                          _LCD_Clear 1C92  
                          _sprintf 1936               end_of_initialization 1BF2  
                          fputc@fp 0003                     LCD_Command@cmd 0002  
                    __Lmediumconst 0000                            fputs@fp 000C  
           CompararTempe@HumActual 0005                  __end_of_vfpfcnvrt 1140  
                ??_ControlAspersor 0005                __end_of_DHT11_Start 1D22  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 0056  
                     ?_LedsIniciar 0001                            strlen@a 0003  
                          strlen@s 0001                          _PORTAbits 000F80  
                        _PORTDbits 000F83                          _TRISAbits 000F92  
                       main@Cadena 0098                         ?_LCD_Clear 0001  
           DatoSensorTH@T_Integral 0006                         main@indice 00A6  
                     ??_IniciarLed 0002                 DHT11_ReadData@data 0002  
                    ??_LCD_Command 0001                        vfpfcnvrt@ap 0044  
                      vfpfcnvrt@fp 0040                        vfpfcnvrt@ll 0048  
                   __end_of___wmul 1CE2            IniciarLed@HumedadOptima 0001  
     ControlAspersor@HumedadActual 0001                     __end_of_strlen 1C32  
               keypad_getkey@F3209 00BF                start_initialization 1BC6  
               __end_of_IniciarLed 1936                        __end_of_abs 1B48  
                      __end_of_pad 16D0                          _PedirDato 16D0  
        CompararTempe@TempDigitada 0007        IniciarLed@TemperaturaOptima 0002  
                      _DHT11_Start 1D02        __end_of_DHT11_CheckResponse 1C92  
            __end_of_LCD_String_xy 1B88                        vfprintf@fmt 0052  
      ControlCalefactor@TempActual 0001                           ??___wmul 0005  
    ControlCalefactor@TempDigitada 0003                        __pdataBANK0 00AF  
                         ??_strlen 0003                __end_of_LCD_Command 1A28  
                    __pcstackBANK0 008B                   ___aodiv@dividend 0001  
                      ??_LCD_Clear 0003                         ?_PedirDato 000A  
 CompararTempe@TemperaturaAdecuada 0012                 PedirDato@vecLlenar 000C  
                        _dtoa$1000 002E                           ?___aodiv 0001  
                         ?___aomod 0001                   ___aodiv@quotient 0013  
                   _DHT11_ReadData 1884                        __smallconst 0800  
                         ?_keyfind 0001              LCD_String_xy@location 0009  
                         ?_sprintf 0058                    _ControlAspersor 1A76  
                         _LCD_Char 1988                           _LCD_Init 1C32  
                   ___wmul@product 0005                           _LATDbits 000F8C  
           __end_of_DHT11_ReadData 18E0                        _LCD_Command 19D8  
                        _vfpfcnvrt 0F8C                          main@Datos 00AD  
                ___wmul@multiplier 0001                          main@Tempe 00A2  
                    ?_DatoSensorTH 0003                        ??_PedirDato 000E  
                      _INTCON2bits 000FF1                          copy_data0 1BDA  
                _ControlCalefactor 1A28                 ?_ControlCalefactor 0001  
                         __Hrparam 0000                         vfprintf@ap 0054  
                         __Lrparam 0000                         vfprintf@fp 0050  
              ??_ControlCalefactor 0005                    ?_DHT11_ReadData 0001  
          DatoSensorTH@RH_Integral 0005                         ?_vfpfcnvrt 0040  
                  DHT11_ReadData@i 0001                      _CompararTempe 142C  
                  ___aodiv@divisor 0009                    ___aodiv@counter 0011  
                   ??_DatoSensorTH 0005                         sprintf@fmt 005A  
                DatoSensorTH@Datos 0003            __end_of_ControlAspersor 1AC4  
TemperaturaDigitada@prmTemperatura 0007          __end_of_ControlCalefactor 1A76  
                         __ptext10 1B08                           __ptext11 12C8  
                         __ptext20 1C92                           __ptext12 1140  
                         __ptext21 1C32                           __ptext13 174E  
                         __ptext30 18E0                           __ptext22 19D8  
                         __ptext14 1CBC                           __ptext31 1D22  
                         __ptext23 1B88                           __ptext15 16D0  
                         __ptext24 1D02                           __ptext16 0D5C  
                         __ptext25 1884                           __ptext17 1B48  
                         __ptext26 1C66                           __ptext18 1826  
                         __ptext27 1A28                           __ptext19 1988  
                         __ptext28 1A76                           __ptext29 142C  
                     ?_DHT11_Start 0001                           _temp_col 0068  
         CompararTempe@HumDigitada 0009                           isa$xinst 000000  
                         main@Hume 00A4                           _vfprintf 17C4  
                         main@flag 00AC                     ?_CompararTempe 0003  
                       _LCD_String 1826                   ___aomod@dividend 0001  
                        sprintf@ap 008B                    ___aomod@divisor 0009  
                      ??_vfpfcnvrt 0046                    ___aomod@counter 0011  
                         sprintf@f 008D                           sprintf@s 0058  
                 ?_ControlAspersor 0001       TemperaturaDigitada@Resultado 000C  
              _TemperaturaDigitada 174E                       ___aodiv@sign 0012  
             __end_of_DatoSensorTH 1BC6            CompararTempe@TempActual 0003  
                     ___aomod@sign 0012  
