

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 23:19:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK0
    85  001CEC                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _keypad
    89  001CEC  31                 	db	49
    90  001CED  32                 	db	50
    91  001CEE  33                 	db	51
    92  001CEF  2F                 	db	47
    93  001CF0  34                 	db	52
    94  001CF1  35                 	db	53
    95  001CF2  36                 	db	54
    96  001CF3  2A                 	db	42
    97  001CF4  37                 	db	55
    98  001CF5  38                 	db	56
    99  001CF6  39                 	db	57
   100  001CF7  2D                 	db	45
   101  001CF8  2A                 	db	42
   102  001CF9  30                 	db	48
   103  001CFA  23                 	db	35
   104  001CFB  2B                 	db	43
   105                           
   106                           ;initializer for keypad_getkey@F3177
   107  001CFC  31                 	db	49
   108  001CFD  32                 	db	50
   109  001CFE  33                 	db	51
   110  001CFF  41                 	db	65
   111  001D00  34                 	db	52
   112  001D01  35                 	db	53
   113  001D02  36                 	db	54
   114  001D03  42                 	db	66
   115  001D04  37                 	db	55
   116  001D05  38                 	db	56
   117  001D06  39                 	db	57
   118  001D07  43                 	db	67
   119  001D08  2A                 	db	42
   120  001D09  30                 	db	48
   121  001D0A  23                 	db	35
   122  001D0B  44                 	db	68
   123  0000                     _TRISC	set	3988
   124  0000                     _LATC0	set	31832
   125  0000                     _PORTDbits	set	3971
   126  0000                     _LATDbits	set	3980
   127  0000                     _LATC7	set	31839
   128  0000                     _LATE2	set	31850
   129  0000                     _LATE1	set	31849
   130  0000                     _RBPU	set	32655
   131  0000                     _LATD1	set	31841
   132  0000                     _LATD0	set	31840
   133  0000                     _PORTAbits	set	3968
   134  0000                     _PORTB	set	3969
   135  0000                     _PORTD	set	3971
   136  0000                     _LATD	set	3980
   137  0000                     _TRISD	set	3989
   138  0000                     _ADCON1	set	4033
   139  0000                     _OSCCON	set	4051
   140  0000                     _TRISE	set	3990
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _TRISAbits	set	3986
   143  0000                     _TRISB	set	3987
   144  0000                     _LATE0	set	31848
   145  0000                     _LATB	set	3978
   146  0000                     _LATA0	set	31816
   147                           
   148                           	psect	smallconst
   149  000800                     __psmallconst:
   150                           	callstack 0
   151  000800  00                 	db	0
   152  000801                     STR_1:
   153  000801  54                 	db	84	;'T'
   154  000802  65                 	db	101	;'e'
   155  000803  6D                 	db	109	;'m'
   156  000804  70                 	db	112	;'p'
   157  000805  65                 	db	101	;'e'
   158  000806  2E                 	db	46
   159  000807  20                 	db	32
   160  000808  4F                 	db	79	;'O'
   161  000809  70                 	db	112	;'p'
   162  00080A  74                 	db	116	;'t'
   163  00080B  69                 	db	105	;'i'
   164  00080C  6D                 	db	109	;'m'
   165  00080D  61                 	db	97	;'a'
   166  00080E  00                 	db	0
   167  00080F                     STR_5:
   168  00080F  20                 	db	32
   169  000810  20                 	db	32
   170  000811  48                 	db	72	;'H'
   171  000812  75                 	db	117	;'u'
   172  000813  6D                 	db	109	;'m'
   173  000814  65                 	db	101	;'e'
   174  000815  2E                 	db	46
   175  000816  41                 	db	65	;'A'
   176  000817  63                 	db	99	;'c'
   177  000818  74                 	db	116	;'t'
   178  000819  75                 	db	117	;'u'
   179  00081A  61                 	db	97	;'a'
   180  00081B  6C                 	db	108	;'l'
   181  00081C  00                 	db	0
   182  00081D                     STR_2:
   183  00081D  48                 	db	72	;'H'
   184  00081E  75                 	db	117	;'u'
   185  00081F  6D                 	db	109	;'m'
   186  000820  65                 	db	101	;'e'
   187  000821  2E                 	db	46
   188  000822  20                 	db	32
   189  000823  4F                 	db	79	;'O'
   190  000824  70                 	db	112	;'p'
   191  000825  74                 	db	116	;'t'
   192  000826  69                 	db	105	;'i'
   193  000827  6D                 	db	109	;'m'
   194  000828  61                 	db	97	;'a'
   195  000829  00                 	db	0
   196  00082A                     STR_8:
   197  00082A  54                 	db	84	;'T'
   198  00082B  65                 	db	101	;'e'
   199  00082C  6D                 	db	109	;'m'
   200  00082D  70                 	db	112	;'p'
   201  00082E  65                 	db	101	;'e'
   202  00082F  2E                 	db	46
   203  000830  41                 	db	65	;'A'
   204  000831  63                 	db	99	;'c'
   205  000832  74                 	db	116	;'t'
   206  000833  75                 	db	117	;'u'
   207  000834  61                 	db	97	;'a'
   208  000835  6C                 	db	108	;'l'
   209  000836  00                 	db	0
   210  000837                     STR_4:
   211  000837  2E                 	db	46
   212  000838  25                 	db	37
   213  000839  64                 	db	100	;'d'
   214  00083A  00                 	db	0
   215  00083B  00                 	db	0	; dummy byte at the end
   216  0000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220  001BD0                     __pcinit:
   221                           	callstack 0
   222  001BD0                     start_initialization:
   223                           	callstack 0
   224  001BD0                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK0 (32 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229  001BD0  0EEC               	movlw	low __pidataBANK0
   230  001BD2  6EF6               	movwf	tblptrl,c
   231  001BD4  0E1C               	movlw	high __pidataBANK0
   232  001BD6  6EF7               	movwf	tblptrh,c
   233  001BD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234  001BDA  6EF8               	movwf	tblptru,c
   235  001BDC  EE00  F0AF         	lfsr	0,__pdataBANK0
   236  001BE0  EE10 F020          	lfsr	1,32
   237  001BE4                     copy_data0:
   238  001BE4  0009               	tblrd		*+
   239  001BE6  CFF5 FFEE          	movff	tablat,postinc0
   240  001BEA  50E5               	movf	postdec1,w,c
   241  001BEC  50E1               	movf	fsr1l,w,c
   242  001BEE  E1FA               	bnz	copy_data0
   243                           
   244                           ; Clear objects allocated to BANK0 (43 bytes)
   245  001BF0  EE00  F060         	lfsr	0,__pbssBANK0
   246  001BF4  0E2B               	movlw	43
   247  001BF6                     clear_0:
   248  001BF6  6AEE               	clrf	postinc0,c
   249  001BF8  06E8               	decf	wreg,f,c
   250  001BFA  E1FD               	bnz	clear_0
   251  001BFC                     end_of_initialization:
   252                           	callstack 0
   253  001BFC                     __end_of__initialization:
   254                           	callstack 0
   255  001BFC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  001BFE  6EF8               	movwf	tblptru,c
   257  001C00  0100               	movlb	0
   258  001C02  EF8F  F005         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssBANK0
   261  000060                     __pbssBANK0:
   262                           	callstack 0
   263  000060                     _nout:
   264                           	callstack 0
   265  000060                     	ds	2
   266  000062                     _width:
   267                           	callstack 0
   268  000062                     	ds	2
   269  000064                     _prec:
   270                           	callstack 0
   271  000064                     	ds	2
   272  000066                     _flags:
   273                           	callstack 0
   274  000066                     	ds	2
   275  000068                     _temp_col:
   276                           	callstack 0
   277  000068                     	ds	1
   278  000069                     _rowloc:
   279                           	callstack 0
   280  000069                     	ds	1
   281  00006A                     _col_loc:
   282                           	callstack 0
   283  00006A                     	ds	1
   284  00006B                     _dbuf:
   285                           	callstack 0
   286  00006B                     	ds	32
   287                           
   288                           	psect	dataBANK0
   289  0000AF                     __pdataBANK0:
   290                           	callstack 0
   291  0000AF                     _keypad:
   292                           	callstack 0
   293  0000AF                     	ds	16
   294  0000BF                     keypad_getkey@F3177:
   295                           	callstack 0
   296  0000BF                     	ds	16
   297                           
   298                           	psect	cstackBANK0
   299  00008B                     __pcstackBANK0:
   300                           	callstack 0
   301  00008B                     sprintf@ap:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305  00008B                     	ds	2
   306  00008D                     sprintf@f:
   307                           	callstack 0
   308                           
   309                           ; 11 bytes @ 0x2
   310  00008D                     	ds	11
   311  000098                     main@Cadena:
   312                           	callstack 0
   313                           
   314                           ; 10 bytes @ 0xD
   315  000098                     	ds	10
   316  0000A2                     main@Tempe:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x17
   320  0000A2                     	ds	2
   321  0000A4                     main@Hume:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x19
   325  0000A4                     	ds	2
   326  0000A6                     main@indice:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x1B
   330  0000A6                     	ds	2
   331  0000A8                     main@TempeAdecuada:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x1D
   335  0000A8                     	ds	2
   336  0000AA                     main@HumeAdecuada:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x1F
   340  0000AA                     	ds	2
   341  0000AC                     main@bandera:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x21
   345  0000AC                     	ds	1
   346  0000AD                     main@Datos:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x22
   350  0000AD                     	ds	2
   351                           
   352                           	psect	cstackCOMRAM
   353  000001                     __pcstackCOMRAM:
   354                           	callstack 0
   355  000001                     ??_LCD_Command:
   356  000001                     ??_LCD_Char:
   357  000001                     ??_keyfind:
   358  000001                     ??_DHT11_Start:
   359  000001                     ?_strlen:
   360                           	callstack 0
   361  000001                     ?___wmul:
   362                           	callstack 0
   363  000001                     ?___aodiv:
   364                           	callstack 0
   365  000001                     ?___aomod:
   366                           	callstack 0
   367  000001                     DHT11_ReadData@i:
   368                           	callstack 0
   369  000001                     IniciarLed@HumedadOptima:
   370                           	callstack 0
   371  000001                     ControlAspersor@HumedadActual:
   372                           	callstack 0
   373  000001                     ControlCalefactor@TempActual:
   374                           	callstack 0
   375  000001                     ___wmul@multiplier:
   376                           	callstack 0
   377  000001                     fputc@c:
   378                           	callstack 0
   379  000001                     strlen@s:
   380                           	callstack 0
   381  000001                     ___aodiv@dividend:
   382                           	callstack 0
   383  000001                     ___aomod@dividend:
   384                           	callstack 0
   385                           
   386                           ; 8 bytes @ 0x0
   387  000001                     	ds	1
   388  000002                     LCD_Command@cmd:
   389                           	callstack 0
   390  000002                     LCD_Char@dat:
   391                           	callstack 0
   392  000002                     DHT11_ReadData@data:
   393                           	callstack 0
   394  000002                     IniciarLed@TemperaturaOptima:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x1
   398  000002                     	ds	1
   399  000003                     ??_LCD_Init:
   400  000003                     ??_LCD_Clear:
   401  000003                     LCD_String@msg:
   402                           	callstack 0
   403  000003                     CompararTempe@TempActual:
   404                           	callstack 0
   405  000003                     DatoSensorTH@Datos:
   406                           	callstack 0
   407  000003                     ControlAspersor@HumedadDigitada:
   408                           	callstack 0
   409  000003                     ControlCalefactor@TempDigitada:
   410                           	callstack 0
   411  000003                     ___wmul@multiplicand:
   412                           	callstack 0
   413  000003                     fputc@fp:
   414                           	callstack 0
   415  000003                     strlen@a:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419  000003                     	ds	2
   420  000005                     ??_ControlAspersor:
   421  000005                     ??_ControlCalefactor:
   422  000005                     ??_fputc:
   423  000005                     LCD_String_xy@pos:
   424                           	callstack 0
   425  000005                     DatoSensorTH@RH_Integral:
   426                           	callstack 0
   427  000005                     CompararTempe@HumActual:
   428                           	callstack 0
   429  000005                     ___wmul@product:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x4
   433  000005                     	ds	1
   434  000006                     DatoSensorTH@T_Integral:
   435                           	callstack 0
   436  000006                     LCD_String_xy@msg:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x5
   440  000006                     	ds	1
   441  000007                     ?_TemperaturaDigitada:
   442                           	callstack 0
   443  000007                     TemperaturaDigitada@prmTemperatura:
   444                           	callstack 0
   445  000007                     CompararTempe@TempDigitada:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x6
   449  000007                     	ds	1
   450  000008                     LCD_String_xy@row:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x7
   454  000008                     	ds	1
   455  000009                     ??_TemperaturaDigitada:
   456  000009                     LCD_String_xy@location:
   457                           	callstack 0
   458  000009                     CompararTempe@HumDigitada:
   459                           	callstack 0
   460  000009                     ___aodiv@divisor:
   461                           	callstack 0
   462  000009                     ___aomod@divisor:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x8
   466  000009                     	ds	1
   467  00000A                     TemperaturaDigitada@Unidad:
   468                           	callstack 0
   469  00000A                     PedirDato@Etiqueta:
   470                           	callstack 0
   471  00000A                     fputs@s:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x9
   475  00000A                     	ds	1
   476  00000B                     ??_CompararTempe:
   477                           
   478                           ; 1 bytes @ 0xA
   479  00000B                     	ds	1
   480  00000C                     TemperaturaDigitada@Resultado:
   481                           	callstack 0
   482  00000C                     PedirDato@vecLlenar:
   483                           	callstack 0
   484  00000C                     fputs@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xB
   488  00000C                     	ds	2
   489  00000E                     ??_PedirDato:
   490  00000E                     fputs@c:
   491                           	callstack 0
   492  00000E                     TemperaturaDigitada@Decena:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xD
   496  00000E                     	ds	1
   497  00000F                     fputs@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xE
   501  00000F                     	ds	1
   502  000010                     PedirDato@tecla:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xF
   506  000010                     	ds	1
   507  000011                     ?_pad:
   508                           	callstack 0
   509  000011                     ___aodiv@counter:
   510                           	callstack 0
   511  000011                     ___aomod@counter:
   512                           	callstack 0
   513  000011                     PedirDato@i:
   514                           	callstack 0
   515  000011                     pad@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x10
   519  000011                     	ds	1
   520  000012                     CompararTempe@TemperaturaAdecuada:
   521                           	callstack 0
   522  000012                     ___aodiv@sign:
   523                           	callstack 0
   524  000012                     ___aomod@sign:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528  000012                     	ds	1
   529  000013                     ?_abs:
   530                           	callstack 0
   531  000013                     CompararTempe@HumedadAdecuada:
   532                           	callstack 0
   533  000013                     pad@buf:
   534                           	callstack 0
   535  000013                     abs@a:
   536                           	callstack 0
   537  000013                     ___aodiv@quotient:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x12
   541  000013                     	ds	2
   542  000015                     ??_abs:
   543  000015                     pad@p:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x14
   547  000015                     	ds	2
   548  000017                     ??_pad:
   549                           
   550                           ; 1 bytes @ 0x16
   551  000017                     	ds	1
   552  000018                     pad@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x17
   556  000018                     	ds	2
   557  00001A                     pad@w:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x19
   561  00001A                     	ds	2
   562  00001C                     ?_dtoa:
   563                           	callstack 0
   564  00001C                     dtoa@fp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x1B
   568  00001C                     	ds	2
   569  00001E                     dtoa@d:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x1D
   573  00001E                     	ds	8
   574  000026                     ??_dtoa:
   575                           
   576                           ; 1 bytes @ 0x25
   577  000026                     	ds	8
   578  00002E                     _dtoa$1000:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x2D
   582  00002E                     	ds	2
   583  000030                     dtoa@p:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x2F
   587  000030                     	ds	2
   588  000032                     dtoa@w:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x31
   592  000032                     	ds	2
   593  000034                     dtoa@s:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x33
   597  000034                     	ds	2
   598  000036                     dtoa@n:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x35
   602  000036                     	ds	8
   603  00003E                     dtoa@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x3D
   607  00003E                     	ds	2
   608  000040                     ?_vfpfcnvrt:
   609                           	callstack 0
   610  000040                     vfpfcnvrt@fp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x3F
   614  000040                     	ds	2
   615  000042                     vfpfcnvrt@fmt:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x41
   619  000042                     	ds	2
   620  000044                     vfpfcnvrt@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x43
   624  000044                     	ds	2
   625  000046                     ??_vfpfcnvrt:
   626                           
   627                           ; 1 bytes @ 0x45
   628  000046                     	ds	2
   629  000048                     vfpfcnvrt@ll:
   630                           	callstack 0
   631                           
   632                           ; 8 bytes @ 0x47
   633  000048                     	ds	8
   634  000050                     ?_vfprintf:
   635                           	callstack 0
   636  000050                     vfprintf@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x4F
   640  000050                     	ds	2
   641  000052                     vfprintf@fmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x51
   645  000052                     	ds	2
   646  000054                     vfprintf@ap:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x53
   650  000054                     	ds	2
   651  000056                     vfprintf@cfmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x55
   655  000056                     	ds	2
   656  000058                     ?_sprintf:
   657                           	callstack 0
   658  000058                     sprintf@s:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x57
   662  000058                     	ds	2
   663  00005A                     sprintf@fmt:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x59
   667  00005A                     	ds	4
   668  00005E                     ??_main:
   669                           
   670                           ; 1 bytes @ 0x5D
   671  00005E                     	ds	2
   672                           
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 31 in file "Main_Invernadero.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  Cadena         10   13[BANK0 ] unsigned char [10]
   683 ;;  Datos           2   34[BANK0 ] unsigned char [2]
   684 ;;  Hume            2   25[BANK0 ] unsigned char [2]
   685 ;;  Tempe           2   23[BANK0 ] unsigned char [2]
   686 ;;  HumeAdecuada    2   31[BANK0 ] int 
   687 ;;  TempeAdecuad    2   29[BANK0 ] int 
   688 ;;  indice          2   27[BANK0 ] int 
   689 ;;  bandera         1   33[BANK0 ] _Bool 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         0       0       0       0       0       0       0       0       0
   700 ;;      Locals:         0      23       0       0       0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0
   702 ;;      Totals:         2      23       0       0       0       0       0       0       0
   703 ;;Total ram usage:       25 bytes
   704 ;; Hardware stack levels required when called: 8
   705 ;; This function calls:
   706 ;;		_CompararTempe
   707 ;;		_ControlAspersor
   708 ;;		_ControlCalefactor
   709 ;;		_DatoSensorTH
   710 ;;		_LCD_Char
   711 ;;		_LCD_Init
   712 ;;		_LCD_String
   713 ;;		_LCD_String_xy
   714 ;;		_LedsIniciar
   715 ;;		_PedirDato
   716 ;;		_TemperaturaDigitada
   717 ;;		_sprintf
   718 ;; This function is called by:
   719 ;;		Startup code after reset
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text0
   724  000B1E                     __ptext0:
   725                           	callstack 0
   726  000B1E                     _main:
   727                           	callstack 23
   728  000B1E                     
   729                           ;Main_Invernadero.c: 36:     TRISE = 0;
   730  000B1E  0E00               	movlw	0
   731  000B20  6E96               	movwf	150,c	;volatile
   732                           
   733                           ;Main_Invernadero.c: 38:     TRISD=0x00;
   734  000B22  0E00               	movlw	0
   735  000B24  6E95               	movwf	149,c	;volatile
   736                           
   737                           ;Main_Invernadero.c: 39:     _Bool bandera = 0;
   738  000B26  0E00               	movlw	0
   739  000B28  0100               	movlb	0	; () banked
   740  000B2A  6FAC               	movwf	main@bandera& (0+255),b
   741                           
   742                           ;Main_Invernadero.c: 40:     unsigned char Tempe[2];;Main_Invernadero.c: 41:     unsigne
      +                          d char Hume[2];;Main_Invernadero.c: 42:     char Datos[2];;Main_Invernadero.c: 43:     c
      +                          har Cadena[10];;Main_Invernadero.c: 44:     int indice = 0;
   743  000B2C  0E00               	movlw	0
   744  000B2E  6FA7               	movwf	(main@indice+1)& (0+255),b
   745  000B30  0E00               	movlw	0
   746  000B32  6FA6               	movwf	main@indice& (0+255),b
   747                           
   748                           ;Main_Invernadero.c: 45:     int TempeAdecuada=0;
   749  000B34  0E00               	movlw	0
   750  000B36  6FA9               	movwf	(main@TempeAdecuada+1)& (0+255),b
   751  000B38  0E00               	movlw	0
   752  000B3A  6FA8               	movwf	main@TempeAdecuada& (0+255),b
   753                           
   754                           ;Main_Invernadero.c: 46:     int HumeAdecuada=0;
   755  000B3C  0E00               	movlw	0
   756  000B3E  6FAB               	movwf	(main@HumeAdecuada+1)& (0+255),b
   757  000B40  0E00               	movlw	0
   758  000B42  6FAA               	movwf	main@HumeAdecuada& (0+255),b
   759                           
   760                           ;Main_Invernadero.c: 51:     OSCCON = 0x72;
   761  000B44  0E72               	movlw	114
   762  000B46  6ED3               	movwf	211,c	;volatile
   763                           
   764                           ;Main_Invernadero.c: 53:     ADCON1=0x0F;
   765  000B48  0E0F               	movlw	15
   766  000B4A  6EC1               	movwf	193,c	;volatile
   767                           
   768                           ;Main_Invernadero.c: 54:     TRISC=0x00;
   769  000B4C  0E00               	movlw	0
   770  000B4E  6E94               	movwf	148,c	;volatile
   771  000B50                     
   772                           ; BSR set to: 0
   773                           ;Main_Invernadero.c: 56:      RBPU=0;
   774  000B50  9EF1               	bcf	4081,7,c	;volatile
   775  000B52                     
   776                           ; BSR set to: 0
   777                           ;Main_Invernadero.c: 58:      LCD_Init();
   778  000B52  EC1E  F00E         	call	_LCD_Init	;wreg free
   779  000B56                     
   780                           ;Main_Invernadero.c: 60:      LedsIniciar();
   781  000B56  EC96  F00E         	call	_LedsIniciar	;wreg free
   782  000B5A                     l2547:
   783                           
   784                           ;Main_Invernadero.c: 64:         if(indice<2){
   785  000B5A  0100               	movlb	0	; () banked
   786  000B5C  BFA7               	btfsc	(main@indice+1)& (0+255),7,b
   787  000B5E  EFBC  F005         	goto	u2340
   788  000B62  51A7               	movf	(main@indice+1)& (0+255),w,b
   789  000B64  E107               	bnz	u2341
   790  000B66  0E02               	movlw	2
   791  000B68  5DA6               	subwf	main@indice& (0+255),w,b
   792  000B6A  B0D8               	btfsc	status,0,c
   793  000B6C  EFBA  F005         	goto	u2341
   794  000B70  EFBC  F005         	goto	u2340
   795  000B74                     u2341:
   796  000B74  EFE3  F005         	goto	l2557
   797  000B78                     u2340:
   798  000B78                     
   799                           ; BSR set to: 0
   800                           ;Main_Invernadero.c: 65:        PedirDato("Tempe. Optima",Tempe);
   801  000B78  0E01               	movlw	low STR_1
   802  000B7A  6E0A               	movwf	PedirDato@Etiqueta^0,c
   803  000B7C  0E08               	movlw	high STR_1
   804  000B7E  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   805  000B80  0EA2               	movlw	low main@Tempe
   806  000B82  6E0C               	movwf	PedirDato@vecLlenar^0,c
   807  000B84  0E00               	movlw	high main@Tempe
   808  000B86  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   809  000B88  EC6D  F00B         	call	_PedirDato	;wreg free
   810  000B8C                     
   811                           ;Main_Invernadero.c: 66:        _delay((unsigned long)((100)*(8000000/4000.0)));
   812  000B8C  0E02               	movlw	2
   813  000B8E  6E5F               	movwf	(??_main+1)^0,c
   814  000B90  0E04               	movlw	4
   815  000B92  6E5E               	movwf	??_main^0,c
   816  000B94  0EBA               	movlw	186
   817  000B96                     u2377:
   818  000B96  2EE8               	decfsz	wreg,f,c
   819  000B98  D7FE               	bra	u2377
   820  000B9A  2E5E               	decfsz	??_main^0,f,c
   821  000B9C  D7FC               	bra	u2377
   822  000B9E  2E5F               	decfsz	(??_main+1)^0,f,c
   823  000BA0  D7FA               	bra	u2377
   824  000BA2  D000               	nop2	
   825  000BA4                     
   826                           ;Main_Invernadero.c: 67:        PedirDato("Hume. Optima",Hume);
   827  000BA4  0E1D               	movlw	low STR_2
   828  000BA6  6E0A               	movwf	PedirDato@Etiqueta^0,c
   829  000BA8  0E08               	movlw	high STR_2
   830  000BAA  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   831  000BAC  0EA4               	movlw	low main@Hume
   832  000BAE  6E0C               	movwf	PedirDato@vecLlenar^0,c
   833  000BB0  0E00               	movlw	high main@Hume
   834  000BB2  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   835  000BB4  EC6D  F00B         	call	_PedirDato	;wreg free
   836  000BB8                     
   837                           ;Main_Invernadero.c: 68:        indice = 2;
   838  000BB8  0E00               	movlw	0
   839  000BBA  0100               	movlb	0	; () banked
   840  000BBC  6FA7               	movwf	(main@indice+1)& (0+255),b
   841  000BBE  0E02               	movlw	2
   842  000BC0  6FA6               	movwf	main@indice& (0+255),b
   843                           
   844                           ;Main_Invernadero.c: 69:     }
   845  000BC2  EF02  F006         	goto	l2563
   846  000BC6                     l2557:
   847                           
   848                           ; BSR set to: 0
   849                           ;Main_Invernadero.c: 71:         if(bandera==0){
   850  000BC6  51AC               	movf	main@bandera& (0+255),w,b
   851  000BC8  A4D8               	btfss	status,2,c
   852  000BCA  EFE9  F005         	goto	u2351
   853  000BCE  EFEB  F005         	goto	u2350
   854  000BD2                     u2351:
   855  000BD2  EFFF  F005         	goto	l2561
   856  000BD6                     u2350:
   857  000BD6                     
   858                           ; BSR set to: 0
   859                           ;Main_Invernadero.c: 72:          TempeAdecuada = TemperaturaDigitada(Tempe);
   860  000BD6  0EA2               	movlw	low main@Tempe
   861  000BD8  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   862  000BDA  0E00               	movlw	high main@Tempe
   863  000BDC  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   864  000BDE  ECAC  F00B         	call	_TemperaturaDigitada	;wreg free
   865  000BE2  C007  F0A8         	movff	?_TemperaturaDigitada,main@TempeAdecuada
   866  000BE6  C008  F0A9         	movff	?_TemperaturaDigitada+1,main@TempeAdecuada+1
   867                           
   868                           ;Main_Invernadero.c: 73:          HumeAdecuada = TemperaturaDigitada(Hume);
   869  000BEA  0EA4               	movlw	low main@Hume
   870  000BEC  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   871  000BEE  0E00               	movlw	high main@Hume
   872  000BF0  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   873  000BF2  ECAC  F00B         	call	_TemperaturaDigitada	;wreg free
   874  000BF6  C007  F0AA         	movff	?_TemperaturaDigitada,main@HumeAdecuada
   875  000BFA  C008  F0AB         	movff	?_TemperaturaDigitada+1,main@HumeAdecuada+1
   876  000BFE                     l2561:
   877                           
   878                           ;Main_Invernadero.c: 75:        bandera=1;
   879  000BFE  0E01               	movlw	1
   880  000C00  0100               	movlb	0	; () banked
   881  000C02  6FAC               	movwf	main@bandera& (0+255),b
   882  000C04                     l2563:
   883                           
   884                           ; BSR set to: 0
   885                           ;Main_Invernadero.c: 77:      if (bandera==1){
   886  000C04  05AC               	decf	main@bandera& (0+255),w,b
   887  000C06  A4D8               	btfss	status,2,c
   888  000C08  EF08  F006         	goto	u2361
   889  000C0C  EF0A  F006         	goto	u2360
   890  000C10                     u2361:
   891  000C10  EFAD  F005         	goto	l2547
   892  000C14                     u2360:
   893  000C14                     
   894                           ; BSR set to: 0
   895                           ;Main_Invernadero.c: 78:         DatoSensorTH(Datos);
   896  000C14  0EAD               	movlw	low main@Datos
   897  000C16  6E03               	movwf	DatoSensorTH@Datos^0,c
   898  000C18  0E00               	movlw	high main@Datos
   899  000C1A  6E04               	movwf	(DatoSensorTH@Datos+1)^0,c
   900  000C1C  ECC9  F00D         	call	_DatoSensorTH	;wreg free
   901                           
   902                           ;Main_Invernadero.c: 79:         CompararTempe(&Datos[0],&Datos[1],TempeAdecuada,HumeAde
      +                          cuada);
   903  000C20  0EAD               	movlw	low main@Datos
   904  000C22  6E03               	movwf	CompararTempe@TempActual^0,c
   905  000C24  0E00               	movlw	high main@Datos
   906  000C26  6E04               	movwf	(CompararTempe@TempActual+1)^0,c
   907  000C28  0EAE               	movlw	low (main@Datos+1)
   908  000C2A  6E05               	movwf	CompararTempe@HumActual^0,c
   909  000C2C  0E00               	movlw	high (main@Datos+1)
   910  000C2E  6E06               	movwf	(CompararTempe@HumActual+1)^0,c
   911  000C30  C0A8  F007         	movff	main@TempeAdecuada,CompararTempe@TempDigitada
   912  000C34  C0A9  F008         	movff	main@TempeAdecuada+1,CompararTempe@TempDigitada+1
   913  000C38  C0AA  F009         	movff	main@HumeAdecuada,CompararTempe@HumDigitada
   914  000C3C  C0AB  F00A         	movff	main@HumeAdecuada+1,CompararTempe@HumDigitada+1
   915  000C40  EC1B  F00A         	call	_CompararTempe	;wreg free
   916                           
   917                           ;Main_Invernadero.c: 80:         ControlAspersor(&Datos[1],HumeAdecuada);
   918  000C44  0EAE               	movlw	low (main@Datos+1)
   919  000C46  6E01               	movwf	ControlAspersor@HumedadActual^0,c
   920  000C48  0E00               	movlw	high (main@Datos+1)
   921  000C4A  6E02               	movwf	(ControlAspersor@HumedadActual+1)^0,c
   922  000C4C  C0AA  F003         	movff	main@HumeAdecuada,ControlAspersor@HumedadDigitada
   923  000C50  C0AB  F004         	movff	main@HumeAdecuada+1,ControlAspersor@HumedadDigitada+1
   924  000C54  EC40  F00D         	call	_ControlAspersor	;wreg free
   925                           
   926                           ;Main_Invernadero.c: 81:         ControlCalefactor(&Datos[0],TempeAdecuada);
   927  000C58  0EAD               	movlw	low main@Datos
   928  000C5A  6E01               	movwf	ControlCalefactor@TempActual^0,c
   929  000C5C  0E00               	movlw	high main@Datos
   930  000C5E  6E02               	movwf	(ControlCalefactor@TempActual+1)^0,c
   931  000C60  C0A8  F003         	movff	main@TempeAdecuada,ControlCalefactor@TempDigitada
   932  000C64  C0A9  F004         	movff	main@TempeAdecuada+1,ControlCalefactor@TempDigitada+1
   933  000C68  EC19  F00D         	call	_ControlCalefactor	;wreg free
   934  000C6C                     
   935                           ;Main_Invernadero.c: 84:     sprintf(Cadena,"%d",Datos[1]);
   936  000C6C  0E98               	movlw	low main@Cadena
   937  000C6E  6E58               	movwf	sprintf@s^0,c
   938  000C70  0E00               	movlw	high main@Cadena
   939  000C72  6E59               	movwf	(sprintf@s+1)^0,c
   940  000C74  0E38               	movlw	low (STR_4+1)
   941  000C76  6E5A               	movwf	sprintf@fmt^0,c
   942  000C78  0E08               	movlw	high (STR_4+1)
   943  000C7A  6E5B               	movwf	(sprintf@fmt+1)^0,c
   944  000C7C  C0AE  F05C         	movff	main@Datos+1,?_sprintf+4
   945  000C80  6A5D               	clrf	(?_sprintf+5)^0,c
   946  000C82  ECA0  F00C         	call	_sprintf	;wreg free
   947  000C86                     
   948                           ;Main_Invernadero.c: 85:     LCD_String_xy(0,0,Cadena);
   949  000C86  0E00               	movlw	0
   950  000C88  6E05               	movwf	LCD_String_xy@pos^0,c
   951  000C8A  0E98               	movlw	low main@Cadena
   952  000C8C  6E06               	movwf	LCD_String_xy@msg^0,c
   953  000C8E  0E00               	movlw	high main@Cadena
   954  000C90  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   955  000C92  0E00               	movlw	0
   956  000C94  ECA9  F00D         	call	_LCD_String_xy
   957  000C98                     
   958                           ;Main_Invernadero.c: 86:     sprintf(Cadena,".%d",0);
   959  000C98  0E98               	movlw	low main@Cadena
   960  000C9A  6E58               	movwf	sprintf@s^0,c
   961  000C9C  0E00               	movlw	high main@Cadena
   962  000C9E  6E59               	movwf	(sprintf@s+1)^0,c
   963  000CA0  0E37               	movlw	low STR_4
   964  000CA2  6E5A               	movwf	sprintf@fmt^0,c
   965  000CA4  0E08               	movlw	high STR_4
   966  000CA6  6E5B               	movwf	(sprintf@fmt+1)^0,c
   967  000CA8  0E00               	movlw	0
   968  000CAA  6E5D               	movwf	(?_sprintf+5)^0,c
   969  000CAC  0E00               	movlw	0
   970  000CAE  6E5C               	movwf	(?_sprintf+4)^0,c
   971  000CB0  ECA0  F00C         	call	_sprintf	;wreg free
   972  000CB4                     
   973                           ;Main_Invernadero.c: 87:     LCD_Char('%');
   974  000CB4  0E25               	movlw	37
   975  000CB6  ECC9  F00C         	call	_LCD_Char
   976                           
   977                           ;Main_Invernadero.c: 88:     sprintf(Cadena,"  Hume.Actual");
   978  000CBA  0E98               	movlw	low main@Cadena
   979  000CBC  6E58               	movwf	sprintf@s^0,c
   980  000CBE  0E00               	movlw	high main@Cadena
   981  000CC0  6E59               	movwf	(sprintf@s+1)^0,c
   982  000CC2  0E0F               	movlw	low STR_5
   983  000CC4  6E5A               	movwf	sprintf@fmt^0,c
   984  000CC6  0E08               	movlw	high STR_5
   985  000CC8  6E5B               	movwf	(sprintf@fmt+1)^0,c
   986  000CCA  ECA0  F00C         	call	_sprintf	;wreg free
   987  000CCE                     
   988                           ;Main_Invernadero.c: 89:      LCD_String(Cadena);
   989  000CCE  0E98               	movlw	low main@Cadena
   990  000CD0  6E03               	movwf	LCD_String@msg^0,c
   991  000CD2  0E00               	movlw	high main@Cadena
   992  000CD4  6E04               	movwf	(LCD_String@msg+1)^0,c
   993  000CD6  EC18  F00C         	call	_LCD_String	;wreg free
   994  000CDA                     
   995                           ;Main_Invernadero.c: 92:     sprintf(Cadena,"%d",Datos[0]);
   996  000CDA  0E98               	movlw	low main@Cadena
   997  000CDC  6E58               	movwf	sprintf@s^0,c
   998  000CDE  0E00               	movlw	high main@Cadena
   999  000CE0  6E59               	movwf	(sprintf@s+1)^0,c
  1000  000CE2  0E38               	movlw	low (STR_4+1)
  1001  000CE4  6E5A               	movwf	sprintf@fmt^0,c
  1002  000CE6  0E08               	movlw	high (STR_4+1)
  1003  000CE8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1004  000CEA  C0AD  F05C         	movff	main@Datos,?_sprintf+4
  1005  000CEE  6A5D               	clrf	(?_sprintf+5)^0,c
  1006  000CF0  ECA0  F00C         	call	_sprintf	;wreg free
  1007                           
  1008                           ;Main_Invernadero.c: 93:     LCD_String_xy(2,0,Cadena);
  1009  000CF4  0E00               	movlw	0
  1010  000CF6  6E05               	movwf	LCD_String_xy@pos^0,c
  1011  000CF8  0E98               	movlw	low main@Cadena
  1012  000CFA  6E06               	movwf	LCD_String_xy@msg^0,c
  1013  000CFC  0E00               	movlw	high main@Cadena
  1014  000CFE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1015  000D00  0E02               	movlw	2
  1016  000D02  ECA9  F00D         	call	_LCD_String_xy
  1017  000D06                     
  1018                           ;Main_Invernadero.c: 94:     sprintf(Cadena,".%d",0);
  1019  000D06  0E98               	movlw	low main@Cadena
  1020  000D08  6E58               	movwf	sprintf@s^0,c
  1021  000D0A  0E00               	movlw	high main@Cadena
  1022  000D0C  6E59               	movwf	(sprintf@s+1)^0,c
  1023  000D0E  0E37               	movlw	low STR_4
  1024  000D10  6E5A               	movwf	sprintf@fmt^0,c
  1025  000D12  0E08               	movlw	high STR_4
  1026  000D14  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1027  000D16  0E00               	movlw	0
  1028  000D18  6E5D               	movwf	(?_sprintf+5)^0,c
  1029  000D1A  0E00               	movlw	0
  1030  000D1C  6E5C               	movwf	(?_sprintf+4)^0,c
  1031  000D1E  ECA0  F00C         	call	_sprintf	;wreg free
  1032  000D22                     
  1033                           ;Main_Invernadero.c: 95:     LCD_Char(0xdf);
  1034  000D22  0EDF               	movlw	223
  1035  000D24  ECC9  F00C         	call	_LCD_Char
  1036  000D28                     
  1037                           ;Main_Invernadero.c: 96:     sprintf(Cadena,"Tempe.Actual");
  1038  000D28  0E98               	movlw	low main@Cadena
  1039  000D2A  6E58               	movwf	sprintf@s^0,c
  1040  000D2C  0E00               	movlw	high main@Cadena
  1041  000D2E  6E59               	movwf	(sprintf@s+1)^0,c
  1042  000D30  0E2A               	movlw	low STR_8
  1043  000D32  6E5A               	movwf	sprintf@fmt^0,c
  1044  000D34  0E08               	movlw	high STR_8
  1045  000D36  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1046  000D38  ECA0  F00C         	call	_sprintf	;wreg free
  1047  000D3C                     
  1048                           ;Main_Invernadero.c: 97:     LCD_String(Cadena);
  1049  000D3C  0E98               	movlw	low main@Cadena
  1050  000D3E  6E03               	movwf	LCD_String@msg^0,c
  1051  000D40  0E00               	movlw	high main@Cadena
  1052  000D42  6E04               	movwf	(LCD_String@msg+1)^0,c
  1053  000D44  EC18  F00C         	call	_LCD_String	;wreg free
  1054  000D48                     
  1055                           ;Main_Invernadero.c: 99:        _delay((unsigned long)((500)*(8000000/4000.0)));
  1056  000D48  0E06               	movlw	6
  1057  000D4A  6E5F               	movwf	(??_main+1)^0,c
  1058  000D4C  0E13               	movlw	19
  1059  000D4E  6E5E               	movwf	??_main^0,c
  1060  000D50  0EAE               	movlw	174
  1061  000D52                     u2387:
  1062  000D52  2EE8               	decfsz	wreg,f,c
  1063  000D54  D7FE               	bra	u2387
  1064  000D56  2E5E               	decfsz	??_main^0,f,c
  1065  000D58  D7FC               	bra	u2387
  1066  000D5A  2E5F               	decfsz	(??_main+1)^0,f,c
  1067  000D5C  D7FA               	bra	u2387
  1068  000D5E  EFAD  F005         	goto	l2547
  1069  000D62  EF00  F000         	goto	start
  1070  000D66                     __end_of_main:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _sprintf *****************
  1074 ;; Defined at:
  1075 ;;		line 9 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  s               2   87[COMRAM] PTR unsigned char 
  1078 ;;		 -> main@Cadena(10), 
  1079 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1080 ;;		 -> STR_8(13), STR_7(4), STR_6(3), STR_5(14), 
  1081 ;;		 -> STR_4(4), STR_3(3), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  f              11    2[BANK0 ] struct _IO_FILE
  1084 ;;  ap              2    0[BANK0 ] PTR void [1]
  1085 ;;		 -> ?_sprintf(2), 
  1086 ;;  ret             2    0        int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   87[COMRAM] int 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         6       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         6      13       0       0       0       0       0       0       0
  1100 ;;Total ram usage:       19 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 7
  1103 ;; This function calls:
  1104 ;;		_vfprintf
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text1
  1111  001940                     __ptext1:
  1112                           	callstack 0
  1113  001940                     _sprintf:
  1114                           	callstack 23
  1115  001940  0E5C               	movlw	low (?_sprintf+4)
  1116  001942  0100               	movlb	0	; () banked
  1117  001944  6F8B               	movwf	sprintf@ap& (0+255),b
  1118  001946  0E00               	movlw	high (?_sprintf+4)
  1119  001948  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
  1120  00194A  C058  F08D         	movff	sprintf@s,sprintf@f
  1121  00194E  C059  F08E         	movff	sprintf@s+1,sprintf@f+1
  1122  001952                     
  1123                           ; BSR set to: 0
  1124  001952  0E00               	movlw	0
  1125  001954  6F91               	movwf	(sprintf@f+4)& (0+255),b
  1126  001956  0E00               	movlw	0
  1127  001958  6F90               	movwf	(sprintf@f+3)& (0+255),b
  1128  00195A                     
  1129                           ; BSR set to: 0
  1130  00195A  0E00               	movlw	0
  1131  00195C  6F97               	movwf	(sprintf@f+10)& (0+255),b
  1132  00195E  0E00               	movlw	0
  1133  001960  6F96               	movwf	(sprintf@f+9)& (0+255),b
  1134  001962                     
  1135                           ; BSR set to: 0
  1136  001962  0E8D               	movlw	low sprintf@f
  1137  001964  6E50               	movwf	vfprintf@fp^0,c
  1138  001966  0E00               	movlw	high sprintf@f
  1139  001968  6E51               	movwf	(vfprintf@fp+1)^0,c
  1140  00196A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1141  00196E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1142  001972  0E8B               	movlw	low sprintf@ap
  1143  001974  6E54               	movwf	vfprintf@ap^0,c
  1144  001976  0E00               	movlw	high sprintf@ap
  1145  001978  6E55               	movwf	(vfprintf@ap+1)^0,c
  1146  00197A  ECE7  F00B         	call	_vfprintf	;wreg free
  1147  00197E  0100               	movlb	0	; () banked
  1148  001980  5190               	movf	(sprintf@f+3)& (0+255),w,b
  1149  001982  2458               	addwf	sprintf@s^0,w,c
  1150  001984  6ED9               	movwf	fsr2l,c
  1151  001986  5191               	movf	(sprintf@f+4)& (0+255),w,b
  1152  001988  2059               	addwfc	(sprintf@s+1)^0,w,c
  1153  00198A  6EDA               	movwf	fsr2h,c
  1154  00198C  0E00               	movlw	0
  1155  00198E  6EDF               	movwf	indf2,c
  1156  001990                     
  1157                           ; BSR set to: 0
  1158  001990  0012               	return		;funcret
  1159  001992                     __end_of_sprintf:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _vfprintf *****************
  1163 ;; Defined at:
  1164 ;;		line 1390 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1167 ;;		 -> sprintf@f(11), 
  1168 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1169 ;;		 -> STR_8(13), STR_7(4), STR_6(3), STR_5(14), 
  1170 ;;		 -> STR_4(4), STR_3(3), 
  1171 ;;  ap              2   83[COMRAM] PTR PTR void 
  1172 ;;		 -> sprintf@ap(2), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1175 ;;		 -> STR_8(13), STR_7(4), STR_6(3), STR_5(14), 
  1176 ;;		 -> STR_4(4), STR_3(3), 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2   79[COMRAM] int 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         6       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1190 ;;Total ram usage:        8 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 6
  1193 ;; This function calls:
  1194 ;;		_vfpfcnvrt
  1195 ;; This function is called by:
  1196 ;;		_sprintf
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text2
  1201  0017CE                     __ptext2:
  1202                           	callstack 0
  1203  0017CE                     _vfprintf:
  1204                           	callstack 23
  1205  0017CE                     
  1206                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);G:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1207  0017CE  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1208  0017D2  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1209  0017D6                     
  1210                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1211  0017D6  0E00               	movlw	0
  1212  0017D8  0100               	movlb	0	; () banked
  1213  0017DA  6F61               	movwf	(_nout+1)& (0+255),b
  1214  0017DC  0E00               	movlw	0
  1215  0017DE  6F60               	movwf	_nout& (0+255),b
  1216                           
  1217                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1218  0017E0  EF05  F00C         	goto	l2389
  1219  0017E4                     l2387:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1223  0017E4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1224  0017E8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1225  0017EC  0E56               	movlw	low vfprintf@cfmt
  1226  0017EE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1227  0017F0  0E00               	movlw	high vfprintf@cfmt
  1228  0017F2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1229  0017F4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1230  0017F8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1231  0017FC  ECCB  F007         	call	_vfpfcnvrt	;wreg free
  1232  001800  5040               	movf	?_vfpfcnvrt^0,w,c
  1233  001802  0100               	movlb	0	; () banked
  1234  001804  2760               	addwf	_nout& (0+255),f,b
  1235  001806  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1236  001808  2361               	addwfc	(_nout+1)& (0+255),f,b
  1237  00180A                     l2389:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1241  00180A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1242  00180E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1243  001812                     	if	0	;tblptru may be non-zero
  1244  001812                     	endif
  1245  001812                     	if	0	;tblptru may be non-zero
  1246  001812                     	endif
  1247  001812  0008               	tblrd		*
  1248  001814  50F5               	movf	tablat,w,c
  1249  001816  0900               	iorlw	0
  1250  001818  A4D8               	btfss	status,2,c
  1251  00181A  EF11  F00C         	goto	u2041
  1252  00181E  EF13  F00C         	goto	u2040
  1253  001822                     u2041:
  1254  001822  EFF2  F00B         	goto	l2387
  1255  001826                     u2040:
  1256  001826                     
  1257                           ; BSR set to: 0
  1258                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1259  001826  C060  F050         	movff	_nout,?_vfprintf
  1260  00182A  C061  F051         	movff	_nout+1,?_vfprintf+1
  1261  00182E                     
  1262                           ; BSR set to: 0
  1263  00182E  0012               	return		;funcret
  1264  001830                     __end_of_vfprintf:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _vfpfcnvrt *****************
  1268 ;; Defined at:
  1269 ;;		line 692 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1272 ;;		 -> sprintf@f(11), 
  1273 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1274 ;;		 -> vfprintf@cfmt(2), 
  1275 ;;  ap              2   67[COMRAM] PTR PTR void 
  1276 ;;		 -> sprintf@ap(2), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  ll              8   71[COMRAM] long long 
  1279 ;;  llu             8    0        unsigned long long 
  1280 ;;  f               4    0        unsigned long long 
  1281 ;;  vp              3    0        PTR void 
  1282 ;;  ct              3    0        unsigned char [3]
  1283 ;;  cp              3    0        PTR unsigned char 
  1284 ;;  i               2    0        int 
  1285 ;;  done            2    0        int 
  1286 ;;  c               1    0        unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2   63[COMRAM] int 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         6       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1299 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:       16 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 5
  1303 ;; This function calls:
  1304 ;;		_dtoa
  1305 ;;		_fputc
  1306 ;; This function is called by:
  1307 ;;		_vfprintf
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text3
  1312  000F96                     __ptext3:
  1313                           	callstack 0
  1314  000F96                     _vfpfcnvrt:
  1315                           	callstack 23
  1316  000F96                     
  1317                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);G:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;G:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;G:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;G:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1318  000F96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1319  000F9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1320  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  1321  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  1322  000FA6                     	if	0	;tblptru may be non-zero
  1323  000FA6                     	endif
  1324  000FA6                     	if	0	;tblptru may be non-zero
  1325  000FA6                     	endif
  1326  000FA6  0008               	tblrd		*
  1327  000FA8  50F5               	movf	tablat,w,c
  1328  000FAA  0A25               	xorlw	37
  1329  000FAC  A4D8               	btfss	status,2,c
  1330  000FAE  EFDB  F007         	goto	u1731
  1331  000FB2  EFDD  F007         	goto	u1730
  1332  000FB6                     u1731:
  1333  000FB6  EF89  F008         	goto	l2205
  1334  000FBA                     u1730:
  1335  000FBA                     
  1336                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1337  000FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1338  000FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1339  000FC2  2ADE               	incf	postinc2,f,c
  1340  000FC4  0E00               	movlw	0
  1341  000FC6  22DD               	addwfc	postdec2,f,c
  1342  000FC8                     
  1343                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1344  000FC8  0E00               	movlw	0
  1345  000FCA  0100               	movlb	0	; () banked
  1346  000FCC  6F63               	movwf	(_width+1)& (0+255),b
  1347  000FCE  0E00               	movlw	0
  1348  000FD0  6F62               	movwf	_width& (0+255),b
  1349  000FD2  C062  F066         	movff	_width,_flags
  1350  000FD6  C063  F067         	movff	_width+1,_flags+1
  1351  000FDA                     
  1352                           ; BSR set to: 0
  1353                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1354  000FDA  6964               	setf	_prec& (0+255),b
  1355  000FDC  6965               	setf	(_prec+1)& (0+255),b
  1356  000FDE                     
  1357                           ; BSR set to: 0
  1358                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1359  000FDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360  000FE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361  000FE6  CFDE FFF6          	movff	postinc2,tblptrl
  1362  000FEA  CFDD FFF7          	movff	postdec2,tblptrh
  1363  000FEE                     	if	0	;tblptru may be non-zero
  1364  000FEE                     	endif
  1365  000FEE                     	if	0	;tblptru may be non-zero
  1366  000FEE                     	endif
  1367  000FEE  0008               	tblrd		*
  1368  000FF0  50F5               	movf	tablat,w,c
  1369  000FF2  0A64               	xorlw	100
  1370  000FF4  B4D8               	btfsc	status,2,c
  1371  000FF6  EFFF  F007         	goto	u1741
  1372  000FFA  EF01  F008         	goto	u1740
  1373  000FFE                     u1741:
  1374  000FFE  EF13  F008         	goto	l2183
  1375  001002                     u1740:
  1376  001002                     
  1377                           ; BSR set to: 0
  1378  001002  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1379  001006  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1380  00100A  CFDE FFF6          	movff	postinc2,tblptrl
  1381  00100E  CFDD FFF7          	movff	postdec2,tblptrh
  1382  001012                     	if	0	;tblptru may be non-zero
  1383  001012                     	endif
  1384  001012                     	if	0	;tblptru may be non-zero
  1385  001012                     	endif
  1386  001012  0008               	tblrd		*
  1387  001014  50F5               	movf	tablat,w,c
  1388  001016  0A69               	xorlw	105
  1389  001018  A4D8               	btfss	status,2,c
  1390  00101A  EF11  F008         	goto	u1751
  1391  00101E  EF13  F008         	goto	u1750
  1392  001022                     u1751:
  1393  001022  EF53  F008         	goto	l2189
  1394  001026                     u1750:
  1395  001026                     l2183:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1399  001026  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1400  00102A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1401  00102E  2ADE               	incf	postinc2,f,c
  1402  001030  0E00               	movlw	0
  1403  001032  22DD               	addwfc	postdec2,f,c
  1404                           
  1405                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1406  001034  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1407  001038  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1408  00103C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1409  001040  0E02               	movlw	2
  1410  001042  26DE               	addwf	postinc2,f,c
  1411  001044  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1412  001048  0E00               	movlw	0
  1413  00104A  22DD               	addwfc	postdec2,f,c
  1414  00104C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1415  001050  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1416  001054  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1417  001058  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1418  00105C  0E00               	movlw	0
  1419  00105E  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1420  001060  0EFF               	movlw	-1
  1421  001062  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1422  001064  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1423  001066  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1424  001068  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1425  00106A  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1426  00106C  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1427  00106E                     
  1428                           ; BSR set to: 0
  1429                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1430  00106E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1431  001072  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1432  001076  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1433  00107A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1434  00107E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1435  001082  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1436  001086  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1437  00108A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1438  00108E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1439  001092  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1440  001096  EC1E  F004         	call	_dtoa	;wreg free
  1441  00109A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1442  00109E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1443  0010A2  EFA4  F008         	goto	l1136
  1444  0010A6                     l2189:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1448  0010A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  0010AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  0010AE  CFDE FFF6          	movff	postinc2,tblptrl
  1451  0010B2  CFDD FFF7          	movff	postdec2,tblptrh
  1452  0010B6                     	if	0	;tblptru may be non-zero
  1453  0010B6                     	endif
  1454  0010B6                     	if	0	;tblptru may be non-zero
  1455  0010B6                     	endif
  1456  0010B6  0008               	tblrd		*
  1457  0010B8  50F5               	movf	tablat,w,c
  1458  0010BA  0A25               	xorlw	37
  1459  0010BC  A4D8               	btfss	status,2,c
  1460  0010BE  EF63  F008         	goto	u1761
  1461  0010C2  EF65  F008         	goto	u1760
  1462  0010C6                     u1761:
  1463  0010C6  EF7C  F008         	goto	l2199
  1464  0010CA                     u1760:
  1465  0010CA                     
  1466                           ; BSR set to: 0
  1467                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1468  0010CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1469  0010CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1470  0010D2  2ADE               	incf	postinc2,f,c
  1471  0010D4  0E00               	movlw	0
  1472  0010D6  22DD               	addwfc	postdec2,f,c
  1473  0010D8                     
  1474                           ; BSR set to: 0
  1475                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1476  0010D8  0E00               	movlw	0
  1477  0010DA  6E02               	movwf	(fputc@c+1)^0,c
  1478  0010DC  0E25               	movlw	37
  1479  0010DE  6E01               	movwf	fputc@c^0,c
  1480  0010E0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1481  0010E4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1482  0010E8  ECA5  F00A         	call	_fputc	;wreg free
  1483  0010EC                     l2195:
  1484                           
  1485                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1486  0010EC  0E00               	movlw	0
  1487  0010EE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1488  0010F0  0E01               	movlw	1
  1489  0010F2  6E40               	movwf	?_vfpfcnvrt^0,c
  1490  0010F4  EFA4  F008         	goto	l1136
  1491  0010F8                     l2199:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1495  0010F8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1496  0010FC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1497  001100  2ADE               	incf	postinc2,f,c
  1498  001102  0E00               	movlw	0
  1499  001104  22DD               	addwfc	postdec2,f,c
  1500  001106                     
  1501                           ; BSR set to: 0
  1502                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1503  001106  0E00               	movlw	0
  1504  001108  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1505  00110A  0E00               	movlw	0
  1506  00110C  6E40               	movwf	?_vfpfcnvrt^0,c
  1507  00110E  EFA4  F008         	goto	l1136
  1508  001112                     l2205:
  1509                           
  1510                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1511  001112  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512  001116  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513  00111A  CFDE FFF6          	movff	postinc2,tblptrl
  1514  00111E  CFDD FFF7          	movff	postdec2,tblptrh
  1515  001122                     	if	0	;tblptru may be non-zero
  1516  001122                     	endif
  1517  001122                     	if	0	;tblptru may be non-zero
  1518  001122                     	endif
  1519  001122  0008               	tblrd		*
  1520  001124  50F5               	movf	tablat,w,c
  1521  001126  6E01               	movwf	fputc@c^0,c
  1522  001128  6A02               	clrf	(fputc@c+1)^0,c
  1523  00112A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1524  00112E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1525  001132  ECA5  F00A         	call	_fputc	;wreg free
  1526  001136                     
  1527                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1528  001136  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  00113A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  00113E  2ADE               	incf	postinc2,f,c
  1531  001140  0E00               	movlw	0
  1532  001142  22DD               	addwfc	postdec2,f,c
  1533  001144  EF76  F008         	goto	l2195
  1534  001148                     l1136:
  1535  001148  0012               	return		;funcret
  1536  00114A                     __end_of_vfpfcnvrt:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _dtoa *****************
  1540 ;; Defined at:
  1541 ;;		line 287 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1544 ;;		 -> sprintf@f(11), 
  1545 ;;  d               8   29[COMRAM] long long 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  n               8   53[COMRAM] long long 
  1548 ;;  i               2   61[COMRAM] int 
  1549 ;;  s               2   51[COMRAM] int 
  1550 ;;  w               2   49[COMRAM] int 
  1551 ;;  p               2   47[COMRAM] int 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  2   27[COMRAM] int 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1561 ;;      Params:        10       0       0       0       0       0       0       0       0
  1562 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1563 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1564 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1565 ;;Total ram usage:       36 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 4
  1568 ;; This function calls:
  1569 ;;		___aodiv
  1570 ;;		___aomod
  1571 ;;		_abs
  1572 ;;		_pad
  1573 ;; This function is called by:
  1574 ;;		_vfpfcnvrt
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text4
  1579  00083C                     __ptext4:
  1580                           	callstack 0
  1581  00083C                     _dtoa:
  1582                           	callstack 23
  1583  00083C                     
  1584                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1585  00083C  C01E  F036         	movff	dtoa@d,dtoa@n
  1586  000840  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1587  000844  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1588  000848  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1589  00084C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1590  000850  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1591  000854  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1592  000858  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1593  00085C                     
  1594                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1595  00085C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1596  00085E  EF33  F004         	goto	u1551
  1597  000862  EF36  F004         	goto	u1550
  1598  000866                     u1551:
  1599  000866  0E01               	movlw	1
  1600  000868  EF37  F004         	goto	u1560
  1601  00086C                     u1550:
  1602  00086C  0E00               	movlw	0
  1603  00086E                     u1560:
  1604  00086E  6E34               	movwf	dtoa@s^0,c
  1605  000870  6A35               	clrf	(dtoa@s+1)^0,c
  1606                           
  1607                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1608  000872  5034               	movf	dtoa@s^0,w,c
  1609  000874  1035               	iorwf	(dtoa@s+1)^0,w,c
  1610  000876  B4D8               	btfsc	status,2,c
  1611  000878  EF40  F004         	goto	u1571
  1612  00087C  EF42  F004         	goto	u1570
  1613  000880                     u1571:
  1614  000880  EF52  F004         	goto	l2085
  1615  000884                     u1570:
  1616  000884                     
  1617                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1618  000884  1E3D               	comf	(dtoa@n+7)^0,f,c
  1619  000886  1E3C               	comf	(dtoa@n+6)^0,f,c
  1620  000888  1E3B               	comf	(dtoa@n+5)^0,f,c
  1621  00088A  1E3A               	comf	(dtoa@n+4)^0,f,c
  1622  00088C  1E39               	comf	(dtoa@n+3)^0,f,c
  1623  00088E  1E38               	comf	(dtoa@n+2)^0,f,c
  1624  000890  1E37               	comf	(dtoa@n+1)^0,f,c
  1625  000892  6C36               	negf	dtoa@n^0,c
  1626  000894  0E00               	movlw	0
  1627  000896  2237               	addwfc	(dtoa@n+1)^0,f,c
  1628  000898  2238               	addwfc	(dtoa@n+2)^0,f,c
  1629  00089A  2239               	addwfc	(dtoa@n+3)^0,f,c
  1630  00089C  223A               	addwfc	(dtoa@n+4)^0,f,c
  1631  00089E  223B               	addwfc	(dtoa@n+5)^0,f,c
  1632  0008A0  223C               	addwfc	(dtoa@n+6)^0,f,c
  1633  0008A2  223D               	addwfc	(dtoa@n+7)^0,f,c
  1634  0008A4                     l2085:
  1635                           
  1636                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1637  0008A4  0100               	movlb	0	; () banked
  1638  0008A6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1639  0008A8  EF58  F004         	goto	u1581
  1640  0008AC  EF5A  F004         	goto	u1580
  1641  0008B0                     u1581:
  1642  0008B0  EF5B  F004         	goto	l2089
  1643  0008B4                     u1580:
  1644  0008B4                     
  1645                           ; BSR set to: 0
  1646                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1647  0008B4  9366               	bcf	_flags& (0+255),1,b
  1648  0008B6                     l2089:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1652  0008B6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1653  0008B8  EF68  F004         	goto	u1590
  1654  0008BC  5165               	movf	(_prec+1)& (0+255),w,b
  1655  0008BE  E106               	bnz	u1591
  1656  0008C0  0564               	decf	_prec& (0+255),w,b
  1657  0008C2  B0D8               	btfsc	status,0,c
  1658  0008C4  EF66  F004         	goto	u1591
  1659  0008C8  EF68  F004         	goto	u1590
  1660  0008CC                     u1591:
  1661  0008CC  EF6E  F004         	goto	l1109
  1662  0008D0                     u1590:
  1663  0008D0                     
  1664                           ; BSR set to: 0
  1665  0008D0  0E00               	movlw	0
  1666  0008D2  6E31               	movwf	(dtoa@p+1)^0,c
  1667  0008D4  0E01               	movlw	1
  1668  0008D6  6E30               	movwf	dtoa@p^0,c
  1669  0008D8  EF72  F004         	goto	l1111
  1670  0008DC                     l1109:
  1671                           
  1672                           ; BSR set to: 0
  1673  0008DC  C064  F030         	movff	_prec,dtoa@p
  1674  0008E0  C065  F031         	movff	_prec+1,dtoa@p+1
  1675  0008E4                     l1111:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1679  0008E4  C062  F032         	movff	_width,dtoa@w
  1680  0008E8  C063  F033         	movff	_width+1,dtoa@w+1
  1681  0008EC                     
  1682                           ; BSR set to: 0
  1683                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1684  0008EC  5034               	movf	dtoa@s^0,w,c
  1685  0008EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  1686  0008F0  A4D8               	btfss	status,2,c
  1687  0008F2  EF7D  F004         	goto	u1601
  1688  0008F6  EF7F  F004         	goto	u1600
  1689  0008FA                     u1601:
  1690  0008FA  EF86  F004         	goto	l2097
  1691  0008FE                     u1600:
  1692  0008FE                     
  1693                           ; BSR set to: 0
  1694  0008FE  A566               	btfss	_flags& (0+255),2,b
  1695  000900  EF84  F004         	goto	u1611
  1696  000904  EF86  F004         	goto	u1610
  1697  000908                     u1611:
  1698  000908  EF89  F004         	goto	l2099
  1699  00090C                     u1610:
  1700  00090C                     l2097:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1704  00090C  0632               	decf	dtoa@w^0,f,c
  1705  00090E  A0D8               	btfss	status,0,c
  1706  000910  0633               	decf	(dtoa@w+1)^0,f,c
  1707  000912                     l2099:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1711  000912  0E00               	movlw	0
  1712  000914  6E3F               	movwf	(dtoa@i+1)^0,c
  1713  000916  0E1F               	movlw	31
  1714  000918  6E3E               	movwf	dtoa@i^0,c
  1715  00091A                     
  1716                           ; BSR set to: 0
  1717                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1718  00091A  0E00               	movlw	0
  1719  00091C  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1720                           
  1721                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1722  00091E  EF0D  F005         	goto	l2113
  1723  000922                     l2103:
  1724                           
  1725                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1726  000922  063E               	decf	dtoa@i^0,f,c
  1727  000924  A0D8               	btfss	status,0,c
  1728  000926  063F               	decf	(dtoa@i+1)^0,f,c
  1729  000928                     
  1730                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1731  000928  0E6B               	movlw	low _dbuf
  1732  00092A  243E               	addwf	dtoa@i^0,w,c
  1733  00092C  6ED9               	movwf	fsr2l,c
  1734  00092E  0E00               	movlw	high _dbuf
  1735  000930  203F               	addwfc	(dtoa@i+1)^0,w,c
  1736  000932  6EDA               	movwf	fsr2h,c
  1737  000934  C036  F001         	movff	dtoa@n,___aomod@dividend
  1738  000938  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1739  00093C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1740  000940  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1741  000944  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1742  000948  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1743  00094C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1744  000950  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1745  000954  0E0A               	movlw	10
  1746  000956  6E09               	movwf	___aomod@divisor^0,c
  1747  000958  0E00               	movlw	0
  1748  00095A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1749  00095C  0E00               	movlw	0
  1750  00095E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1751  000960  0E00               	movlw	0
  1752  000962  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1753  000964  0E00               	movlw	0
  1754  000966  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1755  000968  0E00               	movlw	0
  1756  00096A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1757  00096C  0E00               	movlw	0
  1758  00096E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1759  000970  0E00               	movlw	0
  1760  000972  6E10               	movwf	(___aomod@divisor+7)^0,c
  1761  000974  EC69  F009         	call	___aomod	;wreg free
  1762  000978  C001  F026         	movff	?___aomod,??_dtoa
  1763  00097C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1764  000980  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1765  000984  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1766  000988  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1767  00098C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1768  000990  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1769  000994  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1770  000998  C026  F013         	movff	??_dtoa,abs@a
  1771  00099C  C028  F014         	movff	??_dtoa+2,abs@a+1
  1772  0009A0  EC89  F00D         	call	_abs	;wreg free
  1773  0009A4  5013               	movf	?_abs^0,w,c
  1774  0009A6  0F30               	addlw	48
  1775  0009A8  6EDF               	movwf	indf2,c
  1776  0009AA                     
  1777                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  1778  0009AA  0630               	decf	dtoa@p^0,f,c
  1779  0009AC  A0D8               	btfss	status,0,c
  1780  0009AE  0631               	decf	(dtoa@p+1)^0,f,c
  1781  0009B0                     
  1782                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  1783  0009B0  0632               	decf	dtoa@w^0,f,c
  1784  0009B2  A0D8               	btfss	status,0,c
  1785  0009B4  0633               	decf	(dtoa@w+1)^0,f,c
  1786  0009B6                     
  1787                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1788  0009B6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1789  0009BA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1790  0009BE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1791  0009C2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1792  0009C6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1793  0009CA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1794  0009CE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1795  0009D2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1796  0009D6  0E0A               	movlw	10
  1797  0009D8  6E09               	movwf	___aodiv@divisor^0,c
  1798  0009DA  0E00               	movlw	0
  1799  0009DC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1800  0009DE  0E00               	movlw	0
  1801  0009E0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1802  0009E2  0E00               	movlw	0
  1803  0009E4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1804  0009E6  0E00               	movlw	0
  1805  0009E8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1806  0009EA  0E00               	movlw	0
  1807  0009EC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1808  0009EE  0E00               	movlw	0
  1809  0009F0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1810  0009F2  0E00               	movlw	0
  1811  0009F4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1812  0009F6  ECA5  F008         	call	___aodiv	;wreg free
  1813  0009FA  C001  F036         	movff	?___aodiv,dtoa@n
  1814  0009FE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1815  000A02  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1816  000A06  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1817  000A0A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1818  000A0E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1819  000A12  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1820  000A16  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1821  000A1A                     l2113:
  1822                           
  1823                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1824  000A1A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1825  000A1C  EF18  F005         	goto	u1621
  1826  000A20  503F               	movf	(dtoa@i+1)^0,w,c
  1827  000A22  E108               	bnz	u1620
  1828  000A24  043E               	decf	dtoa@i^0,w,c
  1829  000A26  A0D8               	btfss	status,0,c
  1830  000A28  EF18  F005         	goto	u1621
  1831  000A2C  EF1A  F005         	goto	u1620
  1832  000A30                     u1621:
  1833  000A30  EF4B  F005         	goto	l2123
  1834  000A34                     u1620:
  1835  000A34  5036               	movf	dtoa@n^0,w,c
  1836  000A36  1037               	iorwf	(dtoa@n+1)^0,w,c
  1837  000A38  1038               	iorwf	(dtoa@n+2)^0,w,c
  1838  000A3A  1039               	iorwf	(dtoa@n+3)^0,w,c
  1839  000A3C  103A               	iorwf	(dtoa@n+4)^0,w,c
  1840  000A3E  103B               	iorwf	(dtoa@n+5)^0,w,c
  1841  000A40  103C               	iorwf	(dtoa@n+6)^0,w,c
  1842  000A42  103D               	iorwf	(dtoa@n+7)^0,w,c
  1843  000A44  A4D8               	btfss	status,2,c
  1844  000A46  EF27  F005         	goto	u1631
  1845  000A4A  EF29  F005         	goto	u1630
  1846  000A4E                     u1631:
  1847  000A4E  EF91  F004         	goto	l2103
  1848  000A52                     u1630:
  1849  000A52  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1850  000A54  EF36  F005         	goto	u1640
  1851  000A58  5031               	movf	(dtoa@p+1)^0,w,c
  1852  000A5A  E106               	bnz	u1641
  1853  000A5C  0430               	decf	dtoa@p^0,w,c
  1854  000A5E  B0D8               	btfsc	status,0,c
  1855  000A60  EF34  F005         	goto	u1641
  1856  000A64  EF36  F005         	goto	u1640
  1857  000A68                     u1641:
  1858  000A68  EF91  F004         	goto	l2103
  1859  000A6C                     u1640:
  1860  000A6C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1861  000A6E  EF41  F005         	goto	u1651
  1862  000A72  5033               	movf	(dtoa@w+1)^0,w,c
  1863  000A74  E108               	bnz	u1650
  1864  000A76  0432               	decf	dtoa@w^0,w,c
  1865  000A78  A0D8               	btfss	status,0,c
  1866  000A7A  EF41  F005         	goto	u1651
  1867  000A7E  EF43  F005         	goto	u1650
  1868  000A82                     u1651:
  1869  000A82  EF4B  F005         	goto	l2123
  1870  000A86                     u1650:
  1871  000A86  0100               	movlb	0	; () banked
  1872  000A88  B366               	btfsc	_flags& (0+255),1,b
  1873  000A8A  EF49  F005         	goto	u1661
  1874  000A8E  EF4B  F005         	goto	u1660
  1875  000A92                     u1661:
  1876  000A92  EF91  F004         	goto	l2103
  1877  000A96                     u1660:
  1878  000A96                     l2123:
  1879                           
  1880                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1881  000A96  5034               	movf	dtoa@s^0,w,c
  1882  000A98  1035               	iorwf	(dtoa@s+1)^0,w,c
  1883  000A9A  A4D8               	btfss	status,2,c
  1884  000A9C  EF52  F005         	goto	u1671
  1885  000AA0  EF54  F005         	goto	u1670
  1886  000AA4                     u1671:
  1887  000AA4  EF5C  F005         	goto	l2127
  1888  000AA8                     u1670:
  1889  000AA8  0100               	movlb	0	; () banked
  1890  000AAA  A566               	btfss	_flags& (0+255),2,b
  1891  000AAC  EF5A  F005         	goto	u1681
  1892  000AB0  EF5C  F005         	goto	u1680
  1893  000AB4                     u1681:
  1894  000AB4  EF7A  F005         	goto	l2137
  1895  000AB8                     u1680:
  1896  000AB8                     l2127:
  1897                           
  1898                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  1899  000AB8  063E               	decf	dtoa@i^0,f,c
  1900  000ABA  A0D8               	btfss	status,0,c
  1901  000ABC  063F               	decf	(dtoa@i+1)^0,f,c
  1902  000ABE                     
  1903                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1904  000ABE  5034               	movf	dtoa@s^0,w,c
  1905  000AC0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1906  000AC2  A4D8               	btfss	status,2,c
  1907  000AC4  EF66  F005         	goto	u1691
  1908  000AC8  EF68  F005         	goto	u1690
  1909  000ACC                     u1691:
  1910  000ACC  EF6E  F005         	goto	l2133
  1911  000AD0                     u1690:
  1912  000AD0  0E00               	movlw	0
  1913  000AD2  6E2F               	movwf	(_dtoa$1000+1)^0,c
  1914  000AD4  0E2B               	movlw	43
  1915  000AD6  6E2E               	movwf	_dtoa$1000^0,c
  1916  000AD8  EF72  F005         	goto	l2135
  1917  000ADC                     l2133:
  1918  000ADC  0E00               	movlw	0
  1919  000ADE  6E2F               	movwf	(_dtoa$1000+1)^0,c
  1920  000AE0  0E2D               	movlw	45
  1921  000AE2  6E2E               	movwf	_dtoa$1000^0,c
  1922  000AE4                     l2135:
  1923  000AE4  0E6B               	movlw	low _dbuf
  1924  000AE6  243E               	addwf	dtoa@i^0,w,c
  1925  000AE8  6ED9               	movwf	fsr2l,c
  1926  000AEA  0E00               	movlw	high _dbuf
  1927  000AEC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1928  000AEE  6EDA               	movwf	fsr2h,c
  1929  000AF0  C02E  FFDF         	movff	_dtoa$1000,indf2
  1930  000AF4                     l2137:
  1931                           
  1932                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1933  000AF4  C01C  F011         	movff	dtoa@fp,pad@fp
  1934  000AF8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1935  000AFC  0E6B               	movlw	low _dbuf
  1936  000AFE  243E               	addwf	dtoa@i^0,w,c
  1937  000B00  6E13               	movwf	pad@buf^0,c
  1938  000B02  0E00               	movlw	high _dbuf
  1939  000B04  203F               	addwfc	(dtoa@i+1)^0,w,c
  1940  000B06  6E14               	movwf	(pad@buf+1)^0,c
  1941  000B08  C032  F015         	movff	dtoa@w,pad@p
  1942  000B0C  C033  F016         	movff	dtoa@w+1,pad@p+1
  1943  000B10  EC0A  F00B         	call	_pad	;wreg free
  1944  000B14  C011  F01C         	movff	?_pad,?_dtoa
  1945  000B18  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1946  000B1C  0012               	return		;funcret
  1947  000B1E                     __end_of_dtoa:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _pad *****************
  1951 ;; Defined at:
  1952 ;;		line 72 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1955 ;;		 -> sprintf@f(11), 
  1956 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1957 ;;		 -> dbuf(32), 
  1958 ;;  p               2   20[COMRAM] int 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  w               2   25[COMRAM] int 
  1961 ;;  i               2   23[COMRAM] int 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  2   16[COMRAM] int 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         6       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1974 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:       11 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 3
  1978 ;; This function calls:
  1979 ;;		_fputc
  1980 ;;		_fputs
  1981 ;;		_strlen
  1982 ;; This function is called by:
  1983 ;;		_dtoa
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text5
  1988  001614                     __ptext5:
  1989                           	callstack 0
  1990  001614                     _pad:
  1991                           	callstack 23
  1992  001614                     
  1993                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1994  001614  0100               	movlb	0	; () banked
  1995  001616  A166               	btfss	_flags& (0+255),0,b
  1996  001618  EF10  F00B         	goto	u1501
  1997  00161C  EF12  F00B         	goto	u1500
  1998  001620                     u1501:
  1999  001620  EF1C  F00B         	goto	l2037
  2000  001624                     u1500:
  2001  001624                     
  2002                           ; BSR set to: 0
  2003                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2004  001624  C013  F00A         	movff	pad@buf,fputs@s
  2005  001628  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2006  00162C  C011  F00C         	movff	pad@fp,fputs@fp
  2007  001630  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2008  001634  EC67  F00D         	call	_fputs	;wreg free
  2009  001638                     l2037:
  2010                           
  2011                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2012  001638  BE16               	btfsc	(pad@p+1)^0,7,c
  2013  00163A  EF21  F00B         	goto	u1511
  2014  00163E  EF23  F00B         	goto	u1510
  2015  001642                     u1511:
  2016  001642  EF29  F00B         	goto	l2041
  2017  001646                     u1510:
  2018  001646  C015  F01A         	movff	pad@p,pad@w
  2019  00164A  C016  F01B         	movff	pad@p+1,pad@w+1
  2020  00164E  EF2D  F00B         	goto	l1098
  2021  001652                     l2041:
  2022  001652  0E00               	movlw	0
  2023  001654  6E1B               	movwf	(pad@w+1)^0,c
  2024  001656  0E00               	movlw	0
  2025  001658  6E1A               	movwf	pad@w^0,c
  2026  00165A                     l1098:
  2027                           
  2028                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2029  00165A  0E00               	movlw	0
  2030  00165C  6E19               	movwf	(pad@i+1)^0,c
  2031  00165E  0E00               	movlw	0
  2032  001660  6E18               	movwf	pad@i^0,c
  2033                           
  2034                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2035  001662  EF3F  F00B         	goto	l2047
  2036  001666                     l2043:
  2037                           
  2038                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2039  001666  0E00               	movlw	0
  2040  001668  6E02               	movwf	(fputc@c+1)^0,c
  2041  00166A  0E20               	movlw	32
  2042  00166C  6E01               	movwf	fputc@c^0,c
  2043  00166E  C011  F003         	movff	pad@fp,fputc@fp
  2044  001672  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2045  001676  ECA5  F00A         	call	_fputc	;wreg free
  2046  00167A                     
  2047                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2048  00167A  4A18               	infsnz	pad@i^0,f,c
  2049  00167C  2A19               	incf	(pad@i+1)^0,f,c
  2050  00167E                     l2047:
  2051                           
  2052                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2053  00167E  501A               	movf	pad@w^0,w,c
  2054  001680  5C18               	subwf	pad@i^0,w,c
  2055  001682  5019               	movf	(pad@i+1)^0,w,c
  2056  001684  0A80               	xorlw	128
  2057  001686  6E17               	movwf	??_pad^0,c
  2058  001688  501B               	movf	(pad@w+1)^0,w,c
  2059  00168A  0A80               	xorlw	128
  2060  00168C  5817               	subwfb	??_pad^0,w,c
  2061  00168E  A0D8               	btfss	status,0,c
  2062  001690  EF4C  F00B         	goto	u1521
  2063  001694  EF4E  F00B         	goto	u1520
  2064  001698                     u1521:
  2065  001698  EF33  F00B         	goto	l2043
  2066  00169C                     u1520:
  2067  00169C                     
  2068                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2069  00169C  0100               	movlb	0	; () banked
  2070  00169E  B166               	btfsc	_flags& (0+255),0,b
  2071  0016A0  EF54  F00B         	goto	u1531
  2072  0016A4  EF56  F00B         	goto	u1530
  2073  0016A8                     u1531:
  2074  0016A8  EF60  F00B         	goto	l2051
  2075  0016AC                     u1530:
  2076  0016AC                     
  2077                           ; BSR set to: 0
  2078                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2079  0016AC  C013  F00A         	movff	pad@buf,fputs@s
  2080  0016B0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2081  0016B4  C011  F00C         	movff	pad@fp,fputs@fp
  2082  0016B8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2083  0016BC  EC67  F00D         	call	_fputs	;wreg free
  2084  0016C0                     l2051:
  2085                           
  2086                           ;G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2087  0016C0  C013  F001         	movff	pad@buf,strlen@s
  2088  0016C4  C014  F002         	movff	pad@buf+1,strlen@s+1
  2089  0016C8  EC03  F00E         	call	_strlen	;wreg free
  2090  0016CC  501A               	movf	pad@w^0,w,c
  2091  0016CE  2401               	addwf	?_strlen^0,w,c
  2092  0016D0  6E11               	movwf	?_pad^0,c
  2093  0016D2  501B               	movf	(pad@w+1)^0,w,c
  2094  0016D4  2002               	addwfc	(?_strlen+1)^0,w,c
  2095  0016D6  6E12               	movwf	(?_pad+1)^0,c
  2096  0016D8  0012               	return		;funcret
  2097  0016DA                     __end_of_pad:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _strlen *****************
  2101 ;; Defined at:
  2102 ;;		line 5 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2105 ;;		 -> dbuf(32), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2108 ;;		 -> dbuf(32), 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    0[COMRAM] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_pad
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text6
  2132  001C06                     __ptext6:
  2133                           	callstack 0
  2134  001C06                     _strlen:
  2135                           	callstack 25
  2136  001C06  C001  F003         	movff	strlen@s,strlen@a
  2137  001C0A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2138  001C0E  EF0B  F00E         	goto	l1947
  2139  001C12                     l1945:
  2140  001C12  4A01               	infsnz	strlen@s^0,f,c
  2141  001C14  2A02               	incf	(strlen@s+1)^0,f,c
  2142  001C16                     l1947:
  2143  001C16  C001  FFD9         	movff	strlen@s,fsr2l
  2144  001C1A  C002  FFDA         	movff	strlen@s+1,fsr2h
  2145  001C1E  50DF               	movf	indf2,w,c
  2146  001C20  A4D8               	btfss	status,2,c
  2147  001C22  EF15  F00E         	goto	u1361
  2148  001C26  EF17  F00E         	goto	u1360
  2149  001C2A                     u1361:
  2150  001C2A  EF09  F00E         	goto	l1945
  2151  001C2E                     u1360:
  2152  001C2E  5003               	movf	strlen@a^0,w,c
  2153  001C30  5C01               	subwf	strlen@s^0,w,c
  2154  001C32  6E01               	movwf	?_strlen^0,c
  2155  001C34  5004               	movf	(strlen@a+1)^0,w,c
  2156  001C36  5802               	subwfb	(strlen@s+1)^0,w,c
  2157  001C38  6E02               	movwf	(?_strlen+1)^0,c
  2158  001C3A  0012               	return		;funcret
  2159  001C3C                     __end_of_strlen:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _fputs *****************
  2163 ;; Defined at:
  2164 ;;		line 8 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2167 ;;		 -> dbuf(32), 
  2168 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2169 ;;		 -> sprintf@f(11), 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  i               2   14[COMRAM] int 
  2172 ;;  c               1   13[COMRAM] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2    9[COMRAM] int 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2182 ;;      Params:         4       0       0       0       0       0       0       0       0
  2183 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2185 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2186 ;;Total ram usage:        7 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 2
  2189 ;; This function calls:
  2190 ;;		_fputc
  2191 ;; This function is called by:
  2192 ;;		_pad
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text7
  2197  001ACE                     __ptext7:
  2198                           	callstack 0
  2199  001ACE                     _fputs:
  2200                           	callstack 23
  2201  001ACE  0E00               	movlw	0
  2202  001AD0  6E10               	movwf	(fputs@i+1)^0,c
  2203  001AD2  0E00               	movlw	0
  2204  001AD4  6E0F               	movwf	fputs@i^0,c
  2205  001AD6  EF78  F00D         	goto	l1941
  2206  001ADA                     l1937:
  2207  001ADA  C00E  F001         	movff	fputs@c,fputc@c
  2208  001ADE  6A02               	clrf	(fputc@c+1)^0,c
  2209  001AE0  C00C  F003         	movff	fputs@fp,fputc@fp
  2210  001AE4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2211  001AE8  ECA5  F00A         	call	_fputc	;wreg free
  2212  001AEC  4A0F               	infsnz	fputs@i^0,f,c
  2213  001AEE  2A10               	incf	(fputs@i+1)^0,f,c
  2214  001AF0                     l1941:
  2215  001AF0  500F               	movf	fputs@i^0,w,c
  2216  001AF2  240A               	addwf	fputs@s^0,w,c
  2217  001AF4  6ED9               	movwf	fsr2l,c
  2218  001AF6  5010               	movf	(fputs@i+1)^0,w,c
  2219  001AF8  200B               	addwfc	(fputs@s+1)^0,w,c
  2220  001AFA  6EDA               	movwf	fsr2h,c
  2221  001AFC  50DF               	movf	indf2,w,c
  2222  001AFE  6E0E               	movwf	fputs@c^0,c
  2223  001B00  500E               	movf	fputs@c^0,w,c
  2224  001B02  A4D8               	btfss	status,2,c
  2225  001B04  EF86  F00D         	goto	u1351
  2226  001B08  EF88  F00D         	goto	u1350
  2227  001B0C                     u1351:
  2228  001B0C  EF6D  F00D         	goto	l1937
  2229  001B10                     u1350:
  2230  001B10  0012               	return		;funcret
  2231  001B12                     __end_of_fputs:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _fputc *****************
  2235 ;; Defined at:
  2236 ;;		line 8 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  c               2    0[COMRAM] int 
  2239 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2240 ;;		 -> sprintf@f(11), 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    0[COMRAM] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         4       0       0       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2254 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2255 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2256 ;;Total ram usage:        9 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 1
  2259 ;; This function calls:
  2260 ;;		_putch
  2261 ;; This function is called by:
  2262 ;;		_pad
  2263 ;;		_vfpfcnvrt
  2264 ;;		_fputs
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text8
  2269  00154A                     __ptext8:
  2270                           	callstack 0
  2271  00154A                     _fputc:
  2272                           	callstack 26
  2273  00154A  5003               	movf	fputc@fp^0,w,c
  2274  00154C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2275  00154E  B4D8               	btfsc	status,2,c
  2276  001550  EFAC  F00A         	goto	u1311
  2277  001554  EFAE  F00A         	goto	u1310
  2278  001558                     u1311:
  2279  001558  EFB7  F00A         	goto	l1925
  2280  00155C                     u1310:
  2281  00155C  5003               	movf	fputc@fp^0,w,c
  2282  00155E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2283  001560  A4D8               	btfss	status,2,c
  2284  001562  EFB5  F00A         	goto	u1321
  2285  001566  EFB7  F00A         	goto	u1320
  2286  00156A                     u1321:
  2287  00156A  EFBC  F00A         	goto	l1927
  2288  00156E                     u1320:
  2289  00156E                     l1925:
  2290  00156E  5001               	movf	fputc@c^0,w,c
  2291  001570  EC9A  F00E         	call	_putch
  2292  001574  EF09  F00B         	goto	l1162
  2293  001578                     l1927:
  2294  001578  EE20 F009          	lfsr	2,9
  2295  00157C  5003               	movf	fputc@fp^0,w,c
  2296  00157E  26D9               	addwf	fsr2l,f,c
  2297  001580  5004               	movf	(fputc@fp+1)^0,w,c
  2298  001582  22DA               	addwfc	fsr2h,f,c
  2299  001584  50DE               	movf	postinc2,w,c
  2300  001586  10DE               	iorwf	postinc2,w,c
  2301  001588  B4D8               	btfsc	status,2,c
  2302  00158A  EFC9  F00A         	goto	u1331
  2303  00158E  EFCB  F00A         	goto	u1330
  2304  001592                     u1331:
  2305  001592  EFE6  F00A         	goto	l1931
  2306  001596                     u1330:
  2307  001596  EE20 F009          	lfsr	2,9
  2308  00159A  5003               	movf	fputc@fp^0,w,c
  2309  00159C  26D9               	addwf	fsr2l,f,c
  2310  00159E  5004               	movf	(fputc@fp+1)^0,w,c
  2311  0015A0  22DA               	addwfc	fsr2h,f,c
  2312  0015A2  EE10 F003          	lfsr	1,3
  2313  0015A6  5003               	movf	fputc@fp^0,w,c
  2314  0015A8  26E1               	addwf	fsr1l,f,c
  2315  0015AA  5004               	movf	(fputc@fp+1)^0,w,c
  2316  0015AC  22E2               	addwfc	fsr1h,f,c
  2317  0015AE  50DE               	movf	postinc2,w,c
  2318  0015B0  5CE6               	subwf	postinc1,w,c
  2319  0015B2  50E6               	movf	postinc1,w,c
  2320  0015B4  0A80               	xorlw	128
  2321  0015B6  6E09               	movwf	(??_fputc+4)^0,c
  2322  0015B8  50DE               	movf	postinc2,w,c
  2323  0015BA  0A80               	xorlw	128
  2324  0015BC  5809               	subwfb	(??_fputc+4)^0,w,c
  2325  0015BE  B0D8               	btfsc	status,0,c
  2326  0015C0  EFE4  F00A         	goto	u1341
  2327  0015C4  EFE6  F00A         	goto	u1340
  2328  0015C8                     u1341:
  2329  0015C8  EF09  F00B         	goto	l1162
  2330  0015CC                     u1340:
  2331  0015CC                     l1931:
  2332  0015CC  EE20 F003          	lfsr	2,3
  2333  0015D0  5003               	movf	fputc@fp^0,w,c
  2334  0015D2  26D9               	addwf	fsr2l,f,c
  2335  0015D4  5004               	movf	(fputc@fp+1)^0,w,c
  2336  0015D6  22DA               	addwfc	fsr2h,f,c
  2337  0015D8  CFDE F005          	movff	postinc2,??_fputc
  2338  0015DC  CFDD F006          	movff	postdec2,??_fputc+1
  2339  0015E0  C003  FFD9         	movff	fputc@fp,fsr2l
  2340  0015E4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2341  0015E8  CFDE F007          	movff	postinc2,??_fputc+2
  2342  0015EC  CFDD F008          	movff	postdec2,??_fputc+3
  2343  0015F0  5005               	movf	??_fputc^0,w,c
  2344  0015F2  2407               	addwf	(??_fputc+2)^0,w,c
  2345  0015F4  6ED9               	movwf	fsr2l,c
  2346  0015F6  5006               	movf	(??_fputc+1)^0,w,c
  2347  0015F8  2008               	addwfc	(??_fputc+3)^0,w,c
  2348  0015FA  6EDA               	movwf	fsr2h,c
  2349  0015FC  C001  FFDF         	movff	fputc@c,indf2
  2350  001600  EE20 F003          	lfsr	2,3
  2351  001604  5003               	movf	fputc@fp^0,w,c
  2352  001606  26D9               	addwf	fsr2l,f,c
  2353  001608  5004               	movf	(fputc@fp+1)^0,w,c
  2354  00160A  22DA               	addwfc	fsr2h,f,c
  2355  00160C  2ADE               	incf	postinc2,f,c
  2356  00160E  0E00               	movlw	0
  2357  001610  22DD               	addwfc	postdec2,f,c
  2358  001612                     l1162:
  2359  001612  0012               	return		;funcret
  2360  001614                     __end_of_fputc:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _putch *****************
  2364 ;; Defined at:
  2365 ;;		line 7 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  c               1    wreg     unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  c               1    0[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_fputc
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text9
  2393  001D34                     __ptext9:
  2394                           	callstack 0
  2395  001D34                     _putch:
  2396                           	callstack 26
  2397  001D34  0012               	return		;funcret
  2398  001D36                     __end_of_putch:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _abs *****************
  2402 ;; Defined at:
  2403 ;;		line 1 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  a               2   18[COMRAM] int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  2   18[COMRAM] int 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2417 ;;      Params:         2       0       0       0       0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2421 ;;Total ram usage:        4 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_dtoa
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text10
  2431  001B12                     __ptext10:
  2432                           	callstack 0
  2433  001B12                     _abs:
  2434                           	callstack 26
  2435  001B12  BE14               	btfsc	(abs@a+1)^0,7,c
  2436  001B14  EF96  F00D         	goto	u1540
  2437  001B18  5014               	movf	(abs@a+1)^0,w,c
  2438  001B1A  E106               	bnz	u1541
  2439  001B1C  0413               	decf	abs@a^0,w,c
  2440  001B1E  B0D8               	btfsc	status,0,c
  2441  001B20  EF94  F00D         	goto	u1541
  2442  001B24  EF96  F00D         	goto	u1540
  2443  001B28                     u1541:
  2444  001B28  EFA4  F00D         	goto	l1147
  2445  001B2C                     u1540:
  2446  001B2C  C013  F015         	movff	abs@a,??_abs
  2447  001B30  C014  F016         	movff	abs@a+1,??_abs+1
  2448  001B34  1E15               	comf	??_abs^0,f,c
  2449  001B36  1E16               	comf	(??_abs+1)^0,f,c
  2450  001B38  4A15               	infsnz	??_abs^0,f,c
  2451  001B3A  2A16               	incf	(??_abs+1)^0,f,c
  2452  001B3C  C015  F013         	movff	??_abs,?_abs
  2453  001B40  C016  F014         	movff	??_abs+1,?_abs+1
  2454  001B44  EFA8  F00D         	goto	l1150
  2455  001B48                     l1147:
  2456  001B48  C013  F013         	movff	abs@a,?_abs
  2457  001B4C  C014  F014         	movff	abs@a+1,?_abs+1
  2458  001B50                     l1150:
  2459  001B50  0012               	return		;funcret
  2460  001B52                     __end_of_abs:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function ___aomod *****************
  2464 ;; Defined at:
  2465 ;;		line 9 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  dividend        8    0[COMRAM] long long 
  2468 ;;  divisor         8    8[COMRAM] long long 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  sign            1   17[COMRAM] unsigned char 
  2471 ;;  counter         1   16[COMRAM] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  8    0[COMRAM] long long 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2481 ;;      Params:        16       0       0       0       0       0       0       0       0
  2482 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2484 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2485 ;;Total ram usage:       18 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_dtoa
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text11
  2495  0012D2                     __ptext11:
  2496                           	callstack 0
  2497  0012D2                     ___aomod:
  2498                           	callstack 26
  2499  0012D2  0E00               	movlw	0
  2500  0012D4  6E12               	movwf	___aomod@sign^0,c
  2501  0012D6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2502  0012D8  EF72  F009         	goto	u1440
  2503  0012DC  EF70  F009         	goto	u1441
  2504  0012E0                     u1441:
  2505  0012E0  EF84  F009         	goto	l2005
  2506  0012E4                     u1440:
  2507  0012E4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2508  0012E6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2509  0012E8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2510  0012EA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2511  0012EC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2512  0012EE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2513  0012F0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2514  0012F2  6C01               	negf	___aomod@dividend^0,c
  2515  0012F4  0E00               	movlw	0
  2516  0012F6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2517  0012F8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2518  0012FA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2519  0012FC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2520  0012FE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2521  001300  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2522  001302  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2523  001304  0E01               	movlw	1
  2524  001306  6E12               	movwf	___aomod@sign^0,c
  2525  001308                     l2005:
  2526  001308  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2527  00130A  EF8B  F009         	goto	u1450
  2528  00130E  EF89  F009         	goto	u1451
  2529  001312                     u1451:
  2530  001312  EF9B  F009         	goto	l2009
  2531  001316                     u1450:
  2532  001316  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2533  001318  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2534  00131A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2535  00131C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2536  00131E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2537  001320  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2538  001322  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2539  001324  6C09               	negf	___aomod@divisor^0,c
  2540  001326  0E00               	movlw	0
  2541  001328  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2542  00132A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2543  00132C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2544  00132E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2545  001330  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2546  001332  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2547  001334  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2548  001336                     l2009:
  2549  001336  5009               	movf	___aomod@divisor^0,w,c
  2550  001338  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2551  00133A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2552  00133C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2553  00133E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2554  001340  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2555  001342  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2556  001344  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2557  001346  B4D8               	btfsc	status,2,c
  2558  001348  EFA8  F009         	goto	u1461
  2559  00134C  EFAA  F009         	goto	u1460
  2560  001350                     u1461:
  2561  001350  EFF2  F009         	goto	l2025
  2562  001354                     u1460:
  2563  001354  0E01               	movlw	1
  2564  001356  6E11               	movwf	___aomod@counter^0,c
  2565  001358  EFB8  F009         	goto	l2015
  2566  00135C                     l2013:
  2567  00135C  90D8               	bcf	status,0,c
  2568  00135E  3609               	rlcf	___aomod@divisor^0,f,c
  2569  001360  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2570  001362  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2571  001364  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2572  001366  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2573  001368  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2574  00136A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2575  00136C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2576  00136E  2A11               	incf	___aomod@counter^0,f,c
  2577  001370                     l2015:
  2578  001370  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2579  001372  EFBD  F009         	goto	u1471
  2580  001376  EFBF  F009         	goto	u1470
  2581  00137A                     u1471:
  2582  00137A  EFAE  F009         	goto	l2013
  2583  00137E                     u1470:
  2584  00137E                     l2017:
  2585  00137E  5009               	movf	___aomod@divisor^0,w,c
  2586  001380  5C01               	subwf	___aomod@dividend^0,w,c
  2587  001382  500A               	movf	(___aomod@divisor+1)^0,w,c
  2588  001384  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2589  001386  500B               	movf	(___aomod@divisor+2)^0,w,c
  2590  001388  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2591  00138A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2592  00138C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2593  00138E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2594  001390  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2595  001392  500E               	movf	(___aomod@divisor+5)^0,w,c
  2596  001394  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2597  001396  500F               	movf	(___aomod@divisor+6)^0,w,c
  2598  001398  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2599  00139A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2600  00139C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2601  00139E  A0D8               	btfss	status,0,c
  2602  0013A0  EFD4  F009         	goto	u1481
  2603  0013A4  EFD6  F009         	goto	u1480
  2604  0013A8                     u1481:
  2605  0013A8  EFE6  F009         	goto	l2021
  2606  0013AC                     u1480:
  2607  0013AC  5009               	movf	___aomod@divisor^0,w,c
  2608  0013AE  5E01               	subwf	___aomod@dividend^0,f,c
  2609  0013B0  500A               	movf	(___aomod@divisor+1)^0,w,c
  2610  0013B2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2611  0013B4  500B               	movf	(___aomod@divisor+2)^0,w,c
  2612  0013B6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2613  0013B8  500C               	movf	(___aomod@divisor+3)^0,w,c
  2614  0013BA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2615  0013BC  500D               	movf	(___aomod@divisor+4)^0,w,c
  2616  0013BE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2617  0013C0  500E               	movf	(___aomod@divisor+5)^0,w,c
  2618  0013C2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2619  0013C4  500F               	movf	(___aomod@divisor+6)^0,w,c
  2620  0013C6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2621  0013C8  5010               	movf	(___aomod@divisor+7)^0,w,c
  2622  0013CA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2623  0013CC                     l2021:
  2624  0013CC  90D8               	bcf	status,0,c
  2625  0013CE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2626  0013D0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2627  0013D2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2628  0013D4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2629  0013D6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2630  0013D8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2631  0013DA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2632  0013DC  3209               	rrcf	___aomod@divisor^0,f,c
  2633  0013DE  2E11               	decfsz	___aomod@counter^0,f,c
  2634  0013E0  EFBF  F009         	goto	l2017
  2635  0013E4                     l2025:
  2636  0013E4  5012               	movf	___aomod@sign^0,w,c
  2637  0013E6  B4D8               	btfsc	status,2,c
  2638  0013E8  EFF8  F009         	goto	u1491
  2639  0013EC  EFFA  F009         	goto	u1490
  2640  0013F0                     u1491:
  2641  0013F0  EF0A  F00A         	goto	l2029
  2642  0013F4                     u1490:
  2643  0013F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2644  0013F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2645  0013F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2646  0013FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2647  0013FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2648  0013FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2649  001400  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2650  001402  6C01               	negf	___aomod@dividend^0,c
  2651  001404  0E00               	movlw	0
  2652  001406  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2653  001408  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2654  00140A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2655  00140C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2656  00140E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2657  001410  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2658  001412  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2659  001414                     l2029:
  2660  001414  C001  F001         	movff	___aomod@dividend,?___aomod
  2661  001418  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2662  00141C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2663  001420  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2664  001424  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2665  001428  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2666  00142C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2667  001430  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2668  001434  0012               	return		;funcret
  2669  001436                     __end_of___aomod:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function ___aodiv *****************
  2673 ;; Defined at:
  2674 ;;		line 9 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  dividend        8    0[COMRAM] long long 
  2677 ;;  divisor         8    8[COMRAM] long long 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        8   18[COMRAM] long long 
  2680 ;;  sign            1   17[COMRAM] unsigned char 
  2681 ;;  counter         1   16[COMRAM] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  8    0[COMRAM] long long 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2691 ;;      Params:        16       0       0       0       0       0       0       0       0
  2692 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2694 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:       26 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_dtoa
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text12
  2705  00114A                     __ptext12:
  2706                           	callstack 0
  2707  00114A                     ___aodiv:
  2708                           	callstack 26
  2709  00114A  0E00               	movlw	0
  2710  00114C  6E12               	movwf	___aodiv@sign^0,c
  2711  00114E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2712  001150  EFAE  F008         	goto	u1370
  2713  001154  EFAC  F008         	goto	u1371
  2714  001158                     u1371:
  2715  001158  EFC0  F008         	goto	l1961
  2716  00115C                     u1370:
  2717  00115C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2718  00115E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2719  001160  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2720  001162  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2721  001164  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2722  001166  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2723  001168  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2724  00116A  6C09               	negf	___aodiv@divisor^0,c
  2725  00116C  0E00               	movlw	0
  2726  00116E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2727  001170  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2728  001172  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2729  001174  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2730  001176  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2731  001178  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2732  00117A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2733  00117C  0E01               	movlw	1
  2734  00117E  6E12               	movwf	___aodiv@sign^0,c
  2735  001180                     l1961:
  2736  001180  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2737  001182  EFC7  F008         	goto	u1380
  2738  001186  EFC5  F008         	goto	u1381
  2739  00118A                     u1381:
  2740  00118A  EFD9  F008         	goto	l1967
  2741  00118E                     u1380:
  2742  00118E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2743  001190  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2744  001192  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2745  001194  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2746  001196  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2747  001198  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2748  00119A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2749  00119C  6C01               	negf	___aodiv@dividend^0,c
  2750  00119E  0E00               	movlw	0
  2751  0011A0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2752  0011A2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2753  0011A4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2754  0011A6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2755  0011A8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2756  0011AA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2757  0011AC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2758  0011AE  0E01               	movlw	1
  2759  0011B0  1A12               	xorwf	___aodiv@sign^0,f,c
  2760  0011B2                     l1967:
  2761  0011B2  EE20  F013         	lfsr	2,___aodiv@quotient
  2762  0011B6  0E07               	movlw	7
  2763  0011B8                     u1391:
  2764  0011B8  6ADE               	clrf	postinc2,c
  2765  0011BA  06E8               	decf	wreg,f,c
  2766  0011BC  E2FD               	bc	u1391
  2767  0011BE  5009               	movf	___aodiv@divisor^0,w,c
  2768  0011C0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2769  0011C2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2770  0011C4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2771  0011C6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2772  0011C8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2773  0011CA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2774  0011CC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2775  0011CE  B4D8               	btfsc	status,2,c
  2776  0011D0  EFEC  F008         	goto	u1401
  2777  0011D4  EFEE  F008         	goto	u1400
  2778  0011D8                     u1401:
  2779  0011D8  EF40  F009         	goto	l1989
  2780  0011DC                     u1400:
  2781  0011DC  0E01               	movlw	1
  2782  0011DE  6E11               	movwf	___aodiv@counter^0,c
  2783  0011E0  EFFC  F008         	goto	l1975
  2784  0011E4                     l1973:
  2785  0011E4  90D8               	bcf	status,0,c
  2786  0011E6  3609               	rlcf	___aodiv@divisor^0,f,c
  2787  0011E8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2788  0011EA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2789  0011EC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2790  0011EE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2791  0011F0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2792  0011F2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2793  0011F4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2794  0011F6  2A11               	incf	___aodiv@counter^0,f,c
  2795  0011F8                     l1975:
  2796  0011F8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2797  0011FA  EF01  F009         	goto	u1411
  2798  0011FE  EF03  F009         	goto	u1410
  2799  001202                     u1411:
  2800  001202  EFF2  F008         	goto	l1973
  2801  001206                     u1410:
  2802  001206                     l1977:
  2803  001206  90D8               	bcf	status,0,c
  2804  001208  3613               	rlcf	___aodiv@quotient^0,f,c
  2805  00120A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2806  00120C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2807  00120E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2808  001210  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2809  001212  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2810  001214  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2811  001216  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2812  001218  5009               	movf	___aodiv@divisor^0,w,c
  2813  00121A  5C01               	subwf	___aodiv@dividend^0,w,c
  2814  00121C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2815  00121E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2816  001220  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2817  001222  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2818  001224  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2819  001226  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2820  001228  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2821  00122A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2822  00122C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2823  00122E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2824  001230  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2825  001232  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2826  001234  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2827  001236  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2828  001238  A0D8               	btfss	status,0,c
  2829  00123A  EF21  F009         	goto	u1421
  2830  00123E  EF23  F009         	goto	u1420
  2831  001242                     u1421:
  2832  001242  EF34  F009         	goto	l1985
  2833  001246                     u1420:
  2834  001246  5009               	movf	___aodiv@divisor^0,w,c
  2835  001248  5E01               	subwf	___aodiv@dividend^0,f,c
  2836  00124A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2837  00124C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2838  00124E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2839  001250  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2840  001252  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2841  001254  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2842  001256  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2843  001258  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2844  00125A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2845  00125C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2846  00125E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2847  001260  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2848  001262  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2849  001264  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2850  001266  8013               	bsf	___aodiv@quotient^0,0,c
  2851  001268                     l1985:
  2852  001268  90D8               	bcf	status,0,c
  2853  00126A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2854  00126C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2855  00126E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2856  001270  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2857  001272  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2858  001274  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2859  001276  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2860  001278  3209               	rrcf	___aodiv@divisor^0,f,c
  2861  00127A  2E11               	decfsz	___aodiv@counter^0,f,c
  2862  00127C  EF03  F009         	goto	l1977
  2863  001280                     l1989:
  2864  001280  5012               	movf	___aodiv@sign^0,w,c
  2865  001282  B4D8               	btfsc	status,2,c
  2866  001284  EF46  F009         	goto	u1431
  2867  001288  EF48  F009         	goto	u1430
  2868  00128C                     u1431:
  2869  00128C  EF58  F009         	goto	l1993
  2870  001290                     u1430:
  2871  001290  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2872  001292  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2873  001294  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2874  001296  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2875  001298  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2876  00129A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2877  00129C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2878  00129E  6C13               	negf	___aodiv@quotient^0,c
  2879  0012A0  0E00               	movlw	0
  2880  0012A2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2881  0012A4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2882  0012A6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2883  0012A8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2884  0012AA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2885  0012AC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2886  0012AE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2887  0012B0                     l1993:
  2888  0012B0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2889  0012B4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2890  0012B8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2891  0012BC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2892  0012C0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2893  0012C4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2894  0012C8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2895  0012CC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2896  0012D0  0012               	return		;funcret
  2897  0012D2                     __end_of___aodiv:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _TemperaturaDigitada *****************
  2901 ;; Defined at:
  2902 ;;		line 118 in file "Main_Invernadero.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  2905 ;;		 -> main@Hume(2), main@Tempe(2), 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  Decena          2   13[COMRAM] int 
  2908 ;;  Resultado       2   11[COMRAM] int 
  2909 ;;  Unidad          2    9[COMRAM] int 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2    6[COMRAM] int 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2919 ;;      Params:         2       0       0       0       0       0       0       0       0
  2920 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2921 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2922 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2923 ;;Total ram usage:        9 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 1
  2926 ;; This function calls:
  2927 ;;		___wmul
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text13
  2934  001758                     __ptext13:
  2935                           	callstack 0
  2936  001758                     _TemperaturaDigitada:
  2937                           	callstack 29
  2938  001758                     
  2939                           ;Main_Invernadero.c: 120:     int Unidad = 0;
  2940  001758  0E00               	movlw	0
  2941  00175A  6E0B               	movwf	(TemperaturaDigitada@Unidad+1)^0,c
  2942  00175C  0E00               	movlw	0
  2943  00175E  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2944                           
  2945                           ;Main_Invernadero.c: 121:     int Resultado=0;
  2946  001760  0E00               	movlw	0
  2947  001762  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2948  001764  0E00               	movlw	0
  2949  001766  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2950  001768                     
  2951                           ;Main_Invernadero.c: 122:     Decena = prmTemperatura[0]-'0';
  2952  001768  C007  FFD9         	movff	TemperaturaDigitada@prmTemperatura,fsr2l
  2953  00176C  C008  FFDA         	movff	TemperaturaDigitada@prmTemperatura+1,fsr2h
  2954  001770  50DF               	movf	indf2,w,c
  2955  001772  6E09               	movwf	??_TemperaturaDigitada^0,c
  2956  001774  0ED0               	movlw	208
  2957  001776  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2958  001778  6E0E               	movwf	TemperaturaDigitada@Decena^0,c
  2959  00177A  6A0F               	clrf	(TemperaturaDigitada@Decena+1)^0,c
  2960  00177C  0EFF               	movlw	255
  2961  00177E  220F               	addwfc	(TemperaturaDigitada@Decena+1)^0,f,c
  2962  001780                     
  2963                           ;Main_Invernadero.c: 123:     Unidad = prmTemperatura[1]-'0';
  2964  001780  EE20 F001          	lfsr	2,1
  2965  001784  5007               	movf	TemperaturaDigitada@prmTemperatura^0,w,c
  2966  001786  26D9               	addwf	fsr2l,f,c
  2967  001788  5008               	movf	(TemperaturaDigitada@prmTemperatura+1)^0,w,c
  2968  00178A  22DA               	addwfc	fsr2h,f,c
  2969  00178C  50DF               	movf	indf2,w,c
  2970  00178E  6E09               	movwf	??_TemperaturaDigitada^0,c
  2971  001790  0ED0               	movlw	208
  2972  001792  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2973  001794  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2974  001796  6A0B               	clrf	(TemperaturaDigitada@Unidad+1)^0,c
  2975  001798  0EFF               	movlw	255
  2976  00179A  220B               	addwfc	(TemperaturaDigitada@Unidad+1)^0,f,c
  2977  00179C                     
  2978                           ;Main_Invernadero.c: 125:     Decena = Decena * 10;
  2979  00179C  C00E  F001         	movff	TemperaturaDigitada@Decena,___wmul@multiplier
  2980  0017A0  C00F  F002         	movff	TemperaturaDigitada@Decena+1,___wmul@multiplier+1
  2981  0017A4  0E00               	movlw	0
  2982  0017A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2983  0017A8  0E0A               	movlw	10
  2984  0017AA  6E03               	movwf	___wmul@multiplicand^0,c
  2985  0017AC  EC63  F00E         	call	___wmul	;wreg free
  2986  0017B0  C001  F00E         	movff	?___wmul,TemperaturaDigitada@Decena
  2987  0017B4  C002  F00F         	movff	?___wmul+1,TemperaturaDigitada@Decena+1
  2988  0017B8                     
  2989                           ;Main_Invernadero.c: 126:     Resultado = Decena + Unidad;
  2990  0017B8  500A               	movf	TemperaturaDigitada@Unidad^0,w,c
  2991  0017BA  240E               	addwf	TemperaturaDigitada@Decena^0,w,c
  2992  0017BC  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2993  0017BE  500B               	movf	(TemperaturaDigitada@Unidad+1)^0,w,c
  2994  0017C0  200F               	addwfc	(TemperaturaDigitada@Decena+1)^0,w,c
  2995  0017C2  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2996  0017C4                     
  2997                           ;Main_Invernadero.c: 128:     return Resultado;
  2998  0017C4  C00C  F007         	movff	TemperaturaDigitada@Resultado,?_TemperaturaDigitada
  2999  0017C8  C00D  F008         	movff	TemperaturaDigitada@Resultado+1,?_TemperaturaDigitada+1
  3000  0017CC  0012               	return		;funcret
  3001  0017CE                     __end_of_TemperaturaDigitada:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function ___wmul *****************
  3005 ;; Defined at:
  3006 ;;		line 15 in file "G:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  multiplier      2    0[COMRAM] unsigned int 
  3009 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  product         2    4[COMRAM] unsigned int 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  2    0[COMRAM] unsigned int 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, prodl, prodh
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3021 ;;      Params:         4       0       0       0       0       0       0       0       0
  3022 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3024 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3025 ;;Total ram usage:        6 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_TemperaturaDigitada
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text14
  3035  001CC6                     __ptext14:
  3036                           	callstack 0
  3037  001CC6                     ___wmul:
  3038                           	callstack 29
  3039  001CC6  5001               	movf	___wmul@multiplier^0,w,c
  3040  001CC8  0203               	mulwf	___wmul@multiplicand^0,c
  3041  001CCA  CFF3 F005          	movff	prodl,___wmul@product
  3042  001CCE  CFF4 F006          	movff	prodh,___wmul@product+1
  3043  001CD2  5001               	movf	___wmul@multiplier^0,w,c
  3044  001CD4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3045  001CD6  50F3               	movf	243,w,c
  3046  001CD8  2606               	addwf	(___wmul@product+1)^0,f,c
  3047  001CDA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3048  001CDC  0203               	mulwf	___wmul@multiplicand^0,c
  3049  001CDE  50F3               	movf	243,w,c
  3050  001CE0  2606               	addwf	(___wmul@product+1)^0,f,c
  3051  001CE2  C005  F001         	movff	___wmul@product,?___wmul
  3052  001CE6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3053  001CEA  0012               	return		;funcret
  3054  001CEC                     __end_of___wmul:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _PedirDato *****************
  3058 ;; Defined at:
  3059 ;;		line 145 in file "Main_Invernadero.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3062 ;;		 -> STR_2(13), STR_1(14), 
  3063 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3064 ;;		 -> main@Hume(2), main@Tempe(2), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  i               2   16[COMRAM] int 
  3067 ;;  tecla           1   15[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         4       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        9 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 3
  3084 ;; This function calls:
  3085 ;;		_LCD_Char
  3086 ;;		_LCD_Clear
  3087 ;;		_LCD_Command
  3088 ;;		_LCD_String_xy
  3089 ;;		_keyfind
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text15
  3096  0016DA                     __ptext15:
  3097                           	callstack 0
  3098  0016DA                     _PedirDato:
  3099                           	callstack 27
  3100  0016DA                     
  3101                           ;Main_Invernadero.c: 146:      LCD_Clear();
  3102  0016DA  EC4E  F00E         	call	_LCD_Clear	;wreg free
  3103  0016DE                     
  3104                           ;Main_Invernadero.c: 148:      unsigned char tecla;;Main_Invernadero.c: 149:      LCD_St
      +                          ring_xy(0,0,Etiqueta);
  3105  0016DE  0E00               	movlw	0
  3106  0016E0  6E05               	movwf	LCD_String_xy@pos^0,c
  3107  0016E2  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3108  0016E6  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3109  0016EA  0E00               	movlw	0
  3110  0016EC  ECA9  F00D         	call	_LCD_String_xy
  3111  0016F0                     
  3112                           ;Main_Invernadero.c: 150:      LCD_Command(0xC0);
  3113  0016F0  0EC0               	movlw	192
  3114  0016F2  ECF1  F00C         	call	_LCD_Command
  3115  0016F6                     
  3116                           ;Main_Invernadero.c: 151:      for(int i=0 ; i < 2 ; i++){
  3117  0016F6  0E00               	movlw	0
  3118  0016F8  6E12               	movwf	(PedirDato@i+1)^0,c
  3119  0016FA  0E00               	movlw	0
  3120  0016FC  6E11               	movwf	PedirDato@i^0,c
  3121  0016FE                     l2417:
  3122                           
  3123                           ;Main_Invernadero.c: 152:      tecla=keyfind();
  3124  0016FE  ECB3  F006         	call	_keyfind	;wreg free
  3125  001702  6E10               	movwf	PedirDato@tecla^0,c
  3126  001704                     
  3127                           ;Main_Invernadero.c: 153:      LCD_Char(tecla);
  3128  001704  5010               	movf	PedirDato@tecla^0,w,c
  3129  001706  ECC9  F00C         	call	_LCD_Char
  3130  00170A                     
  3131                           ;Main_Invernadero.c: 154:      vecLlenar[i] = tecla;
  3132  00170A  5011               	movf	PedirDato@i^0,w,c
  3133  00170C  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3134  00170E  6ED9               	movwf	fsr2l,c
  3135  001710  5012               	movf	(PedirDato@i+1)^0,w,c
  3136  001712  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3137  001714  6EDA               	movwf	fsr2h,c
  3138  001716  C010  FFDF         	movff	PedirDato@tecla,indf2
  3139  00171A                     
  3140                           ;Main_Invernadero.c: 155:      }
  3141  00171A  4A11               	infsnz	PedirDato@i^0,f,c
  3142  00171C  2A12               	incf	(PedirDato@i+1)^0,f,c
  3143  00171E  BE12               	btfsc	(PedirDato@i+1)^0,7,c
  3144  001720  EF9B  F00B         	goto	u2051
  3145  001724  5012               	movf	(PedirDato@i+1)^0,w,c
  3146  001726  E109               	bnz	u2050
  3147  001728  0E02               	movlw	2
  3148  00172A  5C11               	subwf	PedirDato@i^0,w,c
  3149  00172C  A0D8               	btfss	status,0,c
  3150  00172E  EF9B  F00B         	goto	u2051
  3151  001732  EF9D  F00B         	goto	u2050
  3152  001736                     u2051:
  3153  001736  EF7F  F00B         	goto	l2417
  3154  00173A                     u2050:
  3155  00173A                     
  3156                           ;Main_Invernadero.c: 156:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3157  00173A  0E02               	movlw	2
  3158  00173C  6E0F               	movwf	(??_PedirDato+1)^0,c
  3159  00173E  0E04               	movlw	4
  3160  001740  6E0E               	movwf	??_PedirDato^0,c
  3161  001742  0EBA               	movlw	186
  3162  001744                     u2397:
  3163  001744  2EE8               	decfsz	wreg,f,c
  3164  001746  D7FE               	bra	u2397
  3165  001748  2E0E               	decfsz	??_PedirDato^0,f,c
  3166  00174A  D7FC               	bra	u2397
  3167  00174C  2E0F               	decfsz	(??_PedirDato+1)^0,f,c
  3168  00174E  D7FA               	bra	u2397
  3169  001750  D000               	nop2	
  3170  001752                     
  3171                           ;Main_Invernadero.c: 157:      LCD_Clear();
  3172  001752  EC4E  F00E         	call	_LCD_Clear	;wreg free
  3173  001756  0012               	return		;funcret
  3174  001758                     __end_of_PedirDato:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _keyfind *****************
  3178 ;; Defined at:
  3179 ;;		line 174 in file "keypad.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  temp1           1    0        unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_PedirDato
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text16
  3207  000D66                     __ptext16:
  3208                           	callstack 0
  3209  000D66                     _keyfind:
  3210                           	callstack 29
  3211  000D66                     
  3212                           ;keypad.c: 177:     TRISB = 0xf0;
  3213  000D66  0EF0               	movlw	240
  3214  000D68  6E93               	movwf	147,c	;volatile
  3215                           
  3216                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
  3217  000D6A  0EF0               	movlw	240
  3218  000D6C  6E8A               	movwf	138,c	;volatile
  3219  000D6E                     l2235:
  3220                           
  3221                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
  3222  000D6E  5081               	movf	129,w,c	;volatile
  3223  000D70  0BF0               	andlw	240
  3224  000D72  0100               	movlb	0	; () banked
  3225  000D74  6F6A               	movwf	_col_loc& (0+255),b
  3226  000D76                     
  3227                           ; BSR set to: 0
  3228                           ;keypad.c: 188:         }while(col_loc!=0xf0);
  3229  000D76  0EF0               	movlw	240
  3230  000D78  196A               	xorwf	_col_loc& (0+255),w,b
  3231  000D7A  A4D8               	btfss	status,2,c
  3232  000D7C  EFC2  F006         	goto	u1781
  3233  000D80  EFC4  F006         	goto	u1780
  3234  000D84                     u1781:
  3235  000D84  EFB7  F006         	goto	l2235
  3236  000D88                     u1780:
  3237  000D88                     
  3238                           ; BSR set to: 0
  3239                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
  3240  000D88  5081               	movf	129,w,c	;volatile
  3241  000D8A  0BF0               	andlw	240
  3242  000D8C  6F6A               	movwf	_col_loc& (0+255),b
  3243                           
  3244                           ;keypad.c: 190:       }while(col_loc!=0xf0);
  3245  000D8E  0EF0               	movlw	240
  3246  000D90  196A               	xorwf	_col_loc& (0+255),w,b
  3247  000D92  A4D8               	btfss	status,2,c
  3248  000D94  EFCE  F006         	goto	u1791
  3249  000D98  EFD0  F006         	goto	u1790
  3250  000D9C                     u1791:
  3251  000D9C  EFB7  F006         	goto	l2235
  3252  000DA0                     u1790:
  3253  000DA0                     
  3254                           ; BSR set to: 0
  3255                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000/4000.0)));
  3256  000DA0  0E4E               	movlw	78
  3257  000DA2  6E01               	movwf	??_keyfind^0,c
  3258  000DA4  0EEB               	movlw	235
  3259  000DA6                     u2407:
  3260  000DA6  2EE8               	decfsz	wreg,f,c
  3261  000DA8  D7FE               	bra	u2407
  3262  000DAA  2E01               	decfsz	??_keyfind^0,f,c
  3263  000DAC  D7FC               	bra	u2407
  3264  000DAE  F000               	nop	
  3265  000DB0                     
  3266                           ;keypad.c: 193:         LATB = 0xf0;
  3267  000DB0  0EF0               	movlw	240
  3268  000DB2  6E8A               	movwf	138,c	;volatile
  3269  000DB4                     l2245:
  3270                           
  3271                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
  3272  000DB4  5081               	movf	129,w,c	;volatile
  3273  000DB6  0BF0               	andlw	240
  3274  000DB8  0100               	movlb	0	; () banked
  3275  000DBA  6F6A               	movwf	_col_loc& (0+255),b
  3276  000DBC                     
  3277                           ; BSR set to: 0
  3278                           ;keypad.c: 200:             }while(col_loc==0xf0);
  3279  000DBC  0EF0               	movlw	240
  3280  000DBE  196A               	xorwf	_col_loc& (0+255),w,b
  3281  000DC0  B4D8               	btfsc	status,2,c
  3282  000DC2  EFE5  F006         	goto	u1801
  3283  000DC6  EFE7  F006         	goto	u1800
  3284  000DCA                     u1801:
  3285  000DCA  EFDA  F006         	goto	l2245
  3286  000DCE                     u1800:
  3287  000DCE                     
  3288                           ; BSR set to: 0
  3289                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
  3290  000DCE  5081               	movf	129,w,c	;volatile
  3291  000DD0  0BF0               	andlw	240
  3292  000DD2  6F6A               	movwf	_col_loc& (0+255),b
  3293                           
  3294                           ;keypad.c: 202:         }while(col_loc==0xf0);
  3295  000DD4  0EF0               	movlw	240
  3296  000DD6  196A               	xorwf	_col_loc& (0+255),w,b
  3297  000DD8  B4D8               	btfsc	status,2,c
  3298  000DDA  EFF1  F006         	goto	u1811
  3299  000DDE  EFF3  F006         	goto	u1810
  3300  000DE2                     u1811:
  3301  000DE2  EFDA  F006         	goto	l2245
  3302  000DE6                     u1810:
  3303  000DE6                     
  3304                           ; BSR set to: 0
  3305                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000/4000.0)));
  3306  000DE6  0E4E               	movlw	78
  3307  000DE8  6E01               	movwf	??_keyfind^0,c
  3308  000DEA  0EEB               	movlw	235
  3309  000DEC                     u2417:
  3310  000DEC  2EE8               	decfsz	wreg,f,c
  3311  000DEE  D7FE               	bra	u2417
  3312  000DF0  2E01               	decfsz	??_keyfind^0,f,c
  3313  000DF2  D7FC               	bra	u2417
  3314  000DF4  F000               	nop	
  3315  000DF6                     
  3316                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
  3317  000DF6  5081               	movf	129,w,c	;volatile
  3318  000DF8  0BF0               	andlw	240
  3319  000DFA  0100               	movlb	0	; () banked
  3320  000DFC  6F6A               	movwf	_col_loc& (0+255),b
  3321  000DFE                     l2255:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
  3325  000DFE  0EFE               	movlw	254
  3326  000E00  6E8A               	movwf	138,c	;volatile
  3327  000E02                     
  3328                           ; BSR set to: 0
  3329                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
  3330  000E02  5081               	movf	129,w,c	;volatile
  3331  000E04  0BF0               	andlw	240
  3332  000E06  6F6A               	movwf	_col_loc& (0+255),b
  3333  000E08                     
  3334                           ; BSR set to: 0
  3335                           ;keypad.c: 214:         temp_col=col_loc;
  3336  000E08  C06A  F068         	movff	_col_loc,_temp_col
  3337  000E0C                     
  3338                           ; BSR set to: 0
  3339                           ;keypad.c: 215:         if(col_loc!=0xf0)
  3340  000E0C  0EF0               	movlw	240
  3341  000E0E  196A               	xorwf	_col_loc& (0+255),w,b
  3342  000E10  B4D8               	btfsc	status,2,c
  3343  000E12  EF0D  F007         	goto	u1821
  3344  000E16  EF0F  F007         	goto	u1820
  3345  000E1A                     u1821:
  3346  000E1A  EF21  F007         	goto	l2267
  3347  000E1E                     u1820:
  3348  000E1E                     
  3349                           ; BSR set to: 0
  3350                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
  3351  000E1E  0E00               	movlw	0
  3352  000E20  6F69               	movwf	_rowloc& (0+255),b
  3353                           
  3354                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3355  000E22  EF16  F007         	goto	l214
  3356  000E26                     l2265:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
  3360  000E26  5081               	movf	129,w,c	;volatile
  3361  000E28  0BF0               	andlw	240
  3362  000E2A  6F68               	movwf	_temp_col& (0+255),b
  3363  000E2C                     l214:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3367  000E2C  0EF0               	movlw	240
  3368  000E2E  1968               	xorwf	_temp_col& (0+255),w,b
  3369  000E30  A4D8               	btfss	status,2,c
  3370  000E32  EF1D  F007         	goto	u1831
  3371  000E36  EF1F  F007         	goto	u1830
  3372  000E3A                     u1831:
  3373  000E3A  EF13  F007         	goto	l2265
  3374  000E3E                     u1830:
  3375  000E3E  EF85  F007         	goto	l2303
  3376  000E42                     l2267:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;keypad.c: 225:         LATB = 0xfd;
  3380  000E42  0EFD               	movlw	253
  3381  000E44  6E8A               	movwf	138,c	;volatile
  3382  000E46                     
  3383                           ; BSR set to: 0
  3384                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
  3385  000E46  5081               	movf	129,w,c	;volatile
  3386  000E48  0BF0               	andlw	240
  3387  000E4A  6F6A               	movwf	_col_loc& (0+255),b
  3388  000E4C                     
  3389                           ; BSR set to: 0
  3390                           ;keypad.c: 227:         temp_col=col_loc;
  3391  000E4C  C06A  F068         	movff	_col_loc,_temp_col
  3392  000E50                     
  3393                           ; BSR set to: 0
  3394                           ;keypad.c: 228:         if(col_loc!=0xf0)
  3395  000E50  0EF0               	movlw	240
  3396  000E52  196A               	xorwf	_col_loc& (0+255),w,b
  3397  000E54  B4D8               	btfsc	status,2,c
  3398  000E56  EF2F  F007         	goto	u1841
  3399  000E5A  EF31  F007         	goto	u1840
  3400  000E5E                     u1841:
  3401  000E5E  EF43  F007         	goto	l2279
  3402  000E62                     u1840:
  3403  000E62                     
  3404                           ; BSR set to: 0
  3405                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
  3406  000E62  0E01               	movlw	1
  3407  000E64  6F69               	movwf	_rowloc& (0+255),b
  3408                           
  3409                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3410  000E66  EF38  F007         	goto	l219
  3411  000E6A                     l2277:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
  3415  000E6A  5081               	movf	129,w,c	;volatile
  3416  000E6C  0BF0               	andlw	240
  3417  000E6E  6F68               	movwf	_temp_col& (0+255),b
  3418  000E70                     l219:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3422  000E70  0EF0               	movlw	240
  3423  000E72  1968               	xorwf	_temp_col& (0+255),w,b
  3424  000E74  A4D8               	btfss	status,2,c
  3425  000E76  EF3F  F007         	goto	u1851
  3426  000E7A  EF41  F007         	goto	u1850
  3427  000E7E                     u1851:
  3428  000E7E  EF35  F007         	goto	l2277
  3429  000E82                     u1850:
  3430  000E82  EF85  F007         	goto	l2303
  3431  000E86                     l2279:
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;keypad.c: 238:         LATB = 0xfb;
  3435  000E86  0EFB               	movlw	251
  3436  000E88  6E8A               	movwf	138,c	;volatile
  3437  000E8A                     
  3438                           ; BSR set to: 0
  3439                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
  3440  000E8A  5081               	movf	129,w,c	;volatile
  3441  000E8C  0BF0               	andlw	240
  3442  000E8E  6F6A               	movwf	_col_loc& (0+255),b
  3443  000E90                     
  3444                           ; BSR set to: 0
  3445                           ;keypad.c: 240:         temp_col=col_loc;
  3446  000E90  C06A  F068         	movff	_col_loc,_temp_col
  3447  000E94                     
  3448                           ; BSR set to: 0
  3449                           ;keypad.c: 241:         if(col_loc!=0xf0)
  3450  000E94  0EF0               	movlw	240
  3451  000E96  196A               	xorwf	_col_loc& (0+255),w,b
  3452  000E98  B4D8               	btfsc	status,2,c
  3453  000E9A  EF51  F007         	goto	u1861
  3454  000E9E  EF53  F007         	goto	u1860
  3455  000EA2                     u1861:
  3456  000EA2  EF65  F007         	goto	l2291
  3457  000EA6                     u1860:
  3458  000EA6                     
  3459                           ; BSR set to: 0
  3460                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
  3461  000EA6  0E02               	movlw	2
  3462  000EA8  6F69               	movwf	_rowloc& (0+255),b
  3463                           
  3464                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3465  000EAA  EF5A  F007         	goto	l223
  3466  000EAE                     l2289:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
  3470  000EAE  5081               	movf	129,w,c	;volatile
  3471  000EB0  0BF0               	andlw	240
  3472  000EB2  6F68               	movwf	_temp_col& (0+255),b
  3473  000EB4                     l223:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3477  000EB4  0EF0               	movlw	240
  3478  000EB6  1968               	xorwf	_temp_col& (0+255),w,b
  3479  000EB8  A4D8               	btfss	status,2,c
  3480  000EBA  EF61  F007         	goto	u1871
  3481  000EBE  EF63  F007         	goto	u1870
  3482  000EC2                     u1871:
  3483  000EC2  EF57  F007         	goto	l2289
  3484  000EC6                     u1870:
  3485  000EC6  EF85  F007         	goto	l2303
  3486  000ECA                     l2291:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;keypad.c: 251:         LATB = 0xf7;
  3490  000ECA  0EF7               	movlw	247
  3491  000ECC  6E8A               	movwf	138,c	;volatile
  3492  000ECE                     
  3493                           ; BSR set to: 0
  3494                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
  3495  000ECE  5081               	movf	129,w,c	;volatile
  3496  000ED0  0BF0               	andlw	240
  3497  000ED2  6F6A               	movwf	_col_loc& (0+255),b
  3498  000ED4                     
  3499                           ; BSR set to: 0
  3500                           ;keypad.c: 253:         temp_col=col_loc;
  3501  000ED4  C06A  F068         	movff	_col_loc,_temp_col
  3502  000ED8                     
  3503                           ; BSR set to: 0
  3504                           ;keypad.c: 254:         if(col_loc!=0xf0)
  3505  000ED8  0EF0               	movlw	240
  3506  000EDA  196A               	xorwf	_col_loc& (0+255),w,b
  3507  000EDC  B4D8               	btfsc	status,2,c
  3508  000EDE  EF73  F007         	goto	u1881
  3509  000EE2  EF75  F007         	goto	u1880
  3510  000EE6                     u1881:
  3511  000EE6  EFFF  F006         	goto	l2255
  3512  000EEA                     u1880:
  3513  000EEA                     
  3514                           ; BSR set to: 0
  3515                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
  3516  000EEA  0E03               	movlw	3
  3517  000EEC  6F69               	movwf	_rowloc& (0+255),b
  3518                           
  3519                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3520  000EEE  EF7C  F007         	goto	l227
  3521  000EF2                     l2301:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
  3525  000EF2  5081               	movf	129,w,c	;volatile
  3526  000EF4  0BF0               	andlw	240
  3527  000EF6  6F68               	movwf	_temp_col& (0+255),b
  3528  000EF8                     l227:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3532  000EF8  0EF0               	movlw	240
  3533  000EFA  1968               	xorwf	_temp_col& (0+255),w,b
  3534  000EFC  A4D8               	btfss	status,2,c
  3535  000EFE  EF83  F007         	goto	u1891
  3536  000F02  EF85  F007         	goto	u1890
  3537  000F06                     u1891:
  3538  000F06  EF79  F007         	goto	l2301
  3539  000F0A                     u1890:
  3540  000F0A                     l2303:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
  3544  000F0A  0EE0               	movlw	224
  3545  000F0C  196A               	xorwf	_col_loc& (0+255),w,b
  3546  000F0E  A4D8               	btfss	status,2,c
  3547  000F10  EF8C  F007         	goto	u1901
  3548  000F14  EF8E  F007         	goto	u1900
  3549  000F18                     u1901:
  3550  000F18  EF99  F007         	goto	l2311
  3551  000F1C                     u1900:
  3552  000F1C                     
  3553                           ; BSR set to: 0
  3554                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
  3555  000F1C  5169               	movf	_rowloc& (0+255),w,b
  3556  000F1E  0D04               	mullw	4
  3557  000F20  0EAF               	movlw	low _keypad
  3558  000F22  24F3               	addwf	243,w,c
  3559  000F24  6ED9               	movwf	fsr2l,c
  3560  000F26  0E00               	movlw	high _keypad
  3561  000F28  20F4               	addwfc	prodh,w,c
  3562  000F2A  6EDA               	movwf	fsr2h,c
  3563  000F2C  50DF               	movf	indf2,w,c
  3564  000F2E  EFCA  F007         	goto	l233
  3565  000F32                     l2311:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;keypad.c: 275:             if(col_loc==0xd0)
  3569  000F32  0ED0               	movlw	208
  3570  000F34  196A               	xorwf	_col_loc& (0+255),w,b
  3571  000F36  A4D8               	btfss	status,2,c
  3572  000F38  EFA0  F007         	goto	u1911
  3573  000F3C  EFA2  F007         	goto	u1910
  3574  000F40                     u1911:
  3575  000F40  EFAD  F007         	goto	l2319
  3576  000F44                     u1910:
  3577  000F44                     
  3578                           ; BSR set to: 0
  3579                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
  3580  000F44  5169               	movf	_rowloc& (0+255),w,b
  3581  000F46  0D04               	mullw	4
  3582  000F48  0EB0               	movlw	low (_keypad+1)
  3583  000F4A  24F3               	addwf	243,w,c
  3584  000F4C  6ED9               	movwf	fsr2l,c
  3585  000F4E  0E00               	movlw	high (_keypad+1)
  3586  000F50  20F4               	addwfc	prodh,w,c
  3587  000F52  6EDA               	movwf	fsr2h,c
  3588  000F54  50DF               	movf	indf2,w,c
  3589  000F56  EFCA  F007         	goto	l233
  3590  000F5A                     l2319:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;keypad.c: 280:             if(col_loc==0xb0)
  3594  000F5A  0EB0               	movlw	176
  3595  000F5C  196A               	xorwf	_col_loc& (0+255),w,b
  3596  000F5E  A4D8               	btfss	status,2,c
  3597  000F60  EFB4  F007         	goto	u1921
  3598  000F64  EFB6  F007         	goto	u1920
  3599  000F68                     u1921:
  3600  000F68  EFC1  F007         	goto	l2327
  3601  000F6C                     u1920:
  3602  000F6C                     
  3603                           ; BSR set to: 0
  3604                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
  3605  000F6C  5169               	movf	_rowloc& (0+255),w,b
  3606  000F6E  0D04               	mullw	4
  3607  000F70  0EB1               	movlw	low (_keypad+2)
  3608  000F72  24F3               	addwf	243,w,c
  3609  000F74  6ED9               	movwf	fsr2l,c
  3610  000F76  0E00               	movlw	high (_keypad+2)
  3611  000F78  20F4               	addwfc	prodh,w,c
  3612  000F7A  6EDA               	movwf	fsr2h,c
  3613  000F7C  50DF               	movf	indf2,w,c
  3614  000F7E  EFCA  F007         	goto	l233
  3615  000F82                     l2327:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
  3619  000F82  5169               	movf	_rowloc& (0+255),w,b
  3620  000F84  0D04               	mullw	4
  3621  000F86  0EB2               	movlw	low (_keypad+3)
  3622  000F88  24F3               	addwf	243,w,c
  3623  000F8A  6ED9               	movwf	fsr2l,c
  3624  000F8C  0E00               	movlw	high (_keypad+3)
  3625  000F8E  20F4               	addwfc	prodh,w,c
  3626  000F90  6EDA               	movwf	fsr2h,c
  3627  000F92  50DF               	movf	indf2,w,c
  3628  000F94                     l233:
  3629                           
  3630                           ; BSR set to: 0
  3631  000F94  0012               	return		;funcret
  3632  000F96                     __end_of_keyfind:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _LCD_String_xy *****************
  3636 ;; Defined at:
  3637 ;;		line 80 in file "LCD.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  row             1    wreg     unsigned char 
  3640 ;;  pos             1    4[COMRAM] unsigned char 
  3641 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3642 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  row             1    7[COMRAM] unsigned char 
  3645 ;;  location        1    8[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3655 ;;      Params:         3       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        5 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 2
  3662 ;; This function calls:
  3663 ;;		_LCD_Command
  3664 ;;		_LCD_String
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;;		_PedirDato
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text17
  3672  001B52                     __ptext17:
  3673                           	callstack 0
  3674  001B52                     _LCD_String_xy:
  3675                           	callstack 27
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;incstack = 0
  3679                           ;LCD_String_xy@row stored from wreg
  3680  001B52  6E08               	movwf	LCD_String_xy@row^0,c
  3681  001B54                     
  3682                           ;LCD.c: 83:     if(row<=1)
  3683  001B54  0E02               	movlw	2
  3684  001B56  6008               	cpfslt	LCD_String_xy@row^0,c
  3685  001B58  EFB0  F00D         	goto	u1771
  3686  001B5C  EFB2  F00D         	goto	u1770
  3687  001B60                     u1771:
  3688  001B60  EFBB  F00D         	goto	l2221
  3689  001B64                     u1770:
  3690  001B64                     
  3691                           ;LCD.c: 84:     {;LCD.c: 85:         location = (0x80) | ((pos) & 0x0f);
  3692  001B64  5005               	movf	LCD_String_xy@pos^0,w,c
  3693  001B66  0B0F               	andlw	15
  3694  001B68  0980               	iorlw	128
  3695  001B6A  6E09               	movwf	LCD_String_xy@location^0,c
  3696  001B6C                     
  3697                           ;LCD.c: 86:         LCD_Command(location);
  3698  001B6C  5009               	movf	LCD_String_xy@location^0,w,c
  3699  001B6E  ECF1  F00C         	call	_LCD_Command
  3700                           
  3701                           ;LCD.c: 87:     }
  3702  001B72  EFC2  F00D         	goto	l2225
  3703  001B76                     l2221:
  3704                           
  3705                           ;LCD.c: 89:     {;LCD.c: 90:         location = (0xC0) | ((pos) & 0x0f);
  3706  001B76  5005               	movf	LCD_String_xy@pos^0,w,c
  3707  001B78  0B0F               	andlw	15
  3708  001B7A  09C0               	iorlw	192
  3709  001B7C  6E09               	movwf	LCD_String_xy@location^0,c
  3710  001B7E                     
  3711                           ;LCD.c: 91:         LCD_Command(location);
  3712  001B7E  5009               	movf	LCD_String_xy@location^0,w,c
  3713  001B80  ECF1  F00C         	call	_LCD_Command
  3714  001B84                     l2225:
  3715                           
  3716                           ;LCD.c: 95:     LCD_String(msg);
  3717  001B84  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3718  001B88  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3719  001B8C  EC18  F00C         	call	_LCD_String	;wreg free
  3720  001B90  0012               	return		;funcret
  3721  001B92                     __end_of_LCD_String_xy:
  3722                           	callstack 0
  3723                           
  3724 ;; *************** function _LCD_String *****************
  3725 ;; Defined at:
  3726 ;;		line 70 in file "LCD.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3729 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3741 ;;      Params:         2       0       0       0       0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3744 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3745 ;;Total ram usage:        2 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 1
  3748 ;; This function calls:
  3749 ;;		_LCD_Char
  3750 ;; This function is called by:
  3751 ;;		_LCD_String_xy
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text18
  3757  001830                     __ptext18:
  3758                           	callstack 0
  3759  001830                     _LCD_String:
  3760                           	callstack 27
  3761  001830                     
  3762                           ;LCD.c: 70: void LCD_String(const char *msg);LCD.c: 71: {;LCD.c: 72:  while((*msg)!=0)
  3763  001830  EF2E  F00C         	goto	l2167
  3764  001834                     l2163:
  3765                           
  3766                           ;LCD.c: 73:  {;LCD.c: 74:    LCD_Char(*msg);
  3767  001834  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3768  001838  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3769  00183C  6AF8               	clrf	tblptru,c
  3770  00183E  0E07               	movlw	(high __ramtop+-1)
  3771  001840  64F7               	cpfsgt	tblptrh,c
  3772  001842  D003               	bra	u1707
  3773  001844  0008               	tblrd		*
  3774  001846  50F5               	movf	tablat,w,c
  3775  001848  D005               	bra	u1700
  3776  00184A                     u1707:
  3777  00184A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3778  00184E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3779  001852  50E7               	movf	indf1,w,c
  3780  001854                     u1700:
  3781  001854  ECC9  F00C         	call	_LCD_Char
  3782  001858                     
  3783                           ;LCD.c: 75:    msg++;
  3784  001858  4A03               	infsnz	LCD_String@msg^0,f,c
  3785  00185A  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3786  00185C                     l2167:
  3787                           
  3788                           ;LCD.c: 72:  while((*msg)!=0)
  3789  00185C  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3790  001860  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3791  001864  6AF8               	clrf	tblptru,c
  3792  001866  0E07               	movlw	(high __ramtop+-1)
  3793  001868  64F7               	cpfsgt	tblptrh,c
  3794  00186A  D003               	bra	u1717
  3795  00186C  0008               	tblrd		*
  3796  00186E  50F5               	movf	tablat,w,c
  3797  001870  D005               	bra	u1710
  3798  001872                     u1717:
  3799  001872  CFF6 FFE1          	movff	tblptrl,fsr1l
  3800  001876  CFF7 FFE2          	movff	tblptrh,fsr1h
  3801  00187A  50E7               	movf	indf1,w,c
  3802  00187C                     u1710:
  3803  00187C  0900               	iorlw	0
  3804  00187E  A4D8               	btfss	status,2,c
  3805  001880  EF44  F00C         	goto	u1721
  3806  001884  EF46  F00C         	goto	u1720
  3807  001888                     u1721:
  3808  001888  EF1A  F00C         	goto	l2163
  3809  00188C                     u1720:
  3810  00188C  0012               	return		;funcret
  3811  00188E                     __end_of_LCD_String:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _LCD_Char *****************
  3815 ;; Defined at:
  3816 ;;		line 56 in file "LCD.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  dat             1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  dat             1    1[COMRAM] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        2 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_LCD_String
  3840 ;;		_main
  3841 ;;		_PedirDato
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text19
  3846  001992                     __ptext19:
  3847                           	callstack 0
  3848  001992                     _LCD_Char:
  3849                           	callstack 27
  3850                           
  3851                           ;incstack = 0
  3852                           ;LCD_Char@dat stored from wreg
  3853  001992  6E02               	movwf	LCD_Char@dat^0,c
  3854  001994                     
  3855                           ;LCD.c: 56: void LCD_Char(unsigned char dat);LCD.c: 57: {;LCD.c: 58:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3856  001994  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3857  001998  0EF0               	movlw	240
  3858  00199A  1601               	andwf	??_LCD_Char^0,f,c
  3859  00199C  508C               	movf	140,w,c	;volatile
  3860  00199E  0B0F               	andlw	15
  3861  0019A0  1001               	iorwf	??_LCD_Char^0,w,c
  3862  0019A2  6E8C               	movwf	140,c	;volatile
  3863  0019A4                     
  3864                           ;LCD.c: 59:  LATD0 = 1;
  3865  0019A4  808C               	bsf	3980,0,c	;volatile
  3866  0019A6                     
  3867                           ;LCD.c: 60:  LATD1 = 1;
  3868  0019A6  828C               	bsf	3980,1,c	;volatile
  3869  0019A8                     
  3870                           ;LCD.c: 61:  __nop();
  3871  0019A8  F000               	nop	
  3872  0019AA                     
  3873                           ;LCD.c: 62:  LATD1 = 0;
  3874  0019AA  928C               	bcf	3980,1,c	;volatile
  3875  0019AC                     
  3876                           ;LCD.c: 63:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3877  0019AC  0E03               	movlw	3
  3878  0019AE  6E01               	movwf	??_LCD_Char^0,c
  3879  0019B0  0E98               	movlw	152
  3880  0019B2                     u2427:
  3881  0019B2  2EE8               	decfsz	wreg,f,c
  3882  0019B4  D7FE               	bra	u2427
  3883  0019B6  2E01               	decfsz	??_LCD_Char^0,f,c
  3884  0019B8  D7FC               	bra	u2427
  3885  0019BA                     
  3886                           ;LCD.c: 64:     LATD = (LATD & 0x0f) | (dat<<4);
  3887  0019BA  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3888  0019BE  3A01               	swapf	??_LCD_Char^0,f,c
  3889  0019C0  0EF0               	movlw	240
  3890  0019C2  1601               	andwf	??_LCD_Char^0,f,c
  3891  0019C4  508C               	movf	140,w,c	;volatile
  3892  0019C6  0B0F               	andlw	15
  3893  0019C8  1001               	iorwf	??_LCD_Char^0,w,c
  3894  0019CA  6E8C               	movwf	140,c	;volatile
  3895  0019CC                     
  3896                           ;LCD.c: 65:  LATD1 = 1;
  3897  0019CC  828C               	bsf	3980,1,c	;volatile
  3898  0019CE                     
  3899                           ;LCD.c: 66:  __nop();
  3900  0019CE  F000               	nop	
  3901  0019D0                     
  3902                           ;LCD.c: 67:  LATD1 = 0;
  3903  0019D0  928C               	bcf	3980,1,c	;volatile
  3904                           
  3905                           ;LCD.c: 68:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3906  0019D2  0E08               	movlw	8
  3907  0019D4  6E01               	movwf	??_LCD_Char^0,c
  3908  0019D6  0ECA               	movlw	202
  3909  0019D8                     u2437:
  3910  0019D8  2EE8               	decfsz	wreg,f,c
  3911  0019DA  D7FE               	bra	u2437
  3912  0019DC  2E01               	decfsz	??_LCD_Char^0,f,c
  3913  0019DE  D7FC               	bra	u2437
  3914  0019E0  0012               	return		;funcret
  3915  0019E2                     __end_of_LCD_Char:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _LCD_Clear *****************
  3919 ;; Defined at:
  3920 ;;		line 99 in file "LCD.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3937 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 1
  3941 ;; This function calls:
  3942 ;;		_LCD_Command
  3943 ;; This function is called by:
  3944 ;;		_PedirDato
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text20
  3949  001C9C                     __ptext20:
  3950                           	callstack 0
  3951  001C9C                     _LCD_Clear:
  3952                           	callstack 28
  3953  001C9C                     
  3954                           ;LCD.c: 101:     LCD_Command(0x01);
  3955  001C9C  0E01               	movlw	1
  3956  001C9E  ECF1  F00C         	call	_LCD_Command
  3957  001CA2                     
  3958                           ;LCD.c: 102:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3959  001CA2  0E08               	movlw	8
  3960  001CA4  6E03               	movwf	??_LCD_Clear^0,c
  3961  001CA6  0ECA               	movlw	202
  3962  001CA8                     u2447:
  3963  001CA8  2EE8               	decfsz	wreg,f,c
  3964  001CAA  D7FE               	bra	u2447
  3965  001CAC  2E03               	decfsz	??_LCD_Clear^0,f,c
  3966  001CAE  D7FC               	bra	u2447
  3967  001CB0                     
  3968                           ;LCD.c: 103:     LCD_Command (0x80);
  3969  001CB0  0E80               	movlw	128
  3970  001CB2  ECF1  F00C         	call	_LCD_Command
  3971                           
  3972                           ;LCD.c: 104:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3973  001CB6  0E03               	movlw	3
  3974  001CB8  6E03               	movwf	??_LCD_Clear^0,c
  3975  001CBA  0E98               	movlw	152
  3976  001CBC                     u2457:
  3977  001CBC  2EE8               	decfsz	wreg,f,c
  3978  001CBE  D7FE               	bra	u2457
  3979  001CC0  2E03               	decfsz	??_LCD_Clear^0,f,c
  3980  001CC2  D7FC               	bra	u2457
  3981  001CC4  0012               	return		;funcret
  3982  001CC6                     __end_of_LCD_Clear:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function _LCD_Init *****************
  3986 ;; Defined at:
  3987 ;;		line 25 in file "LCD.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        1 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 1
  4008 ;; This function calls:
  4009 ;;		_LCD_Command
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text21
  4016  001C3C                     __ptext21:
  4017                           	callstack 0
  4018  001C3C                     _LCD_Init:
  4019                           	callstack 29
  4020  001C3C                     
  4021                           ;LCD.c: 27:     TRISD = 0;
  4022  001C3C  0E00               	movlw	0
  4023  001C3E  6E95               	movwf	149,c	;volatile
  4024  001C40                     
  4025                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4026  001C40  0E27               	movlw	39
  4027  001C42  6E03               	movwf	??_LCD_Init^0,c
  4028  001C44  0EF5               	movlw	245
  4029  001C46                     u2467:
  4030  001C46  2EE8               	decfsz	wreg,f,c
  4031  001C48  D7FE               	bra	u2467
  4032  001C4A  2E03               	decfsz	??_LCD_Init^0,f,c
  4033  001C4C  D7FC               	bra	u2467
  4034  001C4E  F000               	nop	
  4035  001C50                     
  4036                           ;LCD.c: 29:     LCD_Command(0x02);
  4037  001C50  0E02               	movlw	2
  4038  001C52  ECF1  F00C         	call	_LCD_Command
  4039  001C56                     
  4040                           ;LCD.c: 31:     LCD_Command(0x28);
  4041  001C56  0E28               	movlw	40
  4042  001C58  ECF1  F00C         	call	_LCD_Command
  4043  001C5C                     
  4044                           ;LCD.c: 33:  LCD_Command(0x01);
  4045  001C5C  0E01               	movlw	1
  4046  001C5E  ECF1  F00C         	call	_LCD_Command
  4047  001C62                     
  4048                           ;LCD.c: 34:     LCD_Command(0x0c);
  4049  001C62  0E0C               	movlw	12
  4050  001C64  ECF1  F00C         	call	_LCD_Command
  4051  001C68                     
  4052                           ;LCD.c: 35:  LCD_Command(0x06);
  4053  001C68  0E06               	movlw	6
  4054  001C6A  ECF1  F00C         	call	_LCD_Command
  4055  001C6E  0012               	return		;funcret
  4056  001C70                     __end_of_LCD_Init:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _LCD_Command *****************
  4060 ;; Defined at:
  4061 ;;		line 38 in file "LCD.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  cmd             1    wreg     unsigned char 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  cmd             1    1[COMRAM] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0
  4076 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4078 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4079 ;;Total ram usage:        2 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_LCD_Init
  4085 ;;		_LCD_String_xy
  4086 ;;		_LCD_Clear
  4087 ;;		_PedirDato
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text22
  4092  0019E2                     __ptext22:
  4093                           	callstack 0
  4094  0019E2                     _LCD_Command:
  4095                           	callstack 28
  4096                           
  4097                           ;incstack = 0
  4098                           ;LCD_Command@cmd stored from wreg
  4099  0019E2  6E02               	movwf	LCD_Command@cmd^0,c
  4100  0019E4                     
  4101                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4102  0019E4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4103  0019E8  0EF0               	movlw	240
  4104  0019EA  1601               	andwf	??_LCD_Command^0,f,c
  4105  0019EC  508C               	movf	140,w,c	;volatile
  4106  0019EE  0B0F               	andlw	15
  4107  0019F0  1001               	iorwf	??_LCD_Command^0,w,c
  4108  0019F2  6E8C               	movwf	140,c	;volatile
  4109  0019F4                     
  4110                           ;LCD.c: 41:  LATD0 = 0;
  4111  0019F4  908C               	bcf	3980,0,c	;volatile
  4112  0019F6                     
  4113                           ;LCD.c: 42:  LATD1 = 1;
  4114  0019F6  828C               	bsf	3980,1,c	;volatile
  4115  0019F8                     
  4116                           ;LCD.c: 43:  __nop();
  4117  0019F8  F000               	nop	
  4118  0019FA                     
  4119                           ;LCD.c: 44:  LATD1 = 0;
  4120  0019FA  928C               	bcf	3980,1,c	;volatile
  4121  0019FC                     
  4122                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4123  0019FC  0E03               	movlw	3
  4124  0019FE  6E01               	movwf	??_LCD_Command^0,c
  4125  001A00  0E98               	movlw	152
  4126  001A02                     u2477:
  4127  001A02  2EE8               	decfsz	wreg,f,c
  4128  001A04  D7FE               	bra	u2477
  4129  001A06  2E01               	decfsz	??_LCD_Command^0,f,c
  4130  001A08  D7FC               	bra	u2477
  4131  001A0A                     
  4132                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4133  001A0A  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4134  001A0E  3A01               	swapf	??_LCD_Command^0,f,c
  4135  001A10  0EF0               	movlw	240
  4136  001A12  1601               	andwf	??_LCD_Command^0,f,c
  4137  001A14  508C               	movf	140,w,c	;volatile
  4138  001A16  0B0F               	andlw	15
  4139  001A18  1001               	iorwf	??_LCD_Command^0,w,c
  4140  001A1A  6E8C               	movwf	140,c	;volatile
  4141  001A1C                     
  4142                           ;LCD.c: 47:  LATD1 = 1;
  4143  001A1C  828C               	bsf	3980,1,c	;volatile
  4144  001A1E                     
  4145                           ;LCD.c: 48:  __nop();
  4146  001A1E  F000               	nop	
  4147  001A20                     
  4148                           ;LCD.c: 49:  LATD1 = 0;
  4149  001A20  928C               	bcf	3980,1,c	;volatile
  4150                           
  4151                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4152  001A22  0E08               	movlw	8
  4153  001A24  6E01               	movwf	??_LCD_Command^0,c
  4154  001A26  0ECA               	movlw	202
  4155  001A28                     u2487:
  4156  001A28  2EE8               	decfsz	wreg,f,c
  4157  001A2A  D7FE               	bra	u2487
  4158  001A2C  2E01               	decfsz	??_LCD_Command^0,f,c
  4159  001A2E  D7FC               	bra	u2487
  4160  001A30  0012               	return		;funcret
  4161  001A32                     __end_of_LCD_Command:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _DatoSensorTH *****************
  4165 ;; Defined at:
  4166 ;;		line 160 in file "Main_Invernadero.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4169 ;;		 -> main@Datos(2), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4172 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4173 ;;  Checksum        1    0        unsigned char 
  4174 ;;  T_Decimal       1    0        unsigned char 
  4175 ;;  RH_Decimal      1    0        unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4185 ;;      Params:         2       0       0       0       0       0       0       0       0
  4186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4188 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4189 ;;Total ram usage:        4 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 1
  4192 ;; This function calls:
  4193 ;;		_DHT11_CheckResponse
  4194 ;;		_DHT11_ReadData
  4195 ;;		_DHT11_Start
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text23
  4202  001B92                     __ptext23:
  4203                           	callstack 0
  4204  001B92                     _DatoSensorTH:
  4205                           	callstack 29
  4206  001B92                     
  4207                           ;Main_Invernadero.c: 161:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Mai
      +                          n_Invernadero.c: 162:          char Checksum;;Main_Invernadero.c: 163:          DHT11_St
      +                          art();
  4208  001B92  EC86  F00E         	call	_DHT11_Start	;wreg free
  4209  001B96                     
  4210                           ;Main_Invernadero.c: 164:          DHT11_CheckResponse();
  4211  001B96  EC38  F00E         	call	_DHT11_CheckResponse	;wreg free
  4212  001B9A                     
  4213                           ;Main_Invernadero.c: 167:          RH_Integral = DHT11_ReadData();
  4214  001B9A  EC47  F00C         	call	_DHT11_ReadData	;wreg free
  4215  001B9E  6E05               	movwf	DatoSensorTH@RH_Integral^0,c
  4216  001BA0  EC47  F00C         	call	_DHT11_ReadData	;wreg free
  4217  001BA4                     
  4218                           ;Main_Invernadero.c: 169:          T_Integral = DHT11_ReadData();
  4219  001BA4  EC47  F00C         	call	_DHT11_ReadData	;wreg free
  4220  001BA8  6E06               	movwf	DatoSensorTH@T_Integral^0,c
  4221  001BAA  EC47  F00C         	call	_DHT11_ReadData	;wreg free
  4222  001BAE  EC47  F00C         	call	_DHT11_ReadData	;wreg free
  4223  001BB2                     
  4224                           ;Main_Invernadero.c: 173:          Datos[0]=T_Integral;
  4225  001BB2  C003  FFD9         	movff	DatoSensorTH@Datos,fsr2l
  4226  001BB6  C004  FFDA         	movff	DatoSensorTH@Datos+1,fsr2h
  4227  001BBA  C006  FFDF         	movff	DatoSensorTH@T_Integral,indf2
  4228  001BBE                     
  4229                           ;Main_Invernadero.c: 174:          Datos[1]=RH_Integral;
  4230  001BBE  EE20 F001          	lfsr	2,1
  4231  001BC2  5003               	movf	DatoSensorTH@Datos^0,w,c
  4232  001BC4  26D9               	addwf	fsr2l,f,c
  4233  001BC6  5004               	movf	(DatoSensorTH@Datos+1)^0,w,c
  4234  001BC8  22DA               	addwfc	fsr2h,f,c
  4235  001BCA  C005  FFDF         	movff	DatoSensorTH@RH_Integral,indf2
  4236  001BCE  0012               	return		;funcret
  4237  001BD0                     __end_of_DatoSensorTH:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _DHT11_Start *****************
  4241 ;; Defined at:
  4242 ;;		line 22 in file "DHT11.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4258 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4260 ;;Total ram usage:        1 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_DatoSensorTH
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text24
  4270  001D0C                     __ptext24:
  4271                           	callstack 0
  4272  001D0C                     _DHT11_Start:
  4273                           	callstack 29
  4274  001D0C                     
  4275                           ;DHT11.c: 24:     TRISAbits.RA0 = 0;
  4276  001D0C  9092               	bcf	146,0,c	;volatile
  4277                           
  4278                           ;DHT11.c: 25:     LATA0 = 0;
  4279  001D0E  9089               	bcf	3977,0,c	;volatile
  4280  001D10                     
  4281                           ;DHT11.c: 26:     _delay((unsigned long)((18)*(8000000/4000.0)));
  4282  001D10  0E2F               	movlw	47
  4283  001D12  6E01               	movwf	??_DHT11_Start^0,c
  4284  001D14  0EC0               	movlw	192
  4285  001D16                     u2497:
  4286  001D16  2EE8               	decfsz	wreg,f,c
  4287  001D18  D7FE               	bra	u2497
  4288  001D1A  2E01               	decfsz	??_DHT11_Start^0,f,c
  4289  001D1C  D7FC               	bra	u2497
  4290  001D1E                     
  4291                           ;DHT11.c: 27:     LATA0 = 1;
  4292  001D1E  8089               	bsf	3977,0,c	;volatile
  4293                           
  4294                           ;DHT11.c: 28:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  4295  001D20  0E0D               	movlw	13
  4296  001D22                     u2507:
  4297  001D22  2EE8               	decfsz	wreg,f,c
  4298  001D24  D7FE               	bra	u2507
  4299  001D26  F000               	nop	
  4300  001D28                     
  4301                           ;DHT11.c: 29:     TRISAbits.RA0 = 1;
  4302  001D28  8092               	bsf	146,0,c	;volatile
  4303  001D2A  0012               	return		;funcret
  4304  001D2C                     __end_of_DHT11_Start:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _DHT11_ReadData *****************
  4308 ;; Defined at:
  4309 ;;		line 6 in file "DHT11.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  data            1    1[COMRAM] unsigned char 
  4314 ;;  i               1    0[COMRAM] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      unsigned char 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0
  4325 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4327 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_DatoSensorTH
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text25
  4338  00188E                     __ptext25:
  4339                           	callstack 0
  4340  00188E                     _DHT11_ReadData:
  4341                           	callstack 29
  4342  00188E                     
  4343                           ;DHT11.c: 8:   char i,data = 0;
  4344  00188E  0E00               	movlw	0
  4345  001890  6E02               	movwf	DHT11_ReadData@data^0,c
  4346                           
  4347                           ;DHT11.c: 9:     for(i=0;i<8;i++)
  4348  001892  0E00               	movlw	0
  4349  001894  6E01               	movwf	DHT11_ReadData@i^0,c
  4350  001896                     l253:
  4351  001896  A080               	btfss	128,0,c	;volatile
  4352  001898  EF50  F00C         	goto	u1931
  4353  00189C  EF52  F00C         	goto	u1930
  4354  0018A0                     u1931:
  4355  0018A0  EF4B  F00C         	goto	l253
  4356  0018A4                     u1930:
  4357  0018A4                     
  4358                           ;DHT11.c: 12:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  4359  0018A4  0E14               	movlw	20
  4360  0018A6                     u2517:
  4361  0018A6  2EE8               	decfsz	wreg,f,c
  4362  0018A8  D7FE               	bra	u2517
  4363  0018AA                     
  4364                           ;DHT11.c: 13:         if(PORTAbits.RA0 & 1)
  4365  0018AA  A080               	btfss	128,0,c	;volatile
  4366  0018AC  EF5A  F00C         	goto	u1941
  4367  0018B0  EF5C  F00C         	goto	u1940
  4368  0018B4                     u1941:
  4369  0018B4  EF60  F00C         	goto	l2345
  4370  0018B8                     u1940:
  4371  0018B8                     
  4372                           ;DHT11.c: 14:           data = ((data<<1) | 1);
  4373  0018B8  80D8               	bsf	status,0,c
  4374  0018BA  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4375  0018BC  EF63  F00C         	goto	l258
  4376  0018C0                     l2345:
  4377                           
  4378                           ;DHT11.c: 16:           data = (data<<1);
  4379  0018C0  5002               	movf	DHT11_ReadData@data^0,w,c
  4380  0018C2  2402               	addwf	DHT11_ReadData@data^0,w,c
  4381  0018C4  6E02               	movwf	DHT11_ReadData@data^0,c
  4382  0018C6                     l258:
  4383  0018C6  B080               	btfsc	128,0,c	;volatile
  4384  0018C8  EF68  F00C         	goto	u1951
  4385  0018CC  EF6A  F00C         	goto	u1950
  4386  0018D0                     u1951:
  4387  0018D0  EF63  F00C         	goto	l258
  4388  0018D4                     u1950:
  4389  0018D4                     
  4390                           ;DHT11.c: 18:     }
  4391  0018D4  2A01               	incf	DHT11_ReadData@i^0,f,c
  4392  0018D6  0E07               	movlw	7
  4393  0018D8  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4394  0018DA  EF71  F00C         	goto	u1961
  4395  0018DE  EF73  F00C         	goto	u1960
  4396  0018E2                     u1961:
  4397  0018E2  EF4B  F00C         	goto	l253
  4398  0018E6                     u1960:
  4399  0018E6                     
  4400                           ;DHT11.c: 19:   return data;
  4401  0018E6  5002               	movf	DHT11_ReadData@data^0,w,c
  4402  0018E8  0012               	return		;funcret
  4403  0018EA                     __end_of_DHT11_ReadData:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _DHT11_CheckResponse *****************
  4407 ;; Defined at:
  4408 ;;		line 35 in file "DHT11.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		None
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_DatoSensorTH
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text26
  4436  001C70                     __ptext26:
  4437                           	callstack 0
  4438  001C70                     _DHT11_CheckResponse:
  4439                           	callstack 29
  4440  001C70                     l267:
  4441  001C70  B080               	btfsc	128,0,c	;volatile
  4442  001C72  EF3D  F00E         	goto	u1971
  4443  001C76  EF3F  F00E         	goto	u1970
  4444  001C7A                     u1971:
  4445  001C7A  EF38  F00E         	goto	l267
  4446  001C7E                     u1970:
  4447  001C7E                     l270:
  4448  001C7E  A080               	btfss	128,0,c	;volatile
  4449  001C80  EF44  F00E         	goto	u1981
  4450  001C84  EF46  F00E         	goto	u1980
  4451  001C88                     u1981:
  4452  001C88  EF3F  F00E         	goto	l270
  4453  001C8C                     u1980:
  4454  001C8C                     l273:
  4455  001C8C  B080               	btfsc	128,0,c	;volatile
  4456  001C8E  EF4B  F00E         	goto	u1991
  4457  001C92  EF4D  F00E         	goto	u1990
  4458  001C96                     u1991:
  4459  001C96  EF46  F00E         	goto	l273
  4460  001C9A                     u1990:
  4461  001C9A  0012               	return		;funcret
  4462  001C9C                     __end_of_DHT11_CheckResponse:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _ControlCalefactor *****************
  4466 ;; Defined at:
  4467 ;;		line 191 in file "Main_Invernadero.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  TempActual      2    0[COMRAM] PTR unsigned char 
  4470 ;;		 -> main@Datos(2), 
  4471 ;;  TempDigitada    2    2[COMRAM] int 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         4       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4486 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:       11 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_main
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text27
  4497  001A32                     __ptext27:
  4498                           	callstack 0
  4499  001A32                     _ControlCalefactor:
  4500                           	callstack 30
  4501  001A32                     
  4502                           ;Main_Invernadero.c: 192:     if(*TempActual<TempDigitada-2){
  4503  001A32  0EFE               	movlw	254
  4504  001A34  6E05               	movwf	??_ControlCalefactor^0,c
  4505  001A36  0EFF               	movlw	255
  4506  001A38  6E06               	movwf	(??_ControlCalefactor+1)^0,c
  4507  001A3A  C003  F007         	movff	ControlCalefactor@TempDigitada,??_ControlCalefactor+2
  4508  001A3E  C004  F008         	movff	ControlCalefactor@TempDigitada+1,??_ControlCalefactor+3
  4509  001A42  5005               	movf	??_ControlCalefactor^0,w,c
  4510  001A44  2607               	addwf	(??_ControlCalefactor+2)^0,f,c
  4511  001A46  5006               	movf	(??_ControlCalefactor+1)^0,w,c
  4512  001A48  2208               	addwfc	(??_ControlCalefactor+3)^0,f,c
  4513  001A4A  C001  FFD9         	movff	ControlCalefactor@TempActual,fsr2l
  4514  001A4E  C002  FFDA         	movff	ControlCalefactor@TempActual+1,fsr2h
  4515  001A52  50DF               	movf	indf2,w,c
  4516  001A54  6E09               	movwf	(??_ControlCalefactor+4)^0,c
  4517  001A56  6A0A               	clrf	(??_ControlCalefactor+5)^0,c
  4518  001A58  5007               	movf	(??_ControlCalefactor+2)^0,w,c
  4519  001A5A  5C09               	subwf	(??_ControlCalefactor+4)^0,w,c
  4520  001A5C  500A               	movf	(??_ControlCalefactor+5)^0,w,c
  4521  001A5E  0A80               	xorlw	128
  4522  001A60  6E0B               	movwf	(??_ControlCalefactor+6)^0,c
  4523  001A62  5008               	movf	(??_ControlCalefactor+3)^0,w,c
  4524  001A64  0A80               	xorlw	128
  4525  001A66  580B               	subwfb	(??_ControlCalefactor+6)^0,w,c
  4526  001A68  B0D8               	btfsc	status,0,c
  4527  001A6A  EF39  F00D         	goto	u2111
  4528  001A6E  EF3B  F00D         	goto	u2110
  4529  001A72                     u2111:
  4530  001A72  EF3E  F00D         	goto	l388
  4531  001A76                     u2110:
  4532  001A76                     
  4533                           ;Main_Invernadero.c: 193:         LATC7=1;
  4534  001A76  8E8B               	bsf	3979,7,c	;volatile
  4535                           
  4536                           ;Main_Invernadero.c: 195:     }else{
  4537  001A78  EF3F  F00D         	goto	l390
  4538  001A7C                     l388:
  4539                           
  4540                           ;Main_Invernadero.c: 196:         LATC7=0;
  4541  001A7C  9E8B               	bcf	3979,7,c	;volatile
  4542  001A7E                     l390:
  4543  001A7E  0012               	return		;funcret
  4544  001A80                     __end_of_ControlCalefactor:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _ControlAspersor *****************
  4548 ;; Defined at:
  4549 ;;		line 181 in file "Main_Invernadero.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4552 ;;		 -> main@Datos(2), 
  4553 ;;  HumedadDigit    2    2[COMRAM] int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:         4       0       0       0       0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4568 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:       11 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text28
  4579  001A80                     __ptext28:
  4580                           	callstack 0
  4581  001A80                     _ControlAspersor:
  4582                           	callstack 30
  4583  001A80                     
  4584                           ;Main_Invernadero.c: 182:     if(*HumedadActual<HumedadDigitada-2){
  4585  001A80  0EFE               	movlw	254
  4586  001A82  6E05               	movwf	??_ControlAspersor^0,c
  4587  001A84  0EFF               	movlw	255
  4588  001A86  6E06               	movwf	(??_ControlAspersor+1)^0,c
  4589  001A88  C003  F007         	movff	ControlAspersor@HumedadDigitada,??_ControlAspersor+2
  4590  001A8C  C004  F008         	movff	ControlAspersor@HumedadDigitada+1,??_ControlAspersor+3
  4591  001A90  5005               	movf	??_ControlAspersor^0,w,c
  4592  001A92  2607               	addwf	(??_ControlAspersor+2)^0,f,c
  4593  001A94  5006               	movf	(??_ControlAspersor+1)^0,w,c
  4594  001A96  2208               	addwfc	(??_ControlAspersor+3)^0,f,c
  4595  001A98  C001  FFD9         	movff	ControlAspersor@HumedadActual,fsr2l
  4596  001A9C  C002  FFDA         	movff	ControlAspersor@HumedadActual+1,fsr2h
  4597  001AA0  50DF               	movf	indf2,w,c
  4598  001AA2  6E09               	movwf	(??_ControlAspersor+4)^0,c
  4599  001AA4  6A0A               	clrf	(??_ControlAspersor+5)^0,c
  4600  001AA6  5007               	movf	(??_ControlAspersor+2)^0,w,c
  4601  001AA8  5C09               	subwf	(??_ControlAspersor+4)^0,w,c
  4602  001AAA  500A               	movf	(??_ControlAspersor+5)^0,w,c
  4603  001AAC  0A80               	xorlw	128
  4604  001AAE  6E0B               	movwf	(??_ControlAspersor+6)^0,c
  4605  001AB0  5008               	movf	(??_ControlAspersor+3)^0,w,c
  4606  001AB2  0A80               	xorlw	128
  4607  001AB4  580B               	subwfb	(??_ControlAspersor+6)^0,w,c
  4608  001AB6  B0D8               	btfsc	status,0,c
  4609  001AB8  EF60  F00D         	goto	u2101
  4610  001ABC  EF62  F00D         	goto	u2100
  4611  001AC0                     u2101:
  4612  001AC0  EF65  F00D         	goto	l383
  4613  001AC4                     u2100:
  4614  001AC4                     
  4615                           ;Main_Invernadero.c: 183:         LATC0=1;
  4616  001AC4  808B               	bsf	3979,0,c	;volatile
  4617                           
  4618                           ;Main_Invernadero.c: 185:     }else{
  4619  001AC6  EF66  F00D         	goto	l385
  4620  001ACA                     l383:
  4621                           
  4622                           ;Main_Invernadero.c: 186:         LATC0=0;
  4623  001ACA  908B               	bcf	3979,0,c	;volatile
  4624  001ACC                     l385:
  4625  001ACC  0012               	return		;funcret
  4626  001ACE                     __end_of_ControlAspersor:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _CompararTempe *****************
  4630 ;; Defined at:
  4631 ;;		line 132 in file "Main_Invernadero.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  4634 ;;		 -> main@Datos(2), 
  4635 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  4636 ;;		 -> main@Datos(2), 
  4637 ;;  TempDigitada    2    6[COMRAM] int 
  4638 ;;  HumDigitada     2    8[COMRAM] int 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  HumedadAdecu    1   18[COMRAM] _Bool 
  4641 ;;  TemperaturaA    1   17[COMRAM] _Bool 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4651 ;;      Params:         8       0       0       0       0       0       0       0       0
  4652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4653 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4654 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4655 ;;Total ram usage:       17 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 2
  4658 ;; This function calls:
  4659 ;;		_IniciarLed
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text29
  4666  001436                     __ptext29:
  4667                           	callstack 0
  4668  001436                     _CompararTempe:
  4669                           	callstack 28
  4670  001436                     
  4671                           ;Main_Invernadero.c: 133:     _Bool TemperaturaAdecuada= 1;
  4672  001436  0E01               	movlw	1
  4673  001438  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4674                           
  4675                           ;Main_Invernadero.c: 134:     _Bool HumedadAdecuada =1;
  4676  00143A  0E01               	movlw	1
  4677  00143C  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4678  00143E                     
  4679                           ;Main_Invernadero.c: 135:     if(*TempActual<TempDigitada-2 || *TempActual >TempDigitada
      +                          +2){
  4680  00143E  0EFE               	movlw	254
  4681  001440  6E0B               	movwf	??_CompararTempe^0,c
  4682  001442  0EFF               	movlw	255
  4683  001444  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4684  001446  C007  F00D         	movff	CompararTempe@TempDigitada,??_CompararTempe+2
  4685  00144A  C008  F00E         	movff	CompararTempe@TempDigitada+1,??_CompararTempe+3
  4686  00144E  500B               	movf	??_CompararTempe^0,w,c
  4687  001450  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4688  001452  500C               	movf	(??_CompararTempe+1)^0,w,c
  4689  001454  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4690  001456  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4691  00145A  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4692  00145E  50DF               	movf	indf2,w,c
  4693  001460  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4694  001462  6A10               	clrf	(??_CompararTempe+5)^0,c
  4695  001464  500D               	movf	(??_CompararTempe+2)^0,w,c
  4696  001466  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4697  001468  5010               	movf	(??_CompararTempe+5)^0,w,c
  4698  00146A  0A80               	xorlw	128
  4699  00146C  6E11               	movwf	(??_CompararTempe+6)^0,c
  4700  00146E  500E               	movf	(??_CompararTempe+3)^0,w,c
  4701  001470  0A80               	xorlw	128
  4702  001472  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4703  001474  A0D8               	btfss	status,0,c
  4704  001476  EF3F  F00A         	goto	u2061
  4705  00147A  EF41  F00A         	goto	u2060
  4706  00147E                     u2061:
  4707  00147E  EF5D  F00A         	goto	l2469
  4708  001482                     u2060:
  4709  001482  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4710  001486  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4711  00148A  50DF               	movf	indf2,w,c
  4712  00148C  6E0B               	movwf	??_CompararTempe^0,c
  4713  00148E  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4714  001490  0E02               	movlw	2
  4715  001492  2407               	addwf	CompararTempe@TempDigitada^0,w,c
  4716  001494  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4717  001496  0E00               	movlw	0
  4718  001498  2008               	addwfc	(CompararTempe@TempDigitada+1)^0,w,c
  4719  00149A  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4720  00149C  500B               	movf	??_CompararTempe^0,w,c
  4721  00149E  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4722  0014A0  500E               	movf	(??_CompararTempe+3)^0,w,c
  4723  0014A2  0A80               	xorlw	128
  4724  0014A4  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4725  0014A6  500C               	movf	(??_CompararTempe+1)^0,w,c
  4726  0014A8  0A80               	xorlw	128
  4727  0014AA  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4728  0014AC  B0D8               	btfsc	status,0,c
  4729  0014AE  EF5B  F00A         	goto	u2071
  4730  0014B2  EF5D  F00A         	goto	u2070
  4731  0014B6                     u2071:
  4732  0014B6  EF5F  F00A         	goto	l2471
  4733  0014BA                     u2070:
  4734  0014BA                     l2469:
  4735                           
  4736                           ;Main_Invernadero.c: 136:            TemperaturaAdecuada=0;
  4737  0014BA  0E00               	movlw	0
  4738  0014BC  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4739  0014BE                     l2471:
  4740                           
  4741                           ;Main_Invernadero.c: 138:     if(*HumActual<HumDigitada-2 || *HumActual>HumDigitada+2){
  4742  0014BE  0EFE               	movlw	254
  4743  0014C0  6E0B               	movwf	??_CompararTempe^0,c
  4744  0014C2  0EFF               	movlw	255
  4745  0014C4  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4746  0014C6  C009  F00D         	movff	CompararTempe@HumDigitada,??_CompararTempe+2
  4747  0014CA  C00A  F00E         	movff	CompararTempe@HumDigitada+1,??_CompararTempe+3
  4748  0014CE  500B               	movf	??_CompararTempe^0,w,c
  4749  0014D0  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4750  0014D2  500C               	movf	(??_CompararTempe+1)^0,w,c
  4751  0014D4  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4752  0014D6  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4753  0014DA  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4754  0014DE  50DF               	movf	indf2,w,c
  4755  0014E0  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4756  0014E2  6A10               	clrf	(??_CompararTempe+5)^0,c
  4757  0014E4  500D               	movf	(??_CompararTempe+2)^0,w,c
  4758  0014E6  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4759  0014E8  5010               	movf	(??_CompararTempe+5)^0,w,c
  4760  0014EA  0A80               	xorlw	128
  4761  0014EC  6E11               	movwf	(??_CompararTempe+6)^0,c
  4762  0014EE  500E               	movf	(??_CompararTempe+3)^0,w,c
  4763  0014F0  0A80               	xorlw	128
  4764  0014F2  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4765  0014F4  A0D8               	btfss	status,0,c
  4766  0014F6  EF7F  F00A         	goto	u2081
  4767  0014FA  EF81  F00A         	goto	u2080
  4768  0014FE                     u2081:
  4769  0014FE  EF9D  F00A         	goto	l2475
  4770  001502                     u2080:
  4771  001502  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4772  001506  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4773  00150A  50DF               	movf	indf2,w,c
  4774  00150C  6E0B               	movwf	??_CompararTempe^0,c
  4775  00150E  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4776  001510  0E02               	movlw	2
  4777  001512  2409               	addwf	CompararTempe@HumDigitada^0,w,c
  4778  001514  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4779  001516  0E00               	movlw	0
  4780  001518  200A               	addwfc	(CompararTempe@HumDigitada+1)^0,w,c
  4781  00151A  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4782  00151C  500B               	movf	??_CompararTempe^0,w,c
  4783  00151E  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4784  001520  500E               	movf	(??_CompararTempe+3)^0,w,c
  4785  001522  0A80               	xorlw	128
  4786  001524  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4787  001526  500C               	movf	(??_CompararTempe+1)^0,w,c
  4788  001528  0A80               	xorlw	128
  4789  00152A  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4790  00152C  B0D8               	btfsc	status,0,c
  4791  00152E  EF9B  F00A         	goto	u2091
  4792  001532  EF9D  F00A         	goto	u2090
  4793  001536                     u2091:
  4794  001536  EF9F  F00A         	goto	l2477
  4795  00153A                     u2090:
  4796  00153A                     l2475:
  4797                           
  4798                           ;Main_Invernadero.c: 139:         HumedadAdecuada=0;
  4799  00153A  0E00               	movlw	0
  4800  00153C  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4801  00153E                     l2477:
  4802                           
  4803                           ;Main_Invernadero.c: 142:    IniciarLed(TemperaturaAdecuada,HumedadAdecuada);
  4804  00153E  C013  F001         	movff	CompararTempe@HumedadAdecuada,IniciarLed@HumedadOptima
  4805  001542  5012               	movf	CompararTempe@TemperaturaAdecuada^0,w,c
  4806  001544  EC75  F00C         	call	_IniciarLed
  4807  001548  0012               	return		;funcret
  4808  00154A                     __end_of_CompararTempe:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _IniciarLed *****************
  4812 ;; Defined at:
  4813 ;;		line 106 in file "Main_Invernadero.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  TemperaturaO    1    wreg     _Bool 
  4816 ;;  HumedadOptim    1    0[COMRAM] _Bool 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  TemperaturaO    1    1[COMRAM] _Bool 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4828 ;;      Params:         1       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 1
  4835 ;; This function calls:
  4836 ;;		_LedsIniciar
  4837 ;; This function is called by:
  4838 ;;		_CompararTempe
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text30
  4843  0018EA                     __ptext30:
  4844                           	callstack 0
  4845  0018EA                     _IniciarLed:
  4846                           	callstack 28
  4847                           
  4848                           ;incstack = 0
  4849                           ;IniciarLed@TemperaturaOptima stored from wreg
  4850  0018EA  6E02               	movwf	IniciarLed@TemperaturaOptima^0,c
  4851  0018EC                     
  4852                           ;Main_Invernadero.c: 107:     LedsIniciar();
  4853  0018EC  EC96  F00E         	call	_LedsIniciar	;wreg free
  4854  0018F0                     
  4855                           ;Main_Invernadero.c: 108:     if(TemperaturaOptima==0 && HumedadOptima==0){
  4856  0018F0  5002               	movf	IniciarLed@TemperaturaOptima^0,w,c
  4857  0018F2  A4D8               	btfss	status,2,c
  4858  0018F4  EF7E  F00C         	goto	u2001
  4859  0018F8  EF80  F00C         	goto	u2000
  4860  0018FC                     u2001:
  4861  0018FC  EF8B  F00C         	goto	l2373
  4862  001900                     u2000:
  4863  001900  5001               	movf	IniciarLed@HumedadOptima^0,w,c
  4864  001902  A4D8               	btfss	status,2,c
  4865  001904  EF86  F00C         	goto	u2011
  4866  001908  EF88  F00C         	goto	u2010
  4867  00190C                     u2011:
  4868  00190C  EF8B  F00C         	goto	l2373
  4869  001910                     u2010:
  4870  001910                     
  4871                           ;Main_Invernadero.c: 109:        LATE0=1;
  4872  001910  808D               	bsf	3981,0,c	;volatile
  4873                           
  4874                           ;Main_Invernadero.c: 110:     }else if(TemperaturaOptima==0 || HumedadOptima==0){
  4875  001912  EF9F  F00C         	goto	l357
  4876  001916                     l2373:
  4877  001916  5002               	movf	IniciarLed@TemperaturaOptima^0,w,c
  4878  001918  B4D8               	btfsc	status,2,c
  4879  00191A  EF91  F00C         	goto	u2021
  4880  00191E  EF93  F00C         	goto	u2020
  4881  001922                     u2021:
  4882  001922  EF9B  F00C         	goto	l355
  4883  001926                     u2020:
  4884  001926  5001               	movf	IniciarLed@HumedadOptima^0,w,c
  4885  001928  A4D8               	btfss	status,2,c
  4886  00192A  EF99  F00C         	goto	u2031
  4887  00192E  EF9B  F00C         	goto	u2030
  4888  001932                     u2031:
  4889  001932  EF9E  F00C         	goto	l353
  4890  001936                     u2030:
  4891  001936                     l355:
  4892                           
  4893                           ;Main_Invernadero.c: 111:         LATE1=1;
  4894  001936  828D               	bsf	3981,1,c	;volatile
  4895                           
  4896                           ;Main_Invernadero.c: 112:     }else{
  4897  001938  EF9F  F00C         	goto	l357
  4898  00193C                     l353:
  4899                           
  4900                           ;Main_Invernadero.c: 113:         LATE2=1;
  4901  00193C  848D               	bsf	3981,2,c	;volatile
  4902  00193E                     l357:
  4903  00193E  0012               	return		;funcret
  4904  001940                     __end_of_IniciarLed:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _LedsIniciar *****************
  4908 ;; Defined at:
  4909 ;;		line 176 in file "Main_Invernadero.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		None
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_main
  4933 ;;		_IniciarLed
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text31
  4938  001D2C                     __ptext31:
  4939                           	callstack 0
  4940  001D2C                     _LedsIniciar:
  4941                           	callstack 30
  4942  001D2C                     
  4943                           ;Main_Invernadero.c: 177:     LATE1=0;
  4944  001D2C  928D               	bcf	3981,1,c	;volatile
  4945                           
  4946                           ;Main_Invernadero.c: 178:     LATE0=0;
  4947  001D2E  908D               	bcf	3981,0,c	;volatile
  4948                           
  4949                           ;Main_Invernadero.c: 179:     LATE2=0;
  4950  001D30  948D               	bcf	3981,2,c	;volatile
  4951  001D32  0012               	return		;funcret
  4952  001D34                     __end_of_LedsIniciar:
  4953                           	callstack 0
  4954                           
  4955                           	psect	rparam
  4956  0000                     
  4957                           	psect	idloc
  4958                           
  4959                           ;Config register IDLOC0 @ 0x200000
  4960                           ;	unspecified, using default values
  4961  200000                     	org	2097152
  4962  200000  FF                 	db	255
  4963                           
  4964                           ;Config register IDLOC1 @ 0x200001
  4965                           ;	unspecified, using default values
  4966  200001                     	org	2097153
  4967  200001  FF                 	db	255
  4968                           
  4969                           ;Config register IDLOC2 @ 0x200002
  4970                           ;	unspecified, using default values
  4971  200002                     	org	2097154
  4972  200002  FF                 	db	255
  4973                           
  4974                           ;Config register IDLOC3 @ 0x200003
  4975                           ;	unspecified, using default values
  4976  200003                     	org	2097155
  4977  200003  FF                 	db	255
  4978                           
  4979                           ;Config register IDLOC4 @ 0x200004
  4980                           ;	unspecified, using default values
  4981  200004                     	org	2097156
  4982  200004  FF                 	db	255
  4983                           
  4984                           ;Config register IDLOC5 @ 0x200005
  4985                           ;	unspecified, using default values
  4986  200005                     	org	2097157
  4987  200005  FF                 	db	255
  4988                           
  4989                           ;Config register IDLOC6 @ 0x200006
  4990                           ;	unspecified, using default values
  4991  200006                     	org	2097158
  4992  200006  FF                 	db	255
  4993                           
  4994                           ;Config register IDLOC7 @ 0x200007
  4995                           ;	unspecified, using default values
  4996  200007                     	org	2097159
  4997  200007  FF                 	db	255
  4998                           
  4999                           	psect	config
  5000                           
  5001                           ;Config register CONFIG1L @ 0x300000
  5002                           ;	PLL Prescaler Selection bits
  5003                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5004                           ;	System Clock Postscaler Selection bits
  5005                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5006                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5007                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5008  300000                     	org	3145728
  5009  300000  00                 	db	0
  5010                           
  5011                           ;Config register CONFIG1H @ 0x300001
  5012                           ;	Oscillator Selection bits
  5013                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5014                           ;	Fail-Safe Clock Monitor Enable bit
  5015                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5016                           ;	Internal/External Oscillator Switchover bit
  5017                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5018  300001                     	org	3145729
  5019  300001  09                 	db	9
  5020                           
  5021                           ;Config register CONFIG2L @ 0x300002
  5022                           ;	Power-up Timer Enable bit
  5023                           ;	PWRT = OFF, PWRT disabled
  5024                           ;	Brown-out Reset Enable bits
  5025                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5026                           ;	Brown-out Reset Voltage bits
  5027                           ;	BORV = 3, Minimum setting 2.05V
  5028                           ;	USB Voltage Regulator Enable bit
  5029                           ;	VREGEN = OFF, USB voltage regulator disabled
  5030  300002                     	org	3145730
  5031  300002  1F                 	db	31
  5032                           
  5033                           ;Config register CONFIG2H @ 0x300003
  5034                           ;	Watchdog Timer Enable bit
  5035                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5036                           ;	Watchdog Timer Postscale Select bits
  5037                           ;	WDTPS = 32768, 1:32768
  5038  300003                     	org	3145731
  5039  300003  1E                 	db	30
  5040                           
  5041                           ; Padding undefined space
  5042  300004                     	org	3145732
  5043  300004  FF                 	db	255
  5044                           
  5045                           ;Config register CONFIG3H @ 0x300005
  5046                           ;	CCP2 MUX bit
  5047                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5048                           ;	PORTB A/D Enable bit
  5049                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5050                           ;	Low-Power Timer 1 Oscillator Enable bit
  5051                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5052                           ;	MCLR Pin Enable bit
  5053                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5054  300005                     	org	3145733
  5055  300005  81                 	db	129
  5056                           
  5057                           ;Config register CONFIG4L @ 0x300006
  5058                           ;	Stack Full/Underflow Reset Enable bit
  5059                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5060                           ;	Single-Supply ICSP Enable bit
  5061                           ;	LVP = OFF, Single-Supply ICSP disabled
  5062                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5063                           ;	ICPRT = OFF, ICPORT disabled
  5064                           ;	Extended Instruction Set Enable bit
  5065                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5066                           ;	Background Debugger Enable bit
  5067                           ;	DEBUG = 0x1, unprogrammed default
  5068  300006                     	org	3145734
  5069  300006  81                 	db	129
  5070                           
  5071                           ; Padding undefined space
  5072  300007                     	org	3145735
  5073  300007  FF                 	db	255
  5074                           
  5075                           ;Config register CONFIG5L @ 0x300008
  5076                           ;	Code Protection bit
  5077                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5078                           ;	Code Protection bit
  5079                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5080                           ;	Code Protection bit
  5081                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5082                           ;	Code Protection bit
  5083                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5084  300008                     	org	3145736
  5085  300008  0F                 	db	15
  5086                           
  5087                           ;Config register CONFIG5H @ 0x300009
  5088                           ;	Boot Block Code Protection bit
  5089                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5090                           ;	Data EEPROM Code Protection bit
  5091                           ;	CPD = OFF, Data EEPROM is not code-protected
  5092  300009                     	org	3145737
  5093  300009  C0                 	db	192
  5094                           
  5095                           ;Config register CONFIG6L @ 0x30000A
  5096                           ;	Write Protection bit
  5097                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5098                           ;	Write Protection bit
  5099                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5100                           ;	Write Protection bit
  5101                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5102                           ;	Write Protection bit
  5103                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5104  30000A                     	org	3145738
  5105  30000A  0F                 	db	15
  5106                           
  5107                           ;Config register CONFIG6H @ 0x30000B
  5108                           ;	Configuration Register Write Protection bit
  5109                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5110                           ;	Boot Block Write Protection bit
  5111                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5112                           ;	Data EEPROM Write Protection bit
  5113                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5114  30000B                     	org	3145739
  5115  30000B  E0                 	db	224
  5116                           
  5117                           ;Config register CONFIG7L @ 0x30000C
  5118                           ;	Table Read Protection bit
  5119                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5120                           ;	Table Read Protection bit
  5121                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5122                           ;	Table Read Protection bit
  5123                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5124                           ;	Table Read Protection bit
  5125                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5126  30000C                     	org	3145740
  5127  30000C  0F                 	db	15
  5128                           
  5129                           ;Config register CONFIG7H @ 0x30000D
  5130                           ;	Boot Block Table Read Protection bit
  5131                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5132  30000D                     	org	3145741
  5133  30000D  40                 	db	64
  5134                           tosu	equ	0xFFF
  5135                           tosh	equ	0xFFE
  5136                           tosl	equ	0xFFD
  5137                           stkptr	equ	0xFFC
  5138                           pclatu	equ	0xFFB
  5139                           pclath	equ	0xFFA
  5140                           pcl	equ	0xFF9
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           prodh	equ	0xFF4
  5146                           prodl	equ	0xFF3
  5147                           indf0	equ	0xFEF
  5148                           postinc0	equ	0xFEE
  5149                           postdec0	equ	0xFED
  5150                           preinc0	equ	0xFEC
  5151                           plusw0	equ	0xFEB
  5152                           fsr0h	equ	0xFEA
  5153                           fsr0l	equ	0xFE9
  5154                           wreg	equ	0xFE8
  5155                           indf1	equ	0xFE7
  5156                           postinc1	equ	0xFE6
  5157                           postdec1	equ	0xFE5
  5158                           preinc1	equ	0xFE4
  5159                           plusw1	equ	0xFE3
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           bsr	equ	0xFE0
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           preinc2	equ	0xFDC
  5167                           plusw2	equ	0xFDB
  5168                           fsr2h	equ	0xFDA
  5169                           fsr2l	equ	0xFD9
  5170                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     36     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[13]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[14]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[13]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[14]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_8(CODE[13]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[14]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S918$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S918$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ControlCalefactor@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    ControlAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    DatoSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    CompararTempe@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    CompararTempe@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    TemperaturaDigitada@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TemperaturaDigitada->___wmul
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatoSensorTH->_DHT11_ReadData
    _CompararTempe->_IniciarLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   12829
                                             93 COMRAM     2     2      0
                                             13 BANK0     23    23      0
                      _CompararTempe
                    _ControlAspersor
                  _ControlCalefactor
                       _DatoSensorTH
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                        _LedsIniciar
                          _PedirDato
                _TemperaturaDigitada
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _TemperaturaDigitada                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PedirDato                                            9     5      4    1545
                                              9 COMRAM     9     5      4
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (2) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatoSensorTH                                         7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCalefactor                                   11     7      4     196
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _ControlAspersor                                     11     7      4     196
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _CompararTempe                                       17     9      8     692
                                              2 COMRAM    17     9      8
                         _IniciarLed
 ---------------------------------------------------------------------------------
 (2) _IniciarLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                        _LedsIniciar
 ---------------------------------------------------------------------------------
 (1) _LedsIniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompararTempe
     _IniciarLed
       _LedsIniciar
   _ControlAspersor
   _ControlCalefactor
   _DatoSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _LedsIniciar
   _PedirDato
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
     _keyfind
   _TemperaturaDigitada
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhlll       2A      0       0      23        0.0%
BITBIGSFRllll       20      0       0      27        0.0%
BITBIGSFRhlh        1D      0       0      21        0.0%
BITBIGSFRhllh       11      0       0      22        0.0%
BITBIGSFRhh          E      0       0      20        0.0%
BITBIGSFRllhl        5      0       0      25        0.0%
BITBIGSFRlhl         4      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      28        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 23:19:22 2022

             ?_TemperaturaDigitada 0007                    ??_CompararTempe 000B  
                     ?_LCD_Command 0001                                 l20 1A30  
                               l23 19E0                                 l17 1C6E  
                    ??_LedsIniciar 0001                                 l34 1B90  
                               l37 1CC4                                 l29 188C  
              ___wmul@multiplicand 0003                        ?_LCD_String 0003  
                              l214 0E2C                                l223 0EB4  
                              l233 0F94                                l227 0EF8  
                              l219 0E70                                l261 18E8  
                              l253 1896                                l270 1C7E  
                              l264 1D2A                                l360 17CC  
                              l520 1434                                l353 193C  
                              l273 1C8C                                l258 18C6  
                              l355 1936                                l267 1C70  
                              l507 12D0                                l380 1D32  
                              l276 1C9A                                l357 193E  
                              l390 1A7E                                l374 1756  
                              l383 1ACA                                l369 1548  
                              l385 1ACC                                l377 1BCE  
                              l393 1CEA                                l388 1A7C  
                              _abs 1B12                                _pad 1614  
                              prod 000FF3                                wreg 000FE8  
                      main@bandera 00AC                        LCD_Char@dat 0002  
                   PedirDato@tecla 0010                               l1101 169C  
                             l1103 16D8                               l1111 08E4  
                             l2001 12E4                               l2011 1354  
                             l2003 1304                               ?_abs 0013  
                             l2021 13CC                               l2013 135C  
                             l2005 1308                               l2101 091A  
                             l1109 08DC                               l1150 1B50  
                             l1142 1826                               l2023 13DE  
                             l2015 1370                               l2007 1316  
                             l2111 09B6                               l2103 0922  
                             l1143 182E                               l1071 1990  
                             l1136 1148                               l2017 137E  
                             l2025 13E4                               l2009 1336  
                             l2041 1652                               l2033 1614  
                             l1129 0B1C                               l2121 0A86  
                             l2105 0928                               l2113 0A1A  
                             l2201 1106                               l1162 1612  
                             l1170 1B10                               l2027 13F4  
                             l2019 13AC                               l1147 1B48  
                             l2051 16C0                               l2043 1666  
                             l2035 1624                               l2131 0AD0  
                             l2115 0A34                               l2123 0A96  
                             l2107 09AA                               l2141 19E4  
                             l2061 19A4                               l2221 1B76  
                             l2213 1B54                               l2301 0EF2  
                             l2029 1414                               l1173 1D34  
                             l2045 167A                               l2037 1638  
                             l2133 0ADC                               l2125 0AA8  
                             l2117 0A52                               l2109 09B0  
                             l2205 1112                               l2151 19FC  
                             l2143 19F4                               l2231 1CB0  
                             l2071 19BA                               l2063 19A6  
                             l2223 1B7E                               l2215 1B54  
                             l2311 0F32                               l2303 0F0A  
                             l2055 1B12                               l2047 167E  
                             l2039 1646                               l2135 0AE4  
                             l2127 0AB8                               l2119 0A6C  
                             l2207 1136                               l2153 1A0A  
                             l2145 19F6                               l2401 1C62  
                             l2073 19CC                               l2065 19A8  
                             l2161 1830                               l2225 1B84  
                             l2217 1B64                               l2321 0F6C  
                             l2313 0F44                               l2305 0F1C  
                             l2241 0DA0                               l2233 0D66  
                             l2057 1B2C                               l2049 16AC  
                             l2129 0ABE                               l2137 0AF4  
                             l2081 085C                               l1098 165A  
                             l2155 1A1C                               l2147 19F8  
                             l2403 1C68                               l2227 1C9C  
                             l2075 19CE                               l2067 19AA  
                             l2059 1994                               l2163 1834  
                             l2219 1B6C                               l2251 0DE6  
                             l2243 0DB0                               l2235 0D6E  
                             l2411 16F6                               l1179 1C3A  
                             l2091 08D0                               l2083 0884  
                             l2171 0F96                               l2341 18AA  
                             l2333 188E                               l2157 1A1E  
                             l2149 19FA                               l2229 1CA2  
                             l2077 19D0                               l2069 19AC  
                             l2165 1858                               l2261 0E0C  
                             l2253 0DF6                               l2245 0DB4  
                             l2237 0D76                               l2421 170A  
                             l2405 16DA                               l2093 08EC  
                             l2085 08A4                               l2181 1002  
                             l2173 0FBA                               l2351 18E6  
                             l2343 18B8                               l2159 1A20  
                             l2167 185C                               l2327 0F82  
                             l2319 0F5A                               l2271 0E4C  
                             l2263 0E1E                               l2255 0DFE  
                             l2247 0DBC                               l2239 0D88  
                             l2423 171A                               l2407 16DE  
                             l2431 1758                               l2095 08FE  
                             l2087 08B4                               l2079 083C  
                             l2191 10CA                               l2183 1026  
                             l2175 0FC8                               l2169 1D2C  
                             l2345 18C0                               l2361 1D28  
                             l2281 0E8A                               l2273 0E50  
                             l2265 0E26                               l2257 0E02  
                             l2249 0DCE                               l2425 171E  
                             l2417 16FE                               l2409 16F0  
                             l2441 17C4                               l2433 1768  
                             l2097 090C                               l2089 08B6  
                             l2193 10D8                               l2185 106E  
                             l2177 0FDA                               l2371 1910  
                             l2363 1C70                               l2347 18D4  
                             l2339 18A4                               l2355 1D0C  
                             l2451 1BA0                               l2291 0ECA  
                             l2283 0E90                               l2275 0E62  
                             l2267 0E42                               l2259 0E08  
                             l2427 173A                               l2419 1704  
                             l2435 1780                               l2099 0912  
                             l2195 10EC                               l2179 0FDE  
                             l2373 1916                               l2365 18EC  
                             l2349 18D6                               l2357 1D10  
                             l2461 1BBE                               l2453 1BA4  
                             l2445 1B92                               l2293 0ECE  
                             l2285 0E94                               l2277 0E6A  
                             l2269 0E46                               l2429 1752  
                             l2437 179C                               l2189 10A6  
                             l2541 0B50                               l2375 1926  
                             l2367 18F0                               l2471 14BE  
                             l2463 1436                               l2359 1D1E  
                             l2455 1BAA                               l2447 1B96  
                             l2391 1C3C                               l2295 0ED4  
                             l2287 0EA6                               l2279 0E86  
                             l2439 17B8                               l2199 10F8  
                             l2383 17CE                               l2551 0B8C  
                             l2543 0B52                               l2369 1900  
                             l2473 1502                               l2465 143E  
                             l2481 1AC4                               l2457 1BAE  
                             l2449 1B9A                               l2393 1C40  
                             l2297 0ED8                               l2289 0EAE  
                             l2377 1CC6                               l1921 154A  
                             l2385 17D6                               l2561 0BFE  
                             l2553 0BA4                               l2545 0B56  
                             l2475 153A                               l2467 1482  
                             l2483 1A32                               l2459 1BB2  
                             l2395 1C50                               l2299 0EEA  
                             l2379 1CE2                               l1931 15CC  
                             l1923 155C                               l2387 17E4  
                             l2491 195A                               l2571 0C98  
                             l2563 0C04                               l2555 0BB8  
                             l2547 0B5A                               l2539 0B1E  
                             l2477 153E                               l2469 14BA  
                             l2485 1A76                               l2397 1C56  
                             l1925 156E                               l1941 1AF0  
                             l2389 180A                               l2493 1962  
                             l2581 0D22                               l2573 0CB4  
                             l2565 0C14                               l2549 0B78  
                             l2557 0BC6                               l2479 1A80  
                             l2399 1C5C                               l1927 1578  
                             l1935 1ACE                               l1943 1C06  
                             l2495 197E                               l2487 1940  
                             l2583 0D28                               l2575 0CCE  
                             l2567 0C6C                               l2559 0BD6  
                             l1961 1180                               l1953 114A  
                             l1929 1596                               l1937 1ADA  
                             l1945 1C12                               l2489 1952  
                             l2585 0D3C                               l2577 0CDA  
                             l2569 0C86                               l1971 11DC  
                             l1963 118E                               l1955 114E  
                             l1939 1AEC                               l1947 1C16  
                             l2587 0D48                               l2579 0D06  
                             l1981 1246                               l1973 11E4  
                             l1965 11AE                               l1957 115C  
                             l1949 1C2E                               ?_pad 0011  
                             l1991 1290                               l1983 1266  
                             l1975 11F8                               l1967 11B2  
                             l1959 117C                               l1993 12B0  
                             l1985 1268                               l1977 1206  
                             l1969 11BE                               l1987 127A  
                             l1979 1218                               l1989 1280  
                             l1997 12D2                               l1999 12D6  
                             STR_1 0801                               STR_2 081D  
                             STR_3 0838                               STR_4 0837  
                             STR_5 080F                               STR_6 0838  
                             STR_7 0837                               STR_8 082A  
                             u2000 1900                               u2001 18FC  
                             u2010 1910                               u2011 190C  
                             u2020 1926                               u2100 1AC4  
                             u2021 1922                               u2101 1AC0  
                             u2030 1936                               u2110 1A76  
                             u1310 155C                               u2031 1932  
                             u2111 1A72                               u1311 1558  
                             u1400 11DC                               u1320 156E  
                             u2040 1826                               u1401 11D8  
                             u1321 156A                               u2041 1822  
                             u2050 173A                               u1410 1206  
                             u1330 1596                               u2051 1736  
                             u1411 1202                               u1331 1592  
                             u2060 1482                               u1420 1246  
                             u1340 15CC                               u1500 1624  
                             u2061 147E                               u1421 1242  
                             u1341 15C8                               u1501 1620  
                             u2070 14BA                               u1430 1290  
                             u1350 1B10                               u1510 1646  
                             _LATB 000F8A                               u2071 14B6  
                             u1431 128C                               u1351 1B0C  
                             u1511 1642                               u2080 1502  
                             u1440 12E4                               u1360 1C2E  
                             u1520 169C                               u1600 08FE  
                             _LATD 000F8C                               u2081 14FE  
                             u1441 12E0                               u1361 1C2A  
                             u1521 1698                               u1601 08FA  
                             u2090 153A                               u1370 115C  
                             u1450 1316                               u1530 16AC  
                             u1610 090C                               u2091 1536  
                             u1371 1158                               u1451 1312  
                             u1531 16A8                               u1611 0908  
                             u1700 1854                               u1380 118E  
                             u1460 1354                               u1540 1B2C  
                             u1620 0A34                               u2340 0B78  
                             u1381 118A                               u1461 1350  
                             u1541 1B28                               u1621 0A30  
                             u2341 0B74                               u1710 187C  
                             u1470 137E                               u1630 0A52  
                             u1550 086C                               u2350 0BD6  
                             u2407 0DA6                               u1391 11B8  
                             u1471 137A                               u1631 0A4E  
                             u1551 0866                               u2351 0BD2  
                             u1720 188C                               u1800 0DCE  
                             u1480 13AC                               u1640 0A6C  
                             u1560 086E                               u2360 0C14  
                             u1721 1888                               u2417 0DEC  
                             u1801 0DCA                               u1481 13A8  
                             u1641 0A68                               u2361 0C10  
                             u1810 0DE6                               u1490 13F4  
                             u1650 0A86                               u1570 0884  
                             u1730 0FBA                               u2507 1D22  
                             u2427 19B2                               u1707 184A  
                             u1811 0DE2                               u1491 13F0  
                             u1651 0A82                               u1571 0880  
                             u1731 0FB6                               u1900 0F1C  
                             u1820 0E1E                               u1660 0A96  
                             u1580 08B4                               u1740 1002  
                             u2517 18A6                               u2437 19D8  
                             u1717 1872                               u1901 0F18  
                             u1821 0E1A                               u1661 0A92  
                             u1581 08B0                               u1741 0FFE  
                             u1910 0F44                               u1830 0E3E  
                             u1670 0AA8                               u1590 08D0  
                             u1750 1026                               u2447 1CA8  
                             u1911 0F40                               u1831 0E3A  
                             u1671 0AA4                               u1591 08CC  
                             u1751 1022                               u1920 0F6C  
                             u1840 0E62                               u1680 0AB8  
                             u1760 10CA                               u2457 1CBC  
                             u1921 0F68                               u1841 0E5E  
                             u1681 0AB4                               u1761 10C6  
                             u2377 0B96                               u1930 18A4  
                             u1770 1B64                               u1850 0E82  
                             u1690 0AD0                               u1931 18A0  
                             u2467 1C46                               u1771 1B60  
                             u1851 0E7E                               u1691 0ACC  
                             u2387 0D52                               u1940 18B8  
                             u1860 0EA6                               u1780 0D88  
                             u1941 18B4                               u2477 1A02  
                             u1861 0EA2                               u1781 0D84  
                             u2397 1744                               u1950 18D4  
                             u1870 0EC6                               u1790 0DA0  
                             u1951 18D0                               u2487 1A28  
                             u1871 0EC2                               u1791 0D9C  
                             u1960 18E6                               u1880 0EEA  
                             u1961 18E2                               u2497 1D16  
                             u1881 0EE6                               u1970 1C7E  
                             u1890 0F0A                               u1971 1C7A  
                             u1891 0F06                               u1980 1C8C  
                             u1981 1C88                               u1990 1C9A  
                             u1991 1C96                               _RBPU 007F8F  
                             abs@a 0013                               _dbuf 006B  
                             _main 0B1E                               _dtoa 083C  
                             _prec 0064                               _nout 0060  
                             pad@i 0018                               pad@p 0015  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 001A  
                             fsr2l 000FD9                               prodh 000FF4  
                             prodl 000FF3                               start 0000  
                 ??_DHT11_ReadData 0001                      _LCD_String_xy 1B52  
                       PedirDato@i 0011              ??_TemperaturaDigitada 0009  
                     ___param_bank 000000                              ??_abs 0015  
                            ??_pad 0017                   __end_of_LCD_Char 19E2  
                 __end_of_LCD_Init 1C70                    __end_of___aodiv 12D2  
                            ?_main 0001                              ?_dtoa 001C  
                  __end_of___aomod 1436                              _LATA0 007C48  
                            _LATC0 007C58                              _LATD0 007C60  
                            _LATD1 007C61                              _LATE0 007C68  
                            _LATE1 007C69                              _LATE2 007C6A  
                            _LATC7 007C5F                       vfpfcnvrt@fmt 0042  
                            _PORTB 000F81                              _PORTD 000F83  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
              __end_of_LedsIniciar 1D34                              _flags 0066  
                            _fputc 154A                    __end_of_keyfind 0F96  
                            _fputs 1ACE                              pad@fp 0011  
                            _width 0062                              _putch 1D34  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                            tablat 000FF5                              status 000FD8  
                  __end_of_sprintf 1992                         _IniciarLed 18EA  
                   ?_LCD_String_xy 0005                    __initialization 1BD0  
                     __end_of_main 0D66                       __end_of_dtoa 0B1E  
                           ??_main 005E                             ??_dtoa 0026  
                __end_of_LCD_Clear 1CC6                      __activetblptr 000002  
                           _ADCON1 000FC1                             ?_fputc 0001  
                           ?_fputs 000A                             ?_putch 0001  
              _DHT11_CheckResponse 1C70                   LCD_String_xy@msg 0006  
                 LCD_String_xy@pos 0005                   LCD_String_xy@row 0008  
                           _OSCCON 000FD3                       vfprintf@cfmt 0056  
                        ??___aodiv 0011                          ??___aomod 0011  
                           ___wmul 1CC6               ?_DHT11_CheckResponse 0001  
                           _keypad 00AF                        _LedsIniciar 1D2C  
                           clear_0 1BF6                             isa$std 000001  
                           pad@buf 0013                             _rowloc 0069  
                           dtoa@fp 001C                             _strlen 1C06  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
                        ??_keyfind 0001                       _DatoSensorTH 1B92  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
   ControlAspersor@HumedadDigitada 0003                             putch@c 0001  
                 __end_of_vfprintf 1830                          ??_sprintf 005E  
     CompararTempe@HumedadAdecuada 0013                  PedirDato@Etiqueta 000A  
                        ?_LCD_Char 0001                         __accesstop 0060  
          __end_of__initialization 1BFC                          ?_LCD_Init 0001  
                  ??_LCD_String_xy 0008                      ___rparam_used 000001  
                      ?_IniciarLed 0001          TemperaturaDigitada@Decena 000E  
                   __pcstackCOMRAM 0001                       __pidataBANK0 1CEC  
            ??_DHT11_CheckResponse 0001                  main@TempeAdecuada 00A8  
        TemperaturaDigitada@Unidad 000A                      __end_of_fputc 1614  
                    __end_of_fputs 1B12                      __end_of_putch 1D36  
                     ??_LCD_String 0005                  __end_of_PedirDato 1758  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 0060  
                       ??_LCD_Char 0001                         ??_LCD_Init 0003  
               __end_of_LCD_String 188E                            ?___wmul 0001  
            __end_of_CompararTempe 154A                            ?_strlen 0001  
                    ??_DHT11_Start 0001        __end_of_TemperaturaDigitada 17CE  
                    LCD_String@msg 0003                            __Hparam 0000  
                          __Lparam 0000                            ___aodiv 114A  
                          ___aomod 12D2                          ?_vfprintf 0050  
                     __psmallconst 0800                            __pcinit 1BD0  
                          __ramtop 0800                   main@HumeAdecuada 00AA  
                          __ptext0 0B1E                            __ptext1 1940  
                          __ptext2 17CE                            __ptext3 0F96  
                          __ptext4 083C                            __ptext5 1614  
                          __ptext6 1C06                            __ptext7 1ACE  
                          __ptext8 154A                            __ptext9 1D34  
                          _col_loc 006A                            _keyfind 0D66  
                        _LCD_Clear 1C9C                            _sprintf 1940  
             end_of_initialization 1BFC                            fputc@fp 0003  
                   LCD_Command@cmd 0002                      __Lmediumconst 0000  
                          fputs@fp 000C             CompararTempe@HumActual 0005  
                __end_of_vfpfcnvrt 114A                  ??_ControlAspersor 0005  
              __end_of_DHT11_Start 1D2C                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 0056                       ?_LedsIniciar 0001  
                          strlen@a 0003                            strlen@s 0001  
                        _PORTAbits 000F80                          _PORTDbits 000F83  
                        _TRISAbits 000F92                         main@Cadena 0098  
                       ?_LCD_Clear 0001             DatoSensorTH@T_Integral 0006  
                       main@indice 00A6                       ??_IniciarLed 0002  
               DHT11_ReadData@data 0002                      ??_LCD_Command 0001  
                      vfpfcnvrt@ap 0044                        vfpfcnvrt@fp 0040  
                      vfpfcnvrt@ll 0048                     __end_of___wmul 1CEC  
          IniciarLed@HumedadOptima 0001       ControlAspersor@HumedadActual 0001  
                   __end_of_strlen 1C3C                 keypad_getkey@F3177 00BF  
              start_initialization 1BD0                 __end_of_IniciarLed 1940  
                      __end_of_abs 1B52                        __end_of_pad 16DA  
                        _PedirDato 16DA          CompararTempe@TempDigitada 0007  
      IniciarLed@TemperaturaOptima 0002                        _DHT11_Start 1D0C  
      __end_of_DHT11_CheckResponse 1C9C              __end_of_LCD_String_xy 1B92  
                      vfprintf@fmt 0052        ControlCalefactor@TempActual 0001  
                         ??___wmul 0005      ControlCalefactor@TempDigitada 0003  
                      __pdataBANK0 00AF                           ??_strlen 0003  
              __end_of_LCD_Command 1A32                      __pcstackBANK0 008B  
                 ___aodiv@dividend 0001                        ??_LCD_Clear 0003  
                       ?_PedirDato 000A   CompararTempe@TemperaturaAdecuada 0012  
               PedirDato@vecLlenar 000C                          _dtoa$1000 002E  
                         ?___aodiv 0001                           ?___aomod 0001  
                 ___aodiv@quotient 0013                     _DHT11_ReadData 188E  
                      __smallconst 0800                           ?_keyfind 0001  
            LCD_String_xy@location 0009                           ?_sprintf 0058  
                  _ControlAspersor 1A80                           _LCD_Char 1992  
                         _LCD_Init 1C3C                     ___wmul@product 0005  
                         _LATDbits 000F8C             __end_of_DHT11_ReadData 18EA  
                      _LCD_Command 19E2                          _vfpfcnvrt 0F96  
                        main@Datos 00AD                  ___wmul@multiplier 0001  
                        main@Tempe 00A2                      ?_DatoSensorTH 0003  
                      ??_PedirDato 000E                        _INTCON2bits 000FF1  
                        copy_data0 1BE4                  _ControlCalefactor 1A32  
               ?_ControlCalefactor 0001                           __Hrparam 0000  
                       vfprintf@ap 0054                           __Lrparam 0000  
                       vfprintf@fp 0050                ??_ControlCalefactor 0005  
                  ?_DHT11_ReadData 0001            DatoSensorTH@RH_Integral 0005  
                       ?_vfpfcnvrt 0040                    DHT11_ReadData@i 0001  
                    _CompararTempe 1436                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                     ??_DatoSensorTH 0005  
                       sprintf@fmt 005A                  DatoSensorTH@Datos 0003  
          __end_of_ControlAspersor 1ACE  TemperaturaDigitada@prmTemperatura 0007  
        __end_of_ControlCalefactor 1A80                           __ptext10 1B12  
                         __ptext11 12D2                           __ptext20 1C9C  
                         __ptext12 114A                           __ptext21 1C3C  
                         __ptext13 1758                           __ptext30 18EA  
                         __ptext22 19E2                           __ptext14 1CC6  
                         __ptext31 1D2C                           __ptext23 1B92  
                         __ptext15 16DA                           __ptext24 1D0C  
                         __ptext16 0D66                           __ptext25 188E  
                         __ptext17 1B52                           __ptext26 1C70  
                         __ptext18 1830                           __ptext27 1A32  
                         __ptext19 1992                           __ptext28 1A80  
                         __ptext29 1436                       ?_DHT11_Start 0001  
                         _temp_col 0068           CompararTempe@HumDigitada 0009  
                         isa$xinst 000000                           main@Hume 00A4  
                         _vfprintf 17CE                     ?_CompararTempe 0003  
                       _LCD_String 1830                   ___aomod@dividend 0001  
                        sprintf@ap 008B                    ___aomod@divisor 0009  
                      ??_vfpfcnvrt 0046                    ___aomod@counter 0011  
                         sprintf@f 008D                           sprintf@s 0058  
                 ?_ControlAspersor 0001       TemperaturaDigitada@Resultado 000C  
              _TemperaturaDigitada 1758                       ___aodiv@sign 0012  
             __end_of_DatoSensorTH 1BD0            CompararTempe@TempActual 0003  
                     ___aomod@sign 0012  
