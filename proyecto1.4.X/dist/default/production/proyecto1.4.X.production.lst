

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 04 08:48:31 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.36
    49                           ; Generated 28/01/2022 GMT
    50                           ; 
    51                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK0
    85  001C80                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _keypad
    89  001C80  31                 	db	49
    90  001C81  32                 	db	50
    91  001C82  33                 	db	51
    92  001C83  2F                 	db	47
    93  001C84  34                 	db	52
    94  001C85  35                 	db	53
    95  001C86  36                 	db	54
    96  001C87  2A                 	db	42
    97  001C88  37                 	db	55
    98  001C89  38                 	db	56
    99  001C8A  39                 	db	57
   100  001C8B  2D                 	db	45
   101  001C8C  2A                 	db	42
   102  001C8D  30                 	db	48
   103  001C8E  23                 	db	35
   104  001C8F  2B                 	db	43
   105                           
   106                           ;initializer for keypad_getkey@F3209
   107  001C90  31                 	db	49
   108  001C91  32                 	db	50
   109  001C92  33                 	db	51
   110  001C93  41                 	db	65
   111  001C94  34                 	db	52
   112  001C95  35                 	db	53
   113  001C96  36                 	db	54
   114  001C97  42                 	db	66
   115  001C98  37                 	db	55
   116  001C99  38                 	db	56
   117  001C9A  39                 	db	57
   118  001C9B  43                 	db	67
   119  001C9C  2A                 	db	42
   120  001C9D  30                 	db	48
   121  001C9E  23                 	db	35
   122  001C9F  44                 	db	68
   123  0000                     _TRISC	set	3988
   124  0000                     _LATC0	set	31832
   125  0000                     _PORTDbits	set	3971
   126  0000                     _LATDbits	set	3980
   127  0000                     _LATE2	set	31850
   128  0000                     _LATE1	set	31849
   129  0000                     _RBPU	set	32655
   130  0000                     _LATD1	set	31841
   131  0000                     _LATD0	set	31840
   132  0000                     _PORTAbits	set	3968
   133  0000                     _PORTB	set	3969
   134  0000                     _PORTD	set	3971
   135  0000                     _LATD	set	3980
   136  0000                     _TRISD	set	3989
   137  0000                     _ADCON1	set	4033
   138  0000                     _OSCCON	set	4051
   139  0000                     _TRISE	set	3990
   140  0000                     _INTCON2bits	set	4081
   141  0000                     _TRISAbits	set	3986
   142  0000                     _TRISB	set	3987
   143  0000                     _LATE0	set	31848
   144  0000                     _LATB	set	3978
   145  0000                     _LATA0	set	31816
   146                           
   147                           	psect	smallconst
   148  000800                     __psmallconst:
   149                           	callstack 0
   150  000800  00                 	db	0
   151  000801                     STR_1:
   152  000801  54                 	db	84	;'T'
   153  000802  65                 	db	101	;'e'
   154  000803  6D                 	db	109	;'m'
   155  000804  70                 	db	112	;'p'
   156  000805  65                 	db	101	;'e'
   157  000806  2E                 	db	46
   158  000807  20                 	db	32
   159  000808  4F                 	db	79	;'O'
   160  000809  70                 	db	112	;'p'
   161  00080A  74                 	db	116	;'t'
   162  00080B  69                 	db	105	;'i'
   163  00080C  6D                 	db	109	;'m'
   164  00080D  61                 	db	97	;'a'
   165  00080E  00                 	db	0
   166  00080F                     STR_2:
   167  00080F  48                 	db	72	;'H'
   168  000810  75                 	db	117	;'u'
   169  000811  6D                 	db	109	;'m'
   170  000812  65                 	db	101	;'e'
   171  000813  2E                 	db	46
   172  000814  20                 	db	32
   173  000815  4F                 	db	79	;'O'
   174  000816  70                 	db	112	;'p'
   175  000817  74                 	db	116	;'t'
   176  000818  69                 	db	105	;'i'
   177  000819  6D                 	db	109	;'m'
   178  00081A  61                 	db	97	;'a'
   179  00081B  00                 	db	0
   180  00081C                     STR_8:
   181  00081C  43                 	db	67	;'C'
   182  00081D  20                 	db	32
   183  00081E  54                 	db	84	;'T'
   184  00081F  65                 	db	101	;'e'
   185  000820  6D                 	db	109	;'m'
   186  000821  70                 	db	112	;'p'
   187  000822  65                 	db	101	;'e'
   188  000823  2E                 	db	46
   189  000824  00                 	db	0
   190  000825                     STR_5:
   191  000825  20                 	db	32
   192  000826  20                 	db	32
   193  000827  48                 	db	72	;'H'
   194  000828  75                 	db	117	;'u'
   195  000829  6D                 	db	109	;'m'
   196  00082A  65                 	db	101	;'e'
   197  00082B  2E                 	db	46
   198  00082C  00                 	db	0
   199  00082D                     STR_4:
   200  00082D  2E                 	db	46
   201  00082E  25                 	db	37
   202  00082F  64                 	db	100	;'d'
   203  000830  00                 	db	0
   204  000831  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  001B64                     __pcinit:
   210                           	callstack 0
   211  001B64                     start_initialization:
   212                           	callstack 0
   213  001B64                     __initialization:
   214                           	callstack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (32 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  001B64  0E80               	movlw	low __pidataBANK0
   219  001B66  6EF6               	movwf	tblptrl,c
   220  001B68  0E1C               	movlw	high __pidataBANK0
   221  001B6A  6EF7               	movwf	tblptrh,c
   222  001B6C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  001B6E  6EF8               	movwf	tblptru,c
   224  001B70  EE00  F0AF         	lfsr	0,__pdataBANK0
   225  001B74  EE10 F020          	lfsr	1,32
   226  001B78                     copy_data0:
   227  001B78  0009               	tblrd		*+
   228  001B7A  CFF5 FFEE          	movff	tablat,postinc0
   229  001B7E  50E5               	movf	postdec1,w,c
   230  001B80  50E1               	movf	fsr1l,w,c
   231  001B82  E1FA               	bnz	copy_data0
   232                           
   233                           ; Clear objects allocated to BANK0 (43 bytes)
   234  001B84  EE00  F060         	lfsr	0,__pbssBANK0
   235  001B88  0E2B               	movlw	43
   236  001B8A                     clear_0:
   237  001B8A  6AEE               	clrf	postinc0,c
   238  001B8C  06E8               	decf	wreg,f,c
   239  001B8E  E1FD               	bnz	clear_0
   240  001B90                     end_of_initialization:
   241                           	callstack 0
   242  001B90                     __end_of__initialization:
   243                           	callstack 0
   244  001B90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  001B92  6EF8               	movwf	tblptru,c
   246  001B94  0100               	movlb	0
   247  001B96  EF8A  F005         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  000060                     __pbssBANK0:
   251                           	callstack 0
   252  000060                     _nout:
   253                           	callstack 0
   254  000060                     	ds	2
   255  000062                     _width:
   256                           	callstack 0
   257  000062                     	ds	2
   258  000064                     _prec:
   259                           	callstack 0
   260  000064                     	ds	2
   261  000066                     _flags:
   262                           	callstack 0
   263  000066                     	ds	2
   264  000068                     _temp_col:
   265                           	callstack 0
   266  000068                     	ds	1
   267  000069                     _rowloc:
   268                           	callstack 0
   269  000069                     	ds	1
   270  00006A                     _col_loc:
   271                           	callstack 0
   272  00006A                     	ds	1
   273  00006B                     _dbuf:
   274                           	callstack 0
   275  00006B                     	ds	32
   276                           
   277                           	psect	dataBANK0
   278  0000AF                     __pdataBANK0:
   279                           	callstack 0
   280  0000AF                     _keypad:
   281                           	callstack 0
   282  0000AF                     	ds	16
   283  0000BF                     keypad_getkey@F3209:
   284                           	callstack 0
   285  0000BF                     	ds	16
   286                           
   287                           	psect	cstackBANK0
   288  00008B                     __pcstackBANK0:
   289                           	callstack 0
   290  00008B                     sprintf@ap:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x0
   294  00008B                     	ds	2
   295  00008D                     sprintf@f:
   296                           	callstack 0
   297                           
   298                           ; 11 bytes @ 0x2
   299  00008D                     	ds	11
   300  000098                     main@Cadena:
   301                           	callstack 0
   302                           
   303                           ; 10 bytes @ 0xD
   304  000098                     	ds	10
   305  0000A2                     main@Tempe:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x17
   309  0000A2                     	ds	2
   310  0000A4                     main@Hume:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x19
   314  0000A4                     	ds	2
   315  0000A6                     main@indice:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x1B
   319  0000A6                     	ds	2
   320  0000A8                     main@TempeAdecuada:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x1D
   324  0000A8                     	ds	2
   325  0000AA                     main@HumeAdecuada:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x1F
   329  0000AA                     	ds	2
   330  0000AC                     main@flag:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x21
   334  0000AC                     	ds	1
   335  0000AD                     main@Datos:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x22
   339  0000AD                     	ds	2
   340                           
   341                           	psect	cstackCOMRAM
   342  000001                     __pcstackCOMRAM:
   343                           	callstack 0
   344  000001                     ??_LCD_Command:
   345  000001                     ??_LCD_Char:
   346  000001                     ??_keyfind:
   347  000001                     ??_DHT11_Start:
   348  000001                     ?_strlen:
   349                           	callstack 0
   350  000001                     ?___wmul:
   351                           	callstack 0
   352  000001                     ?___aodiv:
   353                           	callstack 0
   354  000001                     ?___aomod:
   355                           	callstack 0
   356  000001                     DHT11_ReadData@i:
   357                           	callstack 0
   358  000001                     PrenderLed@HumedadAdecuada:
   359                           	callstack 0
   360  000001                     ControlAspersor@HumedadActual:
   361                           	callstack 0
   362  000001                     ___wmul@multiplier:
   363                           	callstack 0
   364  000001                     fputc@c:
   365                           	callstack 0
   366  000001                     strlen@s:
   367                           	callstack 0
   368  000001                     ___aodiv@dividend:
   369                           	callstack 0
   370  000001                     ___aomod@dividend:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0x0
   374  000001                     	ds	1
   375  000002                     LCD_Command@cmd:
   376                           	callstack 0
   377  000002                     LCD_Char@dat:
   378                           	callstack 0
   379  000002                     DHT11_ReadData@data:
   380                           	callstack 0
   381  000002                     PrenderLed@TemperaturaAdecuada:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x1
   385  000002                     	ds	1
   386  000003                     ??_LCD_Init:
   387  000003                     ??_LCD_Clear:
   388  000003                     LCD_String@msg:
   389                           	callstack 0
   390  000003                     CompararTempe@TempActual:
   391                           	callstack 0
   392  000003                     DatoSensorTH@Datos:
   393                           	callstack 0
   394  000003                     ControlAspersor@HumedadDigitada:
   395                           	callstack 0
   396  000003                     ___wmul@multiplicand:
   397                           	callstack 0
   398  000003                     fputc@fp:
   399                           	callstack 0
   400  000003                     strlen@a:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404  000003                     	ds	2
   405  000005                     ??_ControlAspersor:
   406  000005                     ??_fputc:
   407  000005                     LCD_String_xy@pos:
   408                           	callstack 0
   409  000005                     DatoSensorTH@RH_Integral:
   410                           	callstack 0
   411  000005                     CompararTempe@HumActual:
   412                           	callstack 0
   413  000005                     ___wmul@product:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x4
   417  000005                     	ds	1
   418  000006                     DatoSensorTH@T_Integral:
   419                           	callstack 0
   420  000006                     LCD_String_xy@msg:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x5
   424  000006                     	ds	1
   425  000007                     ?_TemperaturaDigitada:
   426                           	callstack 0
   427  000007                     TemperaturaDigitada@prmTemperatura:
   428                           	callstack 0
   429  000007                     CompararTempe@TempDigitada:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x6
   433  000007                     	ds	1
   434  000008                     LCD_String_xy@row:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x7
   438  000008                     	ds	1
   439  000009                     ??_TemperaturaDigitada:
   440  000009                     LCD_String_xy@location:
   441                           	callstack 0
   442  000009                     CompararTempe@HumDigitada:
   443                           	callstack 0
   444  000009                     ___aodiv@divisor:
   445                           	callstack 0
   446  000009                     ___aomod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x8
   450  000009                     	ds	1
   451  00000A                     TemperaturaDigitada@Unidad:
   452                           	callstack 0
   453  00000A                     PedirDato@Etiqueta:
   454                           	callstack 0
   455  00000A                     fputs@s:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x9
   459  00000A                     	ds	1
   460  00000B                     ??_CompararTempe:
   461                           
   462                           ; 1 bytes @ 0xA
   463  00000B                     	ds	1
   464  00000C                     TemperaturaDigitada@Resultado:
   465                           	callstack 0
   466  00000C                     PedirDato@vecLlenar:
   467                           	callstack 0
   468  00000C                     fputs@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xB
   472  00000C                     	ds	2
   473  00000E                     ??_PedirDato:
   474  00000E                     fputs@c:
   475                           	callstack 0
   476  00000E                     TemperaturaDigitada@Decena:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xD
   480  00000E                     	ds	1
   481  00000F                     fputs@i:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xE
   485  00000F                     	ds	1
   486  000010                     PedirDato@tecla:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xF
   490  000010                     	ds	1
   491  000011                     ?_pad:
   492                           	callstack 0
   493  000011                     ___aodiv@counter:
   494                           	callstack 0
   495  000011                     ___aomod@counter:
   496                           	callstack 0
   497  000011                     PedirDato@i:
   498                           	callstack 0
   499  000011                     pad@fp:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x10
   503  000011                     	ds	1
   504  000012                     CompararTempe@TemperaturaAdecuada:
   505                           	callstack 0
   506  000012                     ___aodiv@sign:
   507                           	callstack 0
   508  000012                     ___aomod@sign:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x11
   512  000012                     	ds	1
   513  000013                     ?_abs:
   514                           	callstack 0
   515  000013                     CompararTempe@HumedadAdecuada:
   516                           	callstack 0
   517  000013                     pad@buf:
   518                           	callstack 0
   519  000013                     abs@a:
   520                           	callstack 0
   521  000013                     ___aodiv@quotient:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x12
   525  000013                     	ds	2
   526  000015                     ??_abs:
   527  000015                     pad@p:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x14
   531  000015                     	ds	2
   532  000017                     ??_pad:
   533                           
   534                           ; 1 bytes @ 0x16
   535  000017                     	ds	1
   536  000018                     pad@i:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x17
   540  000018                     	ds	2
   541  00001A                     pad@w:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x19
   545  00001A                     	ds	2
   546  00001C                     ?_dtoa:
   547                           	callstack 0
   548  00001C                     dtoa@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1B
   552  00001C                     	ds	2
   553  00001E                     dtoa@d:
   554                           	callstack 0
   555                           
   556                           ; 8 bytes @ 0x1D
   557  00001E                     	ds	8
   558  000026                     ??_dtoa:
   559                           
   560                           ; 1 bytes @ 0x25
   561  000026                     	ds	8
   562  00002E                     _dtoa$990:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x2D
   566  00002E                     	ds	2
   567  000030                     dtoa@p:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x2F
   571  000030                     	ds	2
   572  000032                     dtoa@w:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x31
   576  000032                     	ds	2
   577  000034                     dtoa@s:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x33
   581  000034                     	ds	2
   582  000036                     dtoa@n:
   583                           	callstack 0
   584                           
   585                           ; 8 bytes @ 0x35
   586  000036                     	ds	8
   587  00003E                     dtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x3D
   591  00003E                     	ds	2
   592  000040                     ?_vfpfcnvrt:
   593                           	callstack 0
   594  000040                     vfpfcnvrt@fp:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x3F
   598  000040                     	ds	2
   599  000042                     vfpfcnvrt@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x41
   603  000042                     	ds	2
   604  000044                     vfpfcnvrt@ap:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x43
   608  000044                     	ds	2
   609  000046                     ??_vfpfcnvrt:
   610                           
   611                           ; 1 bytes @ 0x45
   612  000046                     	ds	2
   613  000048                     vfpfcnvrt@ll:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x47
   617  000048                     	ds	8
   618  000050                     ?_vfprintf:
   619                           	callstack 0
   620  000050                     vfprintf@fp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x4F
   624  000050                     	ds	2
   625  000052                     vfprintf@fmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x51
   629  000052                     	ds	2
   630  000054                     vfprintf@ap:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x53
   634  000054                     	ds	2
   635  000056                     vfprintf@cfmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x55
   639  000056                     	ds	2
   640  000058                     ?_sprintf:
   641                           	callstack 0
   642  000058                     sprintf@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x57
   646  000058                     	ds	2
   647  00005A                     sprintf@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x59
   651  00005A                     	ds	4
   652  00005E                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x5D
   655  00005E                     	ds	2
   656                           
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 26 in file "Main_Invernadero.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  Cadena         10   13[BANK0 ] unsigned char [10]
   667 ;;  Datos           2   34[BANK0 ] unsigned char [2]
   668 ;;  Hume            2   25[BANK0 ] unsigned char [2]
   669 ;;  Tempe           2   23[BANK0 ] unsigned char [2]
   670 ;;  HumeAdecuada    2   31[BANK0 ] int 
   671 ;;  TempeAdecuad    2   29[BANK0 ] int 
   672 ;;  indice          2   27[BANK0 ] int 
   673 ;;  flag            1   33[BANK0 ] _Bool 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   683 ;;      Params:         0       0       0       0       0       0       0       0       0
   684 ;;      Locals:         0      23       0       0       0       0       0       0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0
   686 ;;      Totals:         2      23       0       0       0       0       0       0       0
   687 ;;Total ram usage:       25 bytes
   688 ;; Hardware stack levels required when called: 8
   689 ;; This function calls:
   690 ;;		_CompararTempe
   691 ;;		_ControlAspersor
   692 ;;		_DatoSensorTH
   693 ;;		_LCD_Char
   694 ;;		_LCD_Init
   695 ;;		_LCD_String
   696 ;;		_LCD_String_xy
   697 ;;		_LedsIniciar
   698 ;;		_PedirDato
   699 ;;		_TemperaturaDigitada
   700 ;;		_sprintf
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707  000B14                     __ptext0:
   708                           	callstack 0
   709  000B14                     _main:
   710                           	callstack 23
   711  000B14                     
   712                           ;Main_Invernadero.c: 29:     TRISE = 0;
   713  000B14  0E00               	movlw	0
   714  000B16  6E96               	movwf	150,c	;volatile
   715                           
   716                           ;Main_Invernadero.c: 30:     TRISD=0x00;
   717  000B18  0E00               	movlw	0
   718  000B1A  6E95               	movwf	149,c	;volatile
   719                           
   720                           ;Main_Invernadero.c: 31:     _Bool flag = 0;
   721  000B1C  0E00               	movlw	0
   722  000B1E  0100               	movlb	0	; () banked
   723  000B20  6FAC               	movwf	main@flag& (0+255),b
   724                           
   725                           ;Main_Invernadero.c: 32:     unsigned char Tempe[2];;Main_Invernadero.c: 33:     unsigne
      +                          d char Hume[2];;Main_Invernadero.c: 34:     char Datos[2];;Main_Invernadero.c: 35:     c
      +                          har Cadena[10];;Main_Invernadero.c: 36:     int indice = 0;
   726  000B22  0E00               	movlw	0
   727  000B24  6FA7               	movwf	(main@indice+1)& (0+255),b
   728  000B26  0E00               	movlw	0
   729  000B28  6FA6               	movwf	main@indice& (0+255),b
   730                           
   731                           ;Main_Invernadero.c: 37:     int TempeAdecuada=0;
   732  000B2A  0E00               	movlw	0
   733  000B2C  6FA9               	movwf	(main@TempeAdecuada+1)& (0+255),b
   734  000B2E  0E00               	movlw	0
   735  000B30  6FA8               	movwf	main@TempeAdecuada& (0+255),b
   736                           
   737                           ;Main_Invernadero.c: 38:     int HumeAdecuada=0;
   738  000B32  0E00               	movlw	0
   739  000B34  6FAB               	movwf	(main@HumeAdecuada+1)& (0+255),b
   740  000B36  0E00               	movlw	0
   741  000B38  6FAA               	movwf	main@HumeAdecuada& (0+255),b
   742                           
   743                           ;Main_Invernadero.c: 43:     OSCCON = 0x72;
   744  000B3A  0E72               	movlw	114
   745  000B3C  6ED3               	movwf	211,c	;volatile
   746                           
   747                           ;Main_Invernadero.c: 45:     ADCON1=0x0F;
   748  000B3E  0E0F               	movlw	15
   749  000B40  6EC1               	movwf	193,c	;volatile
   750                           
   751                           ;Main_Invernadero.c: 46:     TRISC=0x00;
   752  000B42  0E00               	movlw	0
   753  000B44  6E94               	movwf	148,c	;volatile
   754  000B46                     
   755                           ; BSR set to: 0
   756                           ;Main_Invernadero.c: 47:      RBPU=0;
   757  000B46  9EF1               	bcf	4081,7,c	;volatile
   758  000B48                     
   759                           ; BSR set to: 0
   760                           ;Main_Invernadero.c: 48:      LCD_Init();
   761  000B48  ECE8  F00D         	call	_LCD_Init	;wreg free
   762  000B4C                     
   763                           ;Main_Invernadero.c: 49:      LedsIniciar();
   764  000B4C  EC60  F00E         	call	_LedsIniciar	;wreg free
   765  000B50                     l2530:
   766                           
   767                           ;Main_Invernadero.c: 51:      if(indice<2){
   768  000B50  0100               	movlb	0	; () banked
   769  000B52  BFA7               	btfsc	(main@indice+1)& (0+255),7,b
   770  000B54  EFB7  F005         	goto	u2320
   771  000B58  51A7               	movf	(main@indice+1)& (0+255),w,b
   772  000B5A  E107               	bnz	u2321
   773  000B5C  0E02               	movlw	2
   774  000B5E  5DA6               	subwf	main@indice& (0+255),w,b
   775  000B60  B0D8               	btfsc	status,0,c
   776  000B62  EFB5  F005         	goto	u2321
   777  000B66  EFB7  F005         	goto	u2320
   778  000B6A                     u2321:
   779  000B6A  EFDE  F005         	goto	l2540
   780  000B6E                     u2320:
   781  000B6E                     
   782                           ; BSR set to: 0
   783                           ;Main_Invernadero.c: 52:        PedirDato("Tempe. Optima",Tempe);
   784  000B6E  0E01               	movlw	low STR_1
   785  000B70  6E0A               	movwf	PedirDato@Etiqueta^0,c
   786  000B72  0E08               	movlw	high STR_1
   787  000B74  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   788  000B76  0EA2               	movlw	low main@Tempe
   789  000B78  6E0C               	movwf	PedirDato@vecLlenar^0,c
   790  000B7A  0E00               	movlw	high main@Tempe
   791  000B7C  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   792  000B7E  EC5E  F00B         	call	_PedirDato	;wreg free
   793  000B82                     
   794                           ;Main_Invernadero.c: 53:        _delay((unsigned long)((100)*(8000000/4000.0)));
   795  000B82  0E02               	movlw	2
   796  000B84  6E5F               	movwf	(??_main+1)^0,c
   797  000B86  0E04               	movlw	4
   798  000B88  6E5E               	movwf	??_main^0,c
   799  000B8A  0EBA               	movlw	186
   800  000B8C                     u2357:
   801  000B8C  2EE8               	decfsz	wreg,f,c
   802  000B8E  D7FE               	bra	u2357
   803  000B90  2E5E               	decfsz	??_main^0,f,c
   804  000B92  D7FC               	bra	u2357
   805  000B94  2E5F               	decfsz	(??_main+1)^0,f,c
   806  000B96  D7FA               	bra	u2357
   807  000B98  D000               	nop2	
   808  000B9A                     
   809                           ;Main_Invernadero.c: 54:        PedirDato("Hume. Optima",Hume);
   810  000B9A  0E0F               	movlw	low STR_2
   811  000B9C  6E0A               	movwf	PedirDato@Etiqueta^0,c
   812  000B9E  0E08               	movlw	high STR_2
   813  000BA0  6E0B               	movwf	(PedirDato@Etiqueta+1)^0,c
   814  000BA2  0EA4               	movlw	low main@Hume
   815  000BA4  6E0C               	movwf	PedirDato@vecLlenar^0,c
   816  000BA6  0E00               	movlw	high main@Hume
   817  000BA8  6E0D               	movwf	(PedirDato@vecLlenar+1)^0,c
   818  000BAA  EC5E  F00B         	call	_PedirDato	;wreg free
   819  000BAE                     
   820                           ;Main_Invernadero.c: 55:        indice = 2;
   821  000BAE  0E00               	movlw	0
   822  000BB0  0100               	movlb	0	; () banked
   823  000BB2  6FA7               	movwf	(main@indice+1)& (0+255),b
   824  000BB4  0E02               	movlw	2
   825  000BB6  6FA6               	movwf	main@indice& (0+255),b
   826                           
   827                           ;Main_Invernadero.c: 56:     }else{
   828  000BB8  EFFD  F005         	goto	l2546
   829  000BBC                     l2540:
   830                           
   831                           ; BSR set to: 0
   832                           ;Main_Invernadero.c: 57:         if(flag==0){
   833  000BBC  51AC               	movf	main@flag& (0+255),w,b
   834  000BBE  A4D8               	btfss	status,2,c
   835  000BC0  EFE4  F005         	goto	u2331
   836  000BC4  EFE6  F005         	goto	u2330
   837  000BC8                     u2331:
   838  000BC8  EFFA  F005         	goto	l2544
   839  000BCC                     u2330:
   840  000BCC                     
   841                           ; BSR set to: 0
   842                           ;Main_Invernadero.c: 58:          TempeAdecuada = TemperaturaDigitada(Tempe);
   843  000BCC  0EA2               	movlw	low main@Tempe
   844  000BCE  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   845  000BD0  0E00               	movlw	high main@Tempe
   846  000BD2  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   847  000BD4  EC9D  F00B         	call	_TemperaturaDigitada	;wreg free
   848  000BD8  C007  F0A8         	movff	?_TemperaturaDigitada,main@TempeAdecuada
   849  000BDC  C008  F0A9         	movff	?_TemperaturaDigitada+1,main@TempeAdecuada+1
   850                           
   851                           ;Main_Invernadero.c: 59:          HumeAdecuada = TemperaturaDigitada(Hume);
   852  000BE0  0EA4               	movlw	low main@Hume
   853  000BE2  6E07               	movwf	TemperaturaDigitada@prmTemperatura^0,c
   854  000BE4  0E00               	movlw	high main@Hume
   855  000BE6  6E08               	movwf	(TemperaturaDigitada@prmTemperatura+1)^0,c
   856  000BE8  EC9D  F00B         	call	_TemperaturaDigitada	;wreg free
   857  000BEC  C007  F0AA         	movff	?_TemperaturaDigitada,main@HumeAdecuada
   858  000BF0  C008  F0AB         	movff	?_TemperaturaDigitada+1,main@HumeAdecuada+1
   859  000BF4                     l2544:
   860                           
   861                           ;Main_Invernadero.c: 61:        flag=1;
   862  000BF4  0E01               	movlw	1
   863  000BF6  0100               	movlb	0	; () banked
   864  000BF8  6FAC               	movwf	main@flag& (0+255),b
   865  000BFA                     l2546:
   866                           
   867                           ; BSR set to: 0
   868                           ;Main_Invernadero.c: 63:      if (flag==1){
   869  000BFA  05AC               	decf	main@flag& (0+255),w,b
   870  000BFC  A4D8               	btfss	status,2,c
   871  000BFE  EF03  F006         	goto	u2341
   872  000C02  EF05  F006         	goto	u2340
   873  000C06                     u2341:
   874  000C06  EFA8  F005         	goto	l2530
   875  000C0A                     u2340:
   876  000C0A                     
   877                           ; BSR set to: 0
   878                           ;Main_Invernadero.c: 64:         DatoSensorTH(Datos);
   879  000C0A  0EAD               	movlw	low main@Datos
   880  000C0C  6E03               	movwf	DatoSensorTH@Datos^0,c
   881  000C0E  0E00               	movlw	high main@Datos
   882  000C10  6E04               	movwf	(DatoSensorTH@Datos+1)^0,c
   883  000C12  EC93  F00D         	call	_DatoSensorTH	;wreg free
   884                           
   885                           ;Main_Invernadero.c: 65:         CompararTempe(&Datos[0],&Datos[1],TempeAdecuada,HumeAde
      +                          cuada);
   886  000C16  0EAD               	movlw	low main@Datos
   887  000C18  6E03               	movwf	CompararTempe@TempActual^0,c
   888  000C1A  0E00               	movlw	high main@Datos
   889  000C1C  6E04               	movwf	(CompararTempe@TempActual+1)^0,c
   890  000C1E  0EAE               	movlw	low (main@Datos+1)
   891  000C20  6E05               	movwf	CompararTempe@HumActual^0,c
   892  000C22  0E00               	movlw	high (main@Datos+1)
   893  000C24  6E06               	movwf	(CompararTempe@HumActual+1)^0,c
   894  000C26  C0A8  F007         	movff	main@TempeAdecuada,CompararTempe@TempDigitada
   895  000C2A  C0A9  F008         	movff	main@TempeAdecuada+1,CompararTempe@TempDigitada+1
   896  000C2E  C0AA  F009         	movff	main@HumeAdecuada,CompararTempe@HumDigitada
   897  000C32  C0AB  F00A         	movff	main@HumeAdecuada+1,CompararTempe@HumDigitada+1
   898  000C36  EC0C  F00A         	call	_CompararTempe	;wreg free
   899                           
   900                           ;Main_Invernadero.c: 66:         ControlAspersor(&Datos[1],HumeAdecuada);
   901  000C3A  0EAE               	movlw	low (main@Datos+1)
   902  000C3C  6E01               	movwf	ControlAspersor@HumedadActual^0,c
   903  000C3E  0E00               	movlw	high (main@Datos+1)
   904  000C40  6E02               	movwf	(ControlAspersor@HumedadActual+1)^0,c
   905  000C42  C0AA  F003         	movff	main@HumeAdecuada,ControlAspersor@HumedadDigitada
   906  000C46  C0AB  F004         	movff	main@HumeAdecuada+1,ControlAspersor@HumedadDigitada+1
   907  000C4A  EC0A  F00D         	call	_ControlAspersor	;wreg free
   908  000C4E                     
   909                           ;Main_Invernadero.c: 69:     sprintf(Cadena,"%d",Datos[1]);
   910  000C4E  0E98               	movlw	low main@Cadena
   911  000C50  6E58               	movwf	sprintf@s^0,c
   912  000C52  0E00               	movlw	high main@Cadena
   913  000C54  6E59               	movwf	(sprintf@s+1)^0,c
   914  000C56  0E2E               	movlw	low (STR_4+1)
   915  000C58  6E5A               	movwf	sprintf@fmt^0,c
   916  000C5A  0E08               	movlw	high (STR_4+1)
   917  000C5C  6E5B               	movwf	(sprintf@fmt+1)^0,c
   918  000C5E  C0AE  F05C         	movff	main@Datos+1,?_sprintf+4
   919  000C62  6A5D               	clrf	(?_sprintf+5)^0,c
   920  000C64  EC91  F00C         	call	_sprintf	;wreg free
   921  000C68                     
   922                           ;Main_Invernadero.c: 70:     LCD_String_xy(0,0,Cadena);
   923  000C68  0E00               	movlw	0
   924  000C6A  6E05               	movwf	LCD_String_xy@pos^0,c
   925  000C6C  0E98               	movlw	low main@Cadena
   926  000C6E  6E06               	movwf	LCD_String_xy@msg^0,c
   927  000C70  0E00               	movlw	high main@Cadena
   928  000C72  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   929  000C74  0E00               	movlw	0
   930  000C76  EC73  F00D         	call	_LCD_String_xy
   931  000C7A                     
   932                           ;Main_Invernadero.c: 71:     sprintf(Cadena,".%d",0);
   933  000C7A  0E98               	movlw	low main@Cadena
   934  000C7C  6E58               	movwf	sprintf@s^0,c
   935  000C7E  0E00               	movlw	high main@Cadena
   936  000C80  6E59               	movwf	(sprintf@s+1)^0,c
   937  000C82  0E2D               	movlw	low STR_4
   938  000C84  6E5A               	movwf	sprintf@fmt^0,c
   939  000C86  0E08               	movlw	high STR_4
   940  000C88  6E5B               	movwf	(sprintf@fmt+1)^0,c
   941  000C8A  0E00               	movlw	0
   942  000C8C  6E5D               	movwf	(?_sprintf+5)^0,c
   943  000C8E  0E00               	movlw	0
   944  000C90  6E5C               	movwf	(?_sprintf+4)^0,c
   945  000C92  EC91  F00C         	call	_sprintf	;wreg free
   946  000C96                     
   947                           ;Main_Invernadero.c: 72:     LCD_Char('%');
   948  000C96  0E25               	movlw	37
   949  000C98  ECBA  F00C         	call	_LCD_Char
   950                           
   951                           ;Main_Invernadero.c: 73:     sprintf(Cadena,"  Hume.");
   952  000C9C  0E98               	movlw	low main@Cadena
   953  000C9E  6E58               	movwf	sprintf@s^0,c
   954  000CA0  0E00               	movlw	high main@Cadena
   955  000CA2  6E59               	movwf	(sprintf@s+1)^0,c
   956  000CA4  0E25               	movlw	low STR_5
   957  000CA6  6E5A               	movwf	sprintf@fmt^0,c
   958  000CA8  0E08               	movlw	high STR_5
   959  000CAA  6E5B               	movwf	(sprintf@fmt+1)^0,c
   960  000CAC  EC91  F00C         	call	_sprintf	;wreg free
   961  000CB0                     
   962                           ;Main_Invernadero.c: 74:      LCD_String(Cadena);
   963  000CB0  0E98               	movlw	low main@Cadena
   964  000CB2  6E03               	movwf	LCD_String@msg^0,c
   965  000CB4  0E00               	movlw	high main@Cadena
   966  000CB6  6E04               	movwf	(LCD_String@msg+1)^0,c
   967  000CB8  EC09  F00C         	call	_LCD_String	;wreg free
   968  000CBC                     
   969                           ;Main_Invernadero.c: 77:     sprintf(Cadena,"%d",Datos[0]);
   970  000CBC  0E98               	movlw	low main@Cadena
   971  000CBE  6E58               	movwf	sprintf@s^0,c
   972  000CC0  0E00               	movlw	high main@Cadena
   973  000CC2  6E59               	movwf	(sprintf@s+1)^0,c
   974  000CC4  0E2E               	movlw	low (STR_4+1)
   975  000CC6  6E5A               	movwf	sprintf@fmt^0,c
   976  000CC8  0E08               	movlw	high (STR_4+1)
   977  000CCA  6E5B               	movwf	(sprintf@fmt+1)^0,c
   978  000CCC  C0AD  F05C         	movff	main@Datos,?_sprintf+4
   979  000CD0  6A5D               	clrf	(?_sprintf+5)^0,c
   980  000CD2  EC91  F00C         	call	_sprintf	;wreg free
   981                           
   982                           ;Main_Invernadero.c: 78:     LCD_String_xy(2,0,Cadena);
   983  000CD6  0E00               	movlw	0
   984  000CD8  6E05               	movwf	LCD_String_xy@pos^0,c
   985  000CDA  0E98               	movlw	low main@Cadena
   986  000CDC  6E06               	movwf	LCD_String_xy@msg^0,c
   987  000CDE  0E00               	movlw	high main@Cadena
   988  000CE0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   989  000CE2  0E02               	movlw	2
   990  000CE4  EC73  F00D         	call	_LCD_String_xy
   991  000CE8                     
   992                           ;Main_Invernadero.c: 79:     sprintf(Cadena,".%d",0);
   993  000CE8  0E98               	movlw	low main@Cadena
   994  000CEA  6E58               	movwf	sprintf@s^0,c
   995  000CEC  0E00               	movlw	high main@Cadena
   996  000CEE  6E59               	movwf	(sprintf@s+1)^0,c
   997  000CF0  0E2D               	movlw	low STR_4
   998  000CF2  6E5A               	movwf	sprintf@fmt^0,c
   999  000CF4  0E08               	movlw	high STR_4
  1000  000CF6  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1001  000CF8  0E00               	movlw	0
  1002  000CFA  6E5D               	movwf	(?_sprintf+5)^0,c
  1003  000CFC  0E00               	movlw	0
  1004  000CFE  6E5C               	movwf	(?_sprintf+4)^0,c
  1005  000D00  EC91  F00C         	call	_sprintf	;wreg free
  1006  000D04                     
  1007                           ;Main_Invernadero.c: 80:     LCD_Char(0xdf);
  1008  000D04  0EDF               	movlw	223
  1009  000D06  ECBA  F00C         	call	_LCD_Char
  1010  000D0A                     
  1011                           ;Main_Invernadero.c: 81:     sprintf(Cadena,"C Tempe.");
  1012  000D0A  0E98               	movlw	low main@Cadena
  1013  000D0C  6E58               	movwf	sprintf@s^0,c
  1014  000D0E  0E00               	movlw	high main@Cadena
  1015  000D10  6E59               	movwf	(sprintf@s+1)^0,c
  1016  000D12  0E1C               	movlw	low STR_8
  1017  000D14  6E5A               	movwf	sprintf@fmt^0,c
  1018  000D16  0E08               	movlw	high STR_8
  1019  000D18  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1020  000D1A  EC91  F00C         	call	_sprintf	;wreg free
  1021  000D1E                     
  1022                           ;Main_Invernadero.c: 82:     LCD_String(Cadena);
  1023  000D1E  0E98               	movlw	low main@Cadena
  1024  000D20  6E03               	movwf	LCD_String@msg^0,c
  1025  000D22  0E00               	movlw	high main@Cadena
  1026  000D24  6E04               	movwf	(LCD_String@msg+1)^0,c
  1027  000D26  EC09  F00C         	call	_LCD_String	;wreg free
  1028  000D2A                     
  1029                           ;Main_Invernadero.c: 84:        _delay((unsigned long)((500)*(8000000/4000.0)));
  1030  000D2A  0E06               	movlw	6
  1031  000D2C  6E5F               	movwf	(??_main+1)^0,c
  1032  000D2E  0E13               	movlw	19
  1033  000D30  6E5E               	movwf	??_main^0,c
  1034  000D32  0EAE               	movlw	174
  1035  000D34                     u2367:
  1036  000D34  2EE8               	decfsz	wreg,f,c
  1037  000D36  D7FE               	bra	u2367
  1038  000D38  2E5E               	decfsz	??_main^0,f,c
  1039  000D3A  D7FC               	bra	u2367
  1040  000D3C  2E5F               	decfsz	(??_main+1)^0,f,c
  1041  000D3E  D7FA               	bra	u2367
  1042  000D40  EFA8  F005         	goto	l2530
  1043  000D44  EF00  F000         	goto	start
  1044  000D48                     __end_of_main:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _sprintf *****************
  1048 ;; Defined at:
  1049 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  s               2   87[COMRAM] PTR unsigned char 
  1052 ;;		 -> main@Cadena(10), 
  1053 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1054 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1055 ;;		 -> STR_4(4), STR_3(3), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  f              11    2[BANK0 ] struct _IO_FILE
  1058 ;;  ap              2    0[BANK0 ] PTR void [1]
  1059 ;;		 -> ?_sprintf(2), 
  1060 ;;  ret             2    0        int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2   87[COMRAM] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1070 ;;      Params:         6       0       0       0       0       0       0       0       0
  1071 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1073 ;;      Totals:         6      13       0       0       0       0       0       0       0
  1074 ;;Total ram usage:       19 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 7
  1077 ;; This function calls:
  1078 ;;		_vfprintf
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085  001922                     __ptext1:
  1086                           	callstack 0
  1087  001922                     _sprintf:
  1088                           	callstack 23
  1089  001922  0E5C               	movlw	low (?_sprintf+4)
  1090  001924  0100               	movlb	0	; () banked
  1091  001926  6F8B               	movwf	sprintf@ap& (0+255),b
  1092  001928  0E00               	movlw	high (?_sprintf+4)
  1093  00192A  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
  1094  00192C  C058  F08D         	movff	sprintf@s,sprintf@f
  1095  001930  C059  F08E         	movff	sprintf@s+1,sprintf@f+1
  1096  001934                     
  1097                           ; BSR set to: 0
  1098  001934  0E00               	movlw	0
  1099  001936  6F91               	movwf	(sprintf@f+4)& (0+255),b
  1100  001938  0E00               	movlw	0
  1101  00193A  6F90               	movwf	(sprintf@f+3)& (0+255),b
  1102  00193C                     
  1103                           ; BSR set to: 0
  1104  00193C  0E00               	movlw	0
  1105  00193E  6F97               	movwf	(sprintf@f+10)& (0+255),b
  1106  001940  0E00               	movlw	0
  1107  001942  6F96               	movwf	(sprintf@f+9)& (0+255),b
  1108  001944                     
  1109                           ; BSR set to: 0
  1110  001944  0E8D               	movlw	low sprintf@f
  1111  001946  6E50               	movwf	vfprintf@fp^0,c
  1112  001948  0E00               	movlw	high sprintf@f
  1113  00194A  6E51               	movwf	(vfprintf@fp+1)^0,c
  1114  00194C  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1115  001950  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1116  001954  0E8B               	movlw	low sprintf@ap
  1117  001956  6E54               	movwf	vfprintf@ap^0,c
  1118  001958  0E00               	movlw	high sprintf@ap
  1119  00195A  6E55               	movwf	(vfprintf@ap+1)^0,c
  1120  00195C  ECD8  F00B         	call	_vfprintf	;wreg free
  1121  001960  0100               	movlb	0	; () banked
  1122  001962  5190               	movf	(sprintf@f+3)& (0+255),w,b
  1123  001964  2458               	addwf	sprintf@s^0,w,c
  1124  001966  6ED9               	movwf	fsr2l,c
  1125  001968  5191               	movf	(sprintf@f+4)& (0+255),w,b
  1126  00196A  2059               	addwfc	(sprintf@s+1)^0,w,c
  1127  00196C  6EDA               	movwf	fsr2h,c
  1128  00196E  0E00               	movlw	0
  1129  001970  6EDF               	movwf	indf2,c
  1130  001972                     
  1131                           ; BSR set to: 0
  1132  001972  0012               	return		;funcret
  1133  001974                     __end_of_sprintf:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _vfprintf *****************
  1137 ;; Defined at:
  1138 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1141 ;;		 -> sprintf@f(11), 
  1142 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1143 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1144 ;;		 -> STR_4(4), STR_3(3), 
  1145 ;;  ap              2   83[COMRAM] PTR PTR void 
  1146 ;;		 -> sprintf@ap(2), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1149 ;;		 -> STR_8(9), STR_7(4), STR_6(3), STR_5(8), 
  1150 ;;		 -> STR_4(4), STR_3(3), 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2   79[COMRAM] int 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         6       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        8 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 6
  1167 ;; This function calls:
  1168 ;;		_vfpfcnvrt
  1169 ;; This function is called by:
  1170 ;;		_sprintf
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text2
  1175  0017B0                     __ptext2:
  1176                           	callstack 0
  1177  0017B0                     _vfprintf:
  1178                           	callstack 23
  1179  0017B0                     
  1180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1181  0017B0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1182  0017B4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1183  0017B8                     
  1184                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1185  0017B8  0E00               	movlw	0
  1186  0017BA  0100               	movlb	0	; () banked
  1187  0017BC  6F61               	movwf	(_nout+1)& (0+255),b
  1188  0017BE  0E00               	movlw	0
  1189  0017C0  6F60               	movwf	_nout& (0+255),b
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1192  0017C2  EFF6  F00B         	goto	l2376
  1193  0017C6                     l2374:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1197  0017C6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1198  0017CA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1199  0017CE  0E56               	movlw	low vfprintf@cfmt
  1200  0017D0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1201  0017D2  0E00               	movlw	high vfprintf@cfmt
  1202  0017D4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1203  0017D6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1204  0017DA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1205  0017DE  ECBC  F007         	call	_vfpfcnvrt	;wreg free
  1206  0017E2  5040               	movf	?_vfpfcnvrt^0,w,c
  1207  0017E4  0100               	movlb	0	; () banked
  1208  0017E6  2760               	addwf	_nout& (0+255),f,b
  1209  0017E8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1210  0017EA  2361               	addwfc	(_nout+1)& (0+255),f,b
  1211  0017EC                     l2376:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1215  0017EC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1216  0017F0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1217  0017F4                     	if	0	;tblptru may be non-zero
  1218  0017F4                     	endif
  1219  0017F4                     	if	0	;tblptru may be non-zero
  1220  0017F4                     	endif
  1221  0017F4  0008               	tblrd		*
  1222  0017F6  50F5               	movf	tablat,w,c
  1223  0017F8  0900               	iorlw	0
  1224  0017FA  A4D8               	btfss	status,2,c
  1225  0017FC  EF02  F00C         	goto	u2031
  1226  001800  EF04  F00C         	goto	u2030
  1227  001804                     u2031:
  1228  001804  EFE3  F00B         	goto	l2374
  1229  001808                     u2030:
  1230  001808                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1233  001808  C060  F050         	movff	_nout,?_vfprintf
  1234  00180C  C061  F051         	movff	_nout+1,?_vfprintf+1
  1235  001810                     
  1236                           ; BSR set to: 0
  1237  001810  0012               	return		;funcret
  1238  001812                     __end_of_vfprintf:
  1239                           	callstack 0
  1240                           
  1241 ;; *************** function _vfpfcnvrt *****************
  1242 ;; Defined at:
  1243 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1246 ;;		 -> sprintf@f(11), 
  1247 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1248 ;;		 -> vfprintf@cfmt(2), 
  1249 ;;  ap              2   67[COMRAM] PTR PTR void 
  1250 ;;		 -> sprintf@ap(2), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ll              8   71[COMRAM] long long 
  1253 ;;  llu             8    0        unsigned long long 
  1254 ;;  f               4    0        unsigned long long 
  1255 ;;  vp              3    0        PTR void 
  1256 ;;  ct              3    0        unsigned char [3]
  1257 ;;  cp              3    0        PTR unsigned char 
  1258 ;;  i               2    0        int 
  1259 ;;  done            2    0        int 
  1260 ;;  c               1    0        unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2   63[COMRAM] int 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         6       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1272 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1273 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1274 ;;Total ram usage:       16 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 5
  1277 ;; This function calls:
  1278 ;;		_dtoa
  1279 ;;		_fputc
  1280 ;; This function is called by:
  1281 ;;		_vfprintf
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text3
  1286  000F78                     __ptext3:
  1287                           	callstack 0
  1288  000F78                     _vfpfcnvrt:
  1289                           	callstack 23
  1290  000F78                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1292  000F78  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293  000F7C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294  000F80  CFDE FFF6          	movff	postinc2,tblptrl
  1295  000F84  CFDD FFF7          	movff	postdec2,tblptrh
  1296  000F88                     	if	0	;tblptru may be non-zero
  1297  000F88                     	endif
  1298  000F88                     	if	0	;tblptru may be non-zero
  1299  000F88                     	endif
  1300  000F88  0008               	tblrd		*
  1301  000F8A  50F5               	movf	tablat,w,c
  1302  000F8C  0A25               	xorlw	37
  1303  000F8E  A4D8               	btfss	status,2,c
  1304  000F90  EFCC  F007         	goto	u1721
  1305  000F94  EFCE  F007         	goto	u1720
  1306  000F98                     u1721:
  1307  000F98  EF7A  F008         	goto	l2192
  1308  000F9C                     u1720:
  1309  000F9C                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1311  000F9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312  000FA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313  000FA4  2ADE               	incf	postinc2,f,c
  1314  000FA6  0E00               	movlw	0
  1315  000FA8  22DD               	addwfc	postdec2,f,c
  1316  000FAA                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1318  000FAA  0E00               	movlw	0
  1319  000FAC  0100               	movlb	0	; () banked
  1320  000FAE  6F63               	movwf	(_width+1)& (0+255),b
  1321  000FB0  0E00               	movlw	0
  1322  000FB2  6F62               	movwf	_width& (0+255),b
  1323  000FB4  C062  F066         	movff	_width,_flags
  1324  000FB8  C063  F067         	movff	_width+1,_flags+1
  1325  000FBC                     
  1326                           ; BSR set to: 0
  1327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1328  000FBC  6964               	setf	_prec& (0+255),b
  1329  000FBE  6965               	setf	(_prec+1)& (0+255),b
  1330  000FC0                     
  1331                           ; BSR set to: 0
  1332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1333  000FC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1334  000FC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1335  000FC8  CFDE FFF6          	movff	postinc2,tblptrl
  1336  000FCC  CFDD FFF7          	movff	postdec2,tblptrh
  1337  000FD0                     	if	0	;tblptru may be non-zero
  1338  000FD0                     	endif
  1339  000FD0                     	if	0	;tblptru may be non-zero
  1340  000FD0                     	endif
  1341  000FD0  0008               	tblrd		*
  1342  000FD2  50F5               	movf	tablat,w,c
  1343  000FD4  0A64               	xorlw	100
  1344  000FD6  B4D8               	btfsc	status,2,c
  1345  000FD8  EFF0  F007         	goto	u1731
  1346  000FDC  EFF2  F007         	goto	u1730
  1347  000FE0                     u1731:
  1348  000FE0  EF04  F008         	goto	l2170
  1349  000FE4                     u1730:
  1350  000FE4                     
  1351                           ; BSR set to: 0
  1352  000FE4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353  000FE8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354  000FEC  CFDE FFF6          	movff	postinc2,tblptrl
  1355  000FF0  CFDD FFF7          	movff	postdec2,tblptrh
  1356  000FF4                     	if	0	;tblptru may be non-zero
  1357  000FF4                     	endif
  1358  000FF4                     	if	0	;tblptru may be non-zero
  1359  000FF4                     	endif
  1360  000FF4  0008               	tblrd		*
  1361  000FF6  50F5               	movf	tablat,w,c
  1362  000FF8  0A69               	xorlw	105
  1363  000FFA  A4D8               	btfss	status,2,c
  1364  000FFC  EF02  F008         	goto	u1741
  1365  001000  EF04  F008         	goto	u1740
  1366  001004                     u1741:
  1367  001004  EF44  F008         	goto	l2176
  1368  001008                     u1740:
  1369  001008                     l2170:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1373  001008  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1374  00100C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1375  001010  2ADE               	incf	postinc2,f,c
  1376  001012  0E00               	movlw	0
  1377  001014  22DD               	addwfc	postdec2,f,c
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1380  001016  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1381  00101A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1382  00101E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1383  001022  0E02               	movlw	2
  1384  001024  26DE               	addwf	postinc2,f,c
  1385  001026  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1386  00102A  0E00               	movlw	0
  1387  00102C  22DD               	addwfc	postdec2,f,c
  1388  00102E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1389  001032  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1390  001036  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1391  00103A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1392  00103E  0E00               	movlw	0
  1393  001040  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1394  001042  0EFF               	movlw	-1
  1395  001044  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1396  001046  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1397  001048  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1398  00104A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1399  00104C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1400  00104E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1401  001050                     
  1402                           ; BSR set to: 0
  1403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1404  001050  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1405  001054  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1406  001058  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1407  00105C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1408  001060  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1409  001064  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1410  001068  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1411  00106C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1412  001070  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1413  001074  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1414  001078  EC19  F004         	call	_dtoa	;wreg free
  1415  00107C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1416  001080  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1417  001084  EF95  F008         	goto	l1127
  1418  001088                     l2176:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1422  001088  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1423  00108C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1424  001090  CFDE FFF6          	movff	postinc2,tblptrl
  1425  001094  CFDD FFF7          	movff	postdec2,tblptrh
  1426  001098                     	if	0	;tblptru may be non-zero
  1427  001098                     	endif
  1428  001098                     	if	0	;tblptru may be non-zero
  1429  001098                     	endif
  1430  001098  0008               	tblrd		*
  1431  00109A  50F5               	movf	tablat,w,c
  1432  00109C  0A25               	xorlw	37
  1433  00109E  A4D8               	btfss	status,2,c
  1434  0010A0  EF54  F008         	goto	u1751
  1435  0010A4  EF56  F008         	goto	u1750
  1436  0010A8                     u1751:
  1437  0010A8  EF6D  F008         	goto	l2186
  1438  0010AC                     u1750:
  1439  0010AC                     
  1440                           ; BSR set to: 0
  1441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1442  0010AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  0010B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  0010B4  2ADE               	incf	postinc2,f,c
  1445  0010B6  0E00               	movlw	0
  1446  0010B8  22DD               	addwfc	postdec2,f,c
  1447  0010BA                     
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1450  0010BA  0E00               	movlw	0
  1451  0010BC  6E02               	movwf	(fputc@c+1)^0,c
  1452  0010BE  0E25               	movlw	37
  1453  0010C0  6E01               	movwf	fputc@c^0,c
  1454  0010C2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1455  0010C6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1456  0010CA  EC96  F00A         	call	_fputc	;wreg free
  1457  0010CE                     l2182:
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1460  0010CE  0E00               	movlw	0
  1461  0010D0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1462  0010D2  0E01               	movlw	1
  1463  0010D4  6E40               	movwf	?_vfpfcnvrt^0,c
  1464  0010D6  EF95  F008         	goto	l1127
  1465  0010DA                     l2186:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1469  0010DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1470  0010DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1471  0010E2  2ADE               	incf	postinc2,f,c
  1472  0010E4  0E00               	movlw	0
  1473  0010E6  22DD               	addwfc	postdec2,f,c
  1474  0010E8                     
  1475                           ; BSR set to: 0
  1476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1477  0010E8  0E00               	movlw	0
  1478  0010EA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1479  0010EC  0E00               	movlw	0
  1480  0010EE  6E40               	movwf	?_vfpfcnvrt^0,c
  1481  0010F0  EF95  F008         	goto	l1127
  1482  0010F4                     l2192:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1485  0010F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1486  0010F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1487  0010FC  CFDE FFF6          	movff	postinc2,tblptrl
  1488  001100  CFDD FFF7          	movff	postdec2,tblptrh
  1489  001104                     	if	0	;tblptru may be non-zero
  1490  001104                     	endif
  1491  001104                     	if	0	;tblptru may be non-zero
  1492  001104                     	endif
  1493  001104  0008               	tblrd		*
  1494  001106  50F5               	movf	tablat,w,c
  1495  001108  6E01               	movwf	fputc@c^0,c
  1496  00110A  6A02               	clrf	(fputc@c+1)^0,c
  1497  00110C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1498  001110  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1499  001114  EC96  F00A         	call	_fputc	;wreg free
  1500  001118                     
  1501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1502  001118  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503  00111C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504  001120  2ADE               	incf	postinc2,f,c
  1505  001122  0E00               	movlw	0
  1506  001124  22DD               	addwfc	postdec2,f,c
  1507  001126  EF67  F008         	goto	l2182
  1508  00112A                     l1127:
  1509  00112A  0012               	return		;funcret
  1510  00112C                     __end_of_vfpfcnvrt:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _dtoa *****************
  1514 ;; Defined at:
  1515 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1518 ;;		 -> sprintf@f(11), 
  1519 ;;  d               8   29[COMRAM] long long 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  n               8   53[COMRAM] long long 
  1522 ;;  i               2   61[COMRAM] int 
  1523 ;;  s               2   51[COMRAM] int 
  1524 ;;  w               2   49[COMRAM] int 
  1525 ;;  p               2   47[COMRAM] int 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2   27[COMRAM] int 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:        10       0       0       0       0       0       0       0       0
  1536 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1537 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1538 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1539 ;;Total ram usage:       36 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 4
  1542 ;; This function calls:
  1543 ;;		___aodiv
  1544 ;;		___aomod
  1545 ;;		_abs
  1546 ;;		_pad
  1547 ;; This function is called by:
  1548 ;;		_vfpfcnvrt
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text4
  1553  000832                     __ptext4:
  1554                           	callstack 0
  1555  000832                     _dtoa:
  1556                           	callstack 23
  1557  000832                     
  1558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1559  000832  C01E  F036         	movff	dtoa@d,dtoa@n
  1560  000836  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1561  00083A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1562  00083E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1563  000842  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1564  000846  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1565  00084A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1566  00084E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1567  000852                     
  1568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1569  000852  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1570  000854  EF2E  F004         	goto	u1541
  1571  000858  EF31  F004         	goto	u1540
  1572  00085C                     u1541:
  1573  00085C  0E01               	movlw	1
  1574  00085E  EF32  F004         	goto	u1550
  1575  000862                     u1540:
  1576  000862  0E00               	movlw	0
  1577  000864                     u1550:
  1578  000864  6E34               	movwf	dtoa@s^0,c
  1579  000866  6A35               	clrf	(dtoa@s+1)^0,c
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1582  000868  5034               	movf	dtoa@s^0,w,c
  1583  00086A  1035               	iorwf	(dtoa@s+1)^0,w,c
  1584  00086C  B4D8               	btfsc	status,2,c
  1585  00086E  EF3B  F004         	goto	u1561
  1586  000872  EF3D  F004         	goto	u1560
  1587  000876                     u1561:
  1588  000876  EF4D  F004         	goto	l2072
  1589  00087A                     u1560:
  1590  00087A                     
  1591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1592  00087A  1E3D               	comf	(dtoa@n+7)^0,f,c
  1593  00087C  1E3C               	comf	(dtoa@n+6)^0,f,c
  1594  00087E  1E3B               	comf	(dtoa@n+5)^0,f,c
  1595  000880  1E3A               	comf	(dtoa@n+4)^0,f,c
  1596  000882  1E39               	comf	(dtoa@n+3)^0,f,c
  1597  000884  1E38               	comf	(dtoa@n+2)^0,f,c
  1598  000886  1E37               	comf	(dtoa@n+1)^0,f,c
  1599  000888  6C36               	negf	dtoa@n^0,c
  1600  00088A  0E00               	movlw	0
  1601  00088C  2237               	addwfc	(dtoa@n+1)^0,f,c
  1602  00088E  2238               	addwfc	(dtoa@n+2)^0,f,c
  1603  000890  2239               	addwfc	(dtoa@n+3)^0,f,c
  1604  000892  223A               	addwfc	(dtoa@n+4)^0,f,c
  1605  000894  223B               	addwfc	(dtoa@n+5)^0,f,c
  1606  000896  223C               	addwfc	(dtoa@n+6)^0,f,c
  1607  000898  223D               	addwfc	(dtoa@n+7)^0,f,c
  1608  00089A                     l2072:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1611  00089A  0100               	movlb	0	; () banked
  1612  00089C  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1613  00089E  EF53  F004         	goto	u1571
  1614  0008A2  EF55  F004         	goto	u1570
  1615  0008A6                     u1571:
  1616  0008A6  EF56  F004         	goto	l2076
  1617  0008AA                     u1570:
  1618  0008AA                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1621  0008AA  9366               	bcf	_flags& (0+255),1,b
  1622  0008AC                     l2076:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1626  0008AC  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1627  0008AE  EF63  F004         	goto	u1580
  1628  0008B2  5165               	movf	(_prec+1)& (0+255),w,b
  1629  0008B4  E106               	bnz	u1581
  1630  0008B6  0564               	decf	_prec& (0+255),w,b
  1631  0008B8  B0D8               	btfsc	status,0,c
  1632  0008BA  EF61  F004         	goto	u1581
  1633  0008BE  EF63  F004         	goto	u1580
  1634  0008C2                     u1581:
  1635  0008C2  EF69  F004         	goto	l1100
  1636  0008C6                     u1580:
  1637  0008C6                     
  1638                           ; BSR set to: 0
  1639  0008C6  0E00               	movlw	0
  1640  0008C8  6E31               	movwf	(dtoa@p+1)^0,c
  1641  0008CA  0E01               	movlw	1
  1642  0008CC  6E30               	movwf	dtoa@p^0,c
  1643  0008CE  EF6D  F004         	goto	l1102
  1644  0008D2                     l1100:
  1645                           
  1646                           ; BSR set to: 0
  1647  0008D2  C064  F030         	movff	_prec,dtoa@p
  1648  0008D6  C065  F031         	movff	_prec+1,dtoa@p+1
  1649  0008DA                     l1102:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1653  0008DA  C062  F032         	movff	_width,dtoa@w
  1654  0008DE  C063  F033         	movff	_width+1,dtoa@w+1
  1655  0008E2                     
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1658  0008E2  5034               	movf	dtoa@s^0,w,c
  1659  0008E4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1660  0008E6  A4D8               	btfss	status,2,c
  1661  0008E8  EF78  F004         	goto	u1591
  1662  0008EC  EF7A  F004         	goto	u1590
  1663  0008F0                     u1591:
  1664  0008F0  EF81  F004         	goto	l2084
  1665  0008F4                     u1590:
  1666  0008F4                     
  1667                           ; BSR set to: 0
  1668  0008F4  A566               	btfss	_flags& (0+255),2,b
  1669  0008F6  EF7F  F004         	goto	u1601
  1670  0008FA  EF81  F004         	goto	u1600
  1671  0008FE                     u1601:
  1672  0008FE  EF84  F004         	goto	l2086
  1673  000902                     u1600:
  1674  000902                     l2084:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1678  000902  0632               	decf	dtoa@w^0,f,c
  1679  000904  A0D8               	btfss	status,0,c
  1680  000906  0633               	decf	(dtoa@w+1)^0,f,c
  1681  000908                     l2086:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1685  000908  0E00               	movlw	0
  1686  00090A  6E3F               	movwf	(dtoa@i+1)^0,c
  1687  00090C  0E1F               	movlw	31
  1688  00090E  6E3E               	movwf	dtoa@i^0,c
  1689  000910                     
  1690                           ; BSR set to: 0
  1691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1692  000910  0E00               	movlw	0
  1693  000912  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1696  000914  EF08  F005         	goto	l2100
  1697  000918                     l2090:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1700  000918  063E               	decf	dtoa@i^0,f,c
  1701  00091A  A0D8               	btfss	status,0,c
  1702  00091C  063F               	decf	(dtoa@i+1)^0,f,c
  1703  00091E                     
  1704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1705  00091E  0E6B               	movlw	low _dbuf
  1706  000920  243E               	addwf	dtoa@i^0,w,c
  1707  000922  6ED9               	movwf	fsr2l,c
  1708  000924  0E00               	movlw	high _dbuf
  1709  000926  203F               	addwfc	(dtoa@i+1)^0,w,c
  1710  000928  6EDA               	movwf	fsr2h,c
  1711  00092A  C036  F001         	movff	dtoa@n,___aomod@dividend
  1712  00092E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1713  000932  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1714  000936  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1715  00093A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1716  00093E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1717  000942  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1718  000946  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1719  00094A  0E0A               	movlw	10
  1720  00094C  6E09               	movwf	___aomod@divisor^0,c
  1721  00094E  0E00               	movlw	0
  1722  000950  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1723  000952  0E00               	movlw	0
  1724  000954  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1725  000956  0E00               	movlw	0
  1726  000958  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1727  00095A  0E00               	movlw	0
  1728  00095C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1729  00095E  0E00               	movlw	0
  1730  000960  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1731  000962  0E00               	movlw	0
  1732  000964  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1733  000966  0E00               	movlw	0
  1734  000968  6E10               	movwf	(___aomod@divisor+7)^0,c
  1735  00096A  EC5A  F009         	call	___aomod	;wreg free
  1736  00096E  C001  F026         	movff	?___aomod,??_dtoa
  1737  000972  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1738  000976  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1739  00097A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1740  00097E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1741  000982  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1742  000986  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1743  00098A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1744  00098E  C026  F013         	movff	??_dtoa,abs@a
  1745  000992  C028  F014         	movff	??_dtoa+2,abs@a+1
  1746  000996  EC53  F00D         	call	_abs	;wreg free
  1747  00099A  5013               	movf	?_abs^0,w,c
  1748  00099C  0F30               	addlw	48
  1749  00099E  6EDF               	movwf	indf2,c
  1750  0009A0                     
  1751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  1752  0009A0  0630               	decf	dtoa@p^0,f,c
  1753  0009A2  A0D8               	btfss	status,0,c
  1754  0009A4  0631               	decf	(dtoa@p+1)^0,f,c
  1755  0009A6                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  1757  0009A6  0632               	decf	dtoa@w^0,f,c
  1758  0009A8  A0D8               	btfss	status,0,c
  1759  0009AA  0633               	decf	(dtoa@w+1)^0,f,c
  1760  0009AC                     
  1761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1762  0009AC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1763  0009B0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1764  0009B4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1765  0009B8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1766  0009BC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1767  0009C0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1768  0009C4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1769  0009C8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1770  0009CC  0E0A               	movlw	10
  1771  0009CE  6E09               	movwf	___aodiv@divisor^0,c
  1772  0009D0  0E00               	movlw	0
  1773  0009D2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1774  0009D4  0E00               	movlw	0
  1775  0009D6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1776  0009D8  0E00               	movlw	0
  1777  0009DA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1778  0009DC  0E00               	movlw	0
  1779  0009DE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1780  0009E0  0E00               	movlw	0
  1781  0009E2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1782  0009E4  0E00               	movlw	0
  1783  0009E6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1784  0009E8  0E00               	movlw	0
  1785  0009EA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1786  0009EC  EC96  F008         	call	___aodiv	;wreg free
  1787  0009F0  C001  F036         	movff	?___aodiv,dtoa@n
  1788  0009F4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1789  0009F8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1790  0009FC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1791  000A00  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1792  000A04  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1793  000A08  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1794  000A0C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1795  000A10                     l2100:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1798  000A10  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1799  000A12  EF13  F005         	goto	u1611
  1800  000A16  503F               	movf	(dtoa@i+1)^0,w,c
  1801  000A18  E108               	bnz	u1610
  1802  000A1A  043E               	decf	dtoa@i^0,w,c
  1803  000A1C  A0D8               	btfss	status,0,c
  1804  000A1E  EF13  F005         	goto	u1611
  1805  000A22  EF15  F005         	goto	u1610
  1806  000A26                     u1611:
  1807  000A26  EF46  F005         	goto	l2110
  1808  000A2A                     u1610:
  1809  000A2A  5036               	movf	dtoa@n^0,w,c
  1810  000A2C  1037               	iorwf	(dtoa@n+1)^0,w,c
  1811  000A2E  1038               	iorwf	(dtoa@n+2)^0,w,c
  1812  000A30  1039               	iorwf	(dtoa@n+3)^0,w,c
  1813  000A32  103A               	iorwf	(dtoa@n+4)^0,w,c
  1814  000A34  103B               	iorwf	(dtoa@n+5)^0,w,c
  1815  000A36  103C               	iorwf	(dtoa@n+6)^0,w,c
  1816  000A38  103D               	iorwf	(dtoa@n+7)^0,w,c
  1817  000A3A  A4D8               	btfss	status,2,c
  1818  000A3C  EF22  F005         	goto	u1621
  1819  000A40  EF24  F005         	goto	u1620
  1820  000A44                     u1621:
  1821  000A44  EF8C  F004         	goto	l2090
  1822  000A48                     u1620:
  1823  000A48  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1824  000A4A  EF31  F005         	goto	u1630
  1825  000A4E  5031               	movf	(dtoa@p+1)^0,w,c
  1826  000A50  E106               	bnz	u1631
  1827  000A52  0430               	decf	dtoa@p^0,w,c
  1828  000A54  B0D8               	btfsc	status,0,c
  1829  000A56  EF2F  F005         	goto	u1631
  1830  000A5A  EF31  F005         	goto	u1630
  1831  000A5E                     u1631:
  1832  000A5E  EF8C  F004         	goto	l2090
  1833  000A62                     u1630:
  1834  000A62  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1835  000A64  EF3C  F005         	goto	u1641
  1836  000A68  5033               	movf	(dtoa@w+1)^0,w,c
  1837  000A6A  E108               	bnz	u1640
  1838  000A6C  0432               	decf	dtoa@w^0,w,c
  1839  000A6E  A0D8               	btfss	status,0,c
  1840  000A70  EF3C  F005         	goto	u1641
  1841  000A74  EF3E  F005         	goto	u1640
  1842  000A78                     u1641:
  1843  000A78  EF46  F005         	goto	l2110
  1844  000A7C                     u1640:
  1845  000A7C  0100               	movlb	0	; () banked
  1846  000A7E  B366               	btfsc	_flags& (0+255),1,b
  1847  000A80  EF44  F005         	goto	u1651
  1848  000A84  EF46  F005         	goto	u1650
  1849  000A88                     u1651:
  1850  000A88  EF8C  F004         	goto	l2090
  1851  000A8C                     u1650:
  1852  000A8C                     l2110:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1855  000A8C  5034               	movf	dtoa@s^0,w,c
  1856  000A8E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1857  000A90  A4D8               	btfss	status,2,c
  1858  000A92  EF4D  F005         	goto	u1661
  1859  000A96  EF4F  F005         	goto	u1660
  1860  000A9A                     u1661:
  1861  000A9A  EF57  F005         	goto	l2114
  1862  000A9E                     u1660:
  1863  000A9E  0100               	movlb	0	; () banked
  1864  000AA0  A566               	btfss	_flags& (0+255),2,b
  1865  000AA2  EF55  F005         	goto	u1671
  1866  000AA6  EF57  F005         	goto	u1670
  1867  000AAA                     u1671:
  1868  000AAA  EF75  F005         	goto	l2124
  1869  000AAE                     u1670:
  1870  000AAE                     l2114:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  1873  000AAE  063E               	decf	dtoa@i^0,f,c
  1874  000AB0  A0D8               	btfss	status,0,c
  1875  000AB2  063F               	decf	(dtoa@i+1)^0,f,c
  1876  000AB4                     
  1877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1878  000AB4  5034               	movf	dtoa@s^0,w,c
  1879  000AB6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1880  000AB8  A4D8               	btfss	status,2,c
  1881  000ABA  EF61  F005         	goto	u1681
  1882  000ABE  EF63  F005         	goto	u1680
  1883  000AC2                     u1681:
  1884  000AC2  EF69  F005         	goto	l2120
  1885  000AC6                     u1680:
  1886  000AC6  0E00               	movlw	0
  1887  000AC8  6E2F               	movwf	(_dtoa$990+1)^0,c
  1888  000ACA  0E2B               	movlw	43
  1889  000ACC  6E2E               	movwf	_dtoa$990^0,c
  1890  000ACE  EF6D  F005         	goto	l2122
  1891  000AD2                     l2120:
  1892  000AD2  0E00               	movlw	0
  1893  000AD4  6E2F               	movwf	(_dtoa$990+1)^0,c
  1894  000AD6  0E2D               	movlw	45
  1895  000AD8  6E2E               	movwf	_dtoa$990^0,c
  1896  000ADA                     l2122:
  1897  000ADA  0E6B               	movlw	low _dbuf
  1898  000ADC  243E               	addwf	dtoa@i^0,w,c
  1899  000ADE  6ED9               	movwf	fsr2l,c
  1900  000AE0  0E00               	movlw	high _dbuf
  1901  000AE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1902  000AE4  6EDA               	movwf	fsr2h,c
  1903  000AE6  C02E  FFDF         	movff	_dtoa$990,indf2
  1904  000AEA                     l2124:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1907  000AEA  C01C  F011         	movff	dtoa@fp,pad@fp
  1908  000AEE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1909  000AF2  0E6B               	movlw	low _dbuf
  1910  000AF4  243E               	addwf	dtoa@i^0,w,c
  1911  000AF6  6E13               	movwf	pad@buf^0,c
  1912  000AF8  0E00               	movlw	high _dbuf
  1913  000AFA  203F               	addwfc	(dtoa@i+1)^0,w,c
  1914  000AFC  6E14               	movwf	(pad@buf+1)^0,c
  1915  000AFE  C032  F015         	movff	dtoa@w,pad@p
  1916  000B02  C033  F016         	movff	dtoa@w+1,pad@p+1
  1917  000B06  ECFB  F00A         	call	_pad	;wreg free
  1918  000B0A  C011  F01C         	movff	?_pad,?_dtoa
  1919  000B0E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1920  000B12  0012               	return		;funcret
  1921  000B14                     __end_of_dtoa:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function _pad *****************
  1925 ;; Defined at:
  1926 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1929 ;;		 -> sprintf@f(11), 
  1930 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1931 ;;		 -> dbuf(32), 
  1932 ;;  p               2   20[COMRAM] int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  w               2   25[COMRAM] int 
  1935 ;;  i               2   23[COMRAM] int 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2   16[COMRAM] int 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1945 ;;      Params:         6       0       0       0       0       0       0       0       0
  1946 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1947 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1948 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1949 ;;Total ram usage:       11 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 3
  1952 ;; This function calls:
  1953 ;;		_fputc
  1954 ;;		_fputs
  1955 ;;		_strlen
  1956 ;; This function is called by:
  1957 ;;		_dtoa
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text5
  1962  0015F6                     __ptext5:
  1963                           	callstack 0
  1964  0015F6                     _pad:
  1965                           	callstack 23
  1966  0015F6                     
  1967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1968  0015F6  0100               	movlb	0	; () banked
  1969  0015F8  A166               	btfss	_flags& (0+255),0,b
  1970  0015FA  EF01  F00B         	goto	u1491
  1971  0015FE  EF03  F00B         	goto	u1490
  1972  001602                     u1491:
  1973  001602  EF0D  F00B         	goto	l2024
  1974  001606                     u1490:
  1975  001606                     
  1976                           ; BSR set to: 0
  1977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1978  001606  C013  F00A         	movff	pad@buf,fputs@s
  1979  00160A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1980  00160E  C011  F00C         	movff	pad@fp,fputs@fp
  1981  001612  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1982  001616  EC31  F00D         	call	_fputs	;wreg free
  1983  00161A                     l2024:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1986  00161A  BE16               	btfsc	(pad@p+1)^0,7,c
  1987  00161C  EF12  F00B         	goto	u1501
  1988  001620  EF14  F00B         	goto	u1500
  1989  001624                     u1501:
  1990  001624  EF1A  F00B         	goto	l2028
  1991  001628                     u1500:
  1992  001628  C015  F01A         	movff	pad@p,pad@w
  1993  00162C  C016  F01B         	movff	pad@p+1,pad@w+1
  1994  001630  EF1E  F00B         	goto	l1089
  1995  001634                     l2028:
  1996  001634  0E00               	movlw	0
  1997  001636  6E1B               	movwf	(pad@w+1)^0,c
  1998  001638  0E00               	movlw	0
  1999  00163A  6E1A               	movwf	pad@w^0,c
  2000  00163C                     l1089:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2003  00163C  0E00               	movlw	0
  2004  00163E  6E19               	movwf	(pad@i+1)^0,c
  2005  001640  0E00               	movlw	0
  2006  001642  6E18               	movwf	pad@i^0,c
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2009  001644  EF30  F00B         	goto	l2034
  2010  001648                     l2030:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2013  001648  0E00               	movlw	0
  2014  00164A  6E02               	movwf	(fputc@c+1)^0,c
  2015  00164C  0E20               	movlw	32
  2016  00164E  6E01               	movwf	fputc@c^0,c
  2017  001650  C011  F003         	movff	pad@fp,fputc@fp
  2018  001654  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2019  001658  EC96  F00A         	call	_fputc	;wreg free
  2020  00165C                     
  2021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2022  00165C  4A18               	infsnz	pad@i^0,f,c
  2023  00165E  2A19               	incf	(pad@i+1)^0,f,c
  2024  001660                     l2034:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2027  001660  501A               	movf	pad@w^0,w,c
  2028  001662  5C18               	subwf	pad@i^0,w,c
  2029  001664  5019               	movf	(pad@i+1)^0,w,c
  2030  001666  0A80               	xorlw	128
  2031  001668  6E17               	movwf	??_pad^0,c
  2032  00166A  501B               	movf	(pad@w+1)^0,w,c
  2033  00166C  0A80               	xorlw	128
  2034  00166E  5817               	subwfb	??_pad^0,w,c
  2035  001670  A0D8               	btfss	status,0,c
  2036  001672  EF3D  F00B         	goto	u1511
  2037  001676  EF3F  F00B         	goto	u1510
  2038  00167A                     u1511:
  2039  00167A  EF24  F00B         	goto	l2030
  2040  00167E                     u1510:
  2041  00167E                     
  2042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2043  00167E  0100               	movlb	0	; () banked
  2044  001680  B166               	btfsc	_flags& (0+255),0,b
  2045  001682  EF45  F00B         	goto	u1521
  2046  001686  EF47  F00B         	goto	u1520
  2047  00168A                     u1521:
  2048  00168A  EF51  F00B         	goto	l2038
  2049  00168E                     u1520:
  2050  00168E                     
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2053  00168E  C013  F00A         	movff	pad@buf,fputs@s
  2054  001692  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2055  001696  C011  F00C         	movff	pad@fp,fputs@fp
  2056  00169A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2057  00169E  EC31  F00D         	call	_fputs	;wreg free
  2058  0016A2                     l2038:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2061  0016A2  C013  F001         	movff	pad@buf,strlen@s
  2062  0016A6  C014  F002         	movff	pad@buf+1,strlen@s+1
  2063  0016AA  ECCD  F00D         	call	_strlen	;wreg free
  2064  0016AE  501A               	movf	pad@w^0,w,c
  2065  0016B0  2401               	addwf	?_strlen^0,w,c
  2066  0016B2  6E11               	movwf	?_pad^0,c
  2067  0016B4  501B               	movf	(pad@w+1)^0,w,c
  2068  0016B6  2002               	addwfc	(?_strlen+1)^0,w,c
  2069  0016B8  6E12               	movwf	(?_pad+1)^0,c
  2070  0016BA  0012               	return		;funcret
  2071  0016BC                     __end_of_pad:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _strlen *****************
  2075 ;; Defined at:
  2076 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2079 ;;		 -> dbuf(32), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2082 ;;		 -> dbuf(32), 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2    0[COMRAM] unsigned int 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2092 ;;      Params:         2       0       0       0       0       0       0       0       0
  2093 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2095 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2096 ;;Total ram usage:        4 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_pad
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text6
  2106  001B9A                     __ptext6:
  2107                           	callstack 0
  2108  001B9A                     _strlen:
  2109                           	callstack 25
  2110  001B9A  C001  F003         	movff	strlen@s,strlen@a
  2111  001B9E  C002  F004         	movff	strlen@s+1,strlen@a+1
  2112  001BA2  EFD5  F00D         	goto	l1934
  2113  001BA6                     l1932:
  2114  001BA6  4A01               	infsnz	strlen@s^0,f,c
  2115  001BA8  2A02               	incf	(strlen@s+1)^0,f,c
  2116  001BAA                     l1934:
  2117  001BAA  C001  FFD9         	movff	strlen@s,fsr2l
  2118  001BAE  C002  FFDA         	movff	strlen@s+1,fsr2h
  2119  001BB2  50DF               	movf	indf2,w,c
  2120  001BB4  A4D8               	btfss	status,2,c
  2121  001BB6  EFDF  F00D         	goto	u1351
  2122  001BBA  EFE1  F00D         	goto	u1350
  2123  001BBE                     u1351:
  2124  001BBE  EFD3  F00D         	goto	l1932
  2125  001BC2                     u1350:
  2126  001BC2  5003               	movf	strlen@a^0,w,c
  2127  001BC4  5C01               	subwf	strlen@s^0,w,c
  2128  001BC6  6E01               	movwf	?_strlen^0,c
  2129  001BC8  5004               	movf	(strlen@a+1)^0,w,c
  2130  001BCA  5802               	subwfb	(strlen@s+1)^0,w,c
  2131  001BCC  6E02               	movwf	(?_strlen+1)^0,c
  2132  001BCE  0012               	return		;funcret
  2133  001BD0                     __end_of_strlen:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _fputs *****************
  2137 ;; Defined at:
  2138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2141 ;;		 -> dbuf(32), 
  2142 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2143 ;;		 -> sprintf@f(11), 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  i               2   14[COMRAM] int 
  2146 ;;  c               1   13[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2    9[COMRAM] int 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         4       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2159 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 2
  2163 ;; This function calls:
  2164 ;;		_fputc
  2165 ;; This function is called by:
  2166 ;;		_pad
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171  001A62                     __ptext7:
  2172                           	callstack 0
  2173  001A62                     _fputs:
  2174                           	callstack 23
  2175  001A62  0E00               	movlw	0
  2176  001A64  6E10               	movwf	(fputs@i+1)^0,c
  2177  001A66  0E00               	movlw	0
  2178  001A68  6E0F               	movwf	fputs@i^0,c
  2179  001A6A  EF42  F00D         	goto	l1928
  2180  001A6E                     l1924:
  2181  001A6E  C00E  F001         	movff	fputs@c,fputc@c
  2182  001A72  6A02               	clrf	(fputc@c+1)^0,c
  2183  001A74  C00C  F003         	movff	fputs@fp,fputc@fp
  2184  001A78  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2185  001A7C  EC96  F00A         	call	_fputc	;wreg free
  2186  001A80  4A0F               	infsnz	fputs@i^0,f,c
  2187  001A82  2A10               	incf	(fputs@i+1)^0,f,c
  2188  001A84                     l1928:
  2189  001A84  500F               	movf	fputs@i^0,w,c
  2190  001A86  240A               	addwf	fputs@s^0,w,c
  2191  001A88  6ED9               	movwf	fsr2l,c
  2192  001A8A  5010               	movf	(fputs@i+1)^0,w,c
  2193  001A8C  200B               	addwfc	(fputs@s+1)^0,w,c
  2194  001A8E  6EDA               	movwf	fsr2h,c
  2195  001A90  50DF               	movf	indf2,w,c
  2196  001A92  6E0E               	movwf	fputs@c^0,c
  2197  001A94  500E               	movf	fputs@c^0,w,c
  2198  001A96  A4D8               	btfss	status,2,c
  2199  001A98  EF50  F00D         	goto	u1341
  2200  001A9C  EF52  F00D         	goto	u1340
  2201  001AA0                     u1341:
  2202  001AA0  EF37  F00D         	goto	l1924
  2203  001AA4                     u1340:
  2204  001AA4  0012               	return		;funcret
  2205  001AA6                     __end_of_fputs:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _fputc *****************
  2209 ;; Defined at:
  2210 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  c               2    0[COMRAM] int 
  2213 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2214 ;;		 -> sprintf@f(11), 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2    0[COMRAM] int 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         4       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        9 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		_putch
  2235 ;; This function is called by:
  2236 ;;		_pad
  2237 ;;		_vfpfcnvrt
  2238 ;;		_fputs
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text8
  2243  00152C                     __ptext8:
  2244                           	callstack 0
  2245  00152C                     _fputc:
  2246                           	callstack 26
  2247  00152C  5003               	movf	fputc@fp^0,w,c
  2248  00152E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2249  001530  B4D8               	btfsc	status,2,c
  2250  001532  EF9D  F00A         	goto	u1301
  2251  001536  EF9F  F00A         	goto	u1300
  2252  00153A                     u1301:
  2253  00153A  EFA8  F00A         	goto	l1912
  2254  00153E                     u1300:
  2255  00153E  5003               	movf	fputc@fp^0,w,c
  2256  001540  1004               	iorwf	(fputc@fp+1)^0,w,c
  2257  001542  A4D8               	btfss	status,2,c
  2258  001544  EFA6  F00A         	goto	u1311
  2259  001548  EFA8  F00A         	goto	u1310
  2260  00154C                     u1311:
  2261  00154C  EFAD  F00A         	goto	l1914
  2262  001550                     u1310:
  2263  001550                     l1912:
  2264  001550  5001               	movf	fputc@c^0,w,c
  2265  001552  EC64  F00E         	call	_putch
  2266  001556  EFFA  F00A         	goto	l1153
  2267  00155A                     l1914:
  2268  00155A  EE20 F009          	lfsr	2,9
  2269  00155E  5003               	movf	fputc@fp^0,w,c
  2270  001560  26D9               	addwf	fsr2l,f,c
  2271  001562  5004               	movf	(fputc@fp+1)^0,w,c
  2272  001564  22DA               	addwfc	fsr2h,f,c
  2273  001566  50DE               	movf	postinc2,w,c
  2274  001568  10DE               	iorwf	postinc2,w,c
  2275  00156A  B4D8               	btfsc	status,2,c
  2276  00156C  EFBA  F00A         	goto	u1321
  2277  001570  EFBC  F00A         	goto	u1320
  2278  001574                     u1321:
  2279  001574  EFD7  F00A         	goto	l1918
  2280  001578                     u1320:
  2281  001578  EE20 F009          	lfsr	2,9
  2282  00157C  5003               	movf	fputc@fp^0,w,c
  2283  00157E  26D9               	addwf	fsr2l,f,c
  2284  001580  5004               	movf	(fputc@fp+1)^0,w,c
  2285  001582  22DA               	addwfc	fsr2h,f,c
  2286  001584  EE10 F003          	lfsr	1,3
  2287  001588  5003               	movf	fputc@fp^0,w,c
  2288  00158A  26E1               	addwf	fsr1l,f,c
  2289  00158C  5004               	movf	(fputc@fp+1)^0,w,c
  2290  00158E  22E2               	addwfc	fsr1h,f,c
  2291  001590  50DE               	movf	postinc2,w,c
  2292  001592  5CE6               	subwf	postinc1,w,c
  2293  001594  50E6               	movf	postinc1,w,c
  2294  001596  0A80               	xorlw	128
  2295  001598  6E09               	movwf	(??_fputc+4)^0,c
  2296  00159A  50DE               	movf	postinc2,w,c
  2297  00159C  0A80               	xorlw	128
  2298  00159E  5809               	subwfb	(??_fputc+4)^0,w,c
  2299  0015A0  B0D8               	btfsc	status,0,c
  2300  0015A2  EFD5  F00A         	goto	u1331
  2301  0015A6  EFD7  F00A         	goto	u1330
  2302  0015AA                     u1331:
  2303  0015AA  EFFA  F00A         	goto	l1153
  2304  0015AE                     u1330:
  2305  0015AE                     l1918:
  2306  0015AE  EE20 F003          	lfsr	2,3
  2307  0015B2  5003               	movf	fputc@fp^0,w,c
  2308  0015B4  26D9               	addwf	fsr2l,f,c
  2309  0015B6  5004               	movf	(fputc@fp+1)^0,w,c
  2310  0015B8  22DA               	addwfc	fsr2h,f,c
  2311  0015BA  CFDE F005          	movff	postinc2,??_fputc
  2312  0015BE  CFDD F006          	movff	postdec2,??_fputc+1
  2313  0015C2  C003  FFD9         	movff	fputc@fp,fsr2l
  2314  0015C6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2315  0015CA  CFDE F007          	movff	postinc2,??_fputc+2
  2316  0015CE  CFDD F008          	movff	postdec2,??_fputc+3
  2317  0015D2  5005               	movf	??_fputc^0,w,c
  2318  0015D4  2407               	addwf	(??_fputc+2)^0,w,c
  2319  0015D6  6ED9               	movwf	fsr2l,c
  2320  0015D8  5006               	movf	(??_fputc+1)^0,w,c
  2321  0015DA  2008               	addwfc	(??_fputc+3)^0,w,c
  2322  0015DC  6EDA               	movwf	fsr2h,c
  2323  0015DE  C001  FFDF         	movff	fputc@c,indf2
  2324  0015E2  EE20 F003          	lfsr	2,3
  2325  0015E6  5003               	movf	fputc@fp^0,w,c
  2326  0015E8  26D9               	addwf	fsr2l,f,c
  2327  0015EA  5004               	movf	(fputc@fp+1)^0,w,c
  2328  0015EC  22DA               	addwfc	fsr2h,f,c
  2329  0015EE  2ADE               	incf	postinc2,f,c
  2330  0015F0  0E00               	movlw	0
  2331  0015F2  22DD               	addwfc	postdec2,f,c
  2332  0015F4                     l1153:
  2333  0015F4  0012               	return		;funcret
  2334  0015F6                     __end_of_fputc:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _putch *****************
  2338 ;; Defined at:
  2339 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  c               1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  c               1    0[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2356 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_fputc
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text9
  2367  001CC8                     __ptext9:
  2368                           	callstack 0
  2369  001CC8                     _putch:
  2370                           	callstack 26
  2371  001CC8  0012               	return		;funcret
  2372  001CCA                     __end_of_putch:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _abs *****************
  2376 ;; Defined at:
  2377 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  a               2   18[COMRAM] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   18[COMRAM] int 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         2       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_dtoa
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text10
  2405  001AA6                     __ptext10:
  2406                           	callstack 0
  2407  001AA6                     _abs:
  2408                           	callstack 26
  2409  001AA6  BE14               	btfsc	(abs@a+1)^0,7,c
  2410  001AA8  EF60  F00D         	goto	u1530
  2411  001AAC  5014               	movf	(abs@a+1)^0,w,c
  2412  001AAE  E106               	bnz	u1531
  2413  001AB0  0413               	decf	abs@a^0,w,c
  2414  001AB2  B0D8               	btfsc	status,0,c
  2415  001AB4  EF5E  F00D         	goto	u1531
  2416  001AB8  EF60  F00D         	goto	u1530
  2417  001ABC                     u1531:
  2418  001ABC  EF6E  F00D         	goto	l1138
  2419  001AC0                     u1530:
  2420  001AC0  C013  F015         	movff	abs@a,??_abs
  2421  001AC4  C014  F016         	movff	abs@a+1,??_abs+1
  2422  001AC8  1E15               	comf	??_abs^0,f,c
  2423  001ACA  1E16               	comf	(??_abs+1)^0,f,c
  2424  001ACC  4A15               	infsnz	??_abs^0,f,c
  2425  001ACE  2A16               	incf	(??_abs+1)^0,f,c
  2426  001AD0  C015  F013         	movff	??_abs,?_abs
  2427  001AD4  C016  F014         	movff	??_abs+1,?_abs+1
  2428  001AD8  EF72  F00D         	goto	l1141
  2429  001ADC                     l1138:
  2430  001ADC  C013  F013         	movff	abs@a,?_abs
  2431  001AE0  C014  F014         	movff	abs@a+1,?_abs+1
  2432  001AE4                     l1141:
  2433  001AE4  0012               	return		;funcret
  2434  001AE6                     __end_of_abs:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function ___aomod *****************
  2438 ;; Defined at:
  2439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  dividend        8    0[COMRAM] long long 
  2442 ;;  divisor         8    8[COMRAM] long long 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  sign            1   17[COMRAM] unsigned char 
  2445 ;;  counter         1   16[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  8    0[COMRAM] long long 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:        16       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:       18 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_dtoa
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text11
  2469  0012B4                     __ptext11:
  2470                           	callstack 0
  2471  0012B4                     ___aomod:
  2472                           	callstack 26
  2473  0012B4  0E00               	movlw	0
  2474  0012B6  6E12               	movwf	___aomod@sign^0,c
  2475  0012B8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2476  0012BA  EF63  F009         	goto	u1430
  2477  0012BE  EF61  F009         	goto	u1431
  2478  0012C2                     u1431:
  2479  0012C2  EF75  F009         	goto	l1992
  2480  0012C6                     u1430:
  2481  0012C6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2482  0012C8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2483  0012CA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2484  0012CC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2485  0012CE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2486  0012D0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2487  0012D2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2488  0012D4  6C01               	negf	___aomod@dividend^0,c
  2489  0012D6  0E00               	movlw	0
  2490  0012D8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2491  0012DA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2492  0012DC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2493  0012DE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2494  0012E0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2495  0012E2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2496  0012E4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2497  0012E6  0E01               	movlw	1
  2498  0012E8  6E12               	movwf	___aomod@sign^0,c
  2499  0012EA                     l1992:
  2500  0012EA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2501  0012EC  EF7C  F009         	goto	u1440
  2502  0012F0  EF7A  F009         	goto	u1441
  2503  0012F4                     u1441:
  2504  0012F4  EF8C  F009         	goto	l1996
  2505  0012F8                     u1440:
  2506  0012F8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2507  0012FA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2508  0012FC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2509  0012FE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2510  001300  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2511  001302  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2512  001304  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2513  001306  6C09               	negf	___aomod@divisor^0,c
  2514  001308  0E00               	movlw	0
  2515  00130A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2516  00130C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2517  00130E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2518  001310  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2519  001312  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2520  001314  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2521  001316  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2522  001318                     l1996:
  2523  001318  5009               	movf	___aomod@divisor^0,w,c
  2524  00131A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2525  00131C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2526  00131E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2527  001320  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2528  001322  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2529  001324  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2530  001326  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2531  001328  B4D8               	btfsc	status,2,c
  2532  00132A  EF99  F009         	goto	u1451
  2533  00132E  EF9B  F009         	goto	u1450
  2534  001332                     u1451:
  2535  001332  EFE3  F009         	goto	l2012
  2536  001336                     u1450:
  2537  001336  0E01               	movlw	1
  2538  001338  6E11               	movwf	___aomod@counter^0,c
  2539  00133A  EFA9  F009         	goto	l2002
  2540  00133E                     l2000:
  2541  00133E  90D8               	bcf	status,0,c
  2542  001340  3609               	rlcf	___aomod@divisor^0,f,c
  2543  001342  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2544  001344  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2545  001346  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2546  001348  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2547  00134A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2548  00134C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2549  00134E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2550  001350  2A11               	incf	___aomod@counter^0,f,c
  2551  001352                     l2002:
  2552  001352  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2553  001354  EFAE  F009         	goto	u1461
  2554  001358  EFB0  F009         	goto	u1460
  2555  00135C                     u1461:
  2556  00135C  EF9F  F009         	goto	l2000
  2557  001360                     u1460:
  2558  001360                     l2004:
  2559  001360  5009               	movf	___aomod@divisor^0,w,c
  2560  001362  5C01               	subwf	___aomod@dividend^0,w,c
  2561  001364  500A               	movf	(___aomod@divisor+1)^0,w,c
  2562  001366  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2563  001368  500B               	movf	(___aomod@divisor+2)^0,w,c
  2564  00136A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2565  00136C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2566  00136E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2567  001370  500D               	movf	(___aomod@divisor+4)^0,w,c
  2568  001372  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2569  001374  500E               	movf	(___aomod@divisor+5)^0,w,c
  2570  001376  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2571  001378  500F               	movf	(___aomod@divisor+6)^0,w,c
  2572  00137A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2573  00137C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2574  00137E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2575  001380  A0D8               	btfss	status,0,c
  2576  001382  EFC5  F009         	goto	u1471
  2577  001386  EFC7  F009         	goto	u1470
  2578  00138A                     u1471:
  2579  00138A  EFD7  F009         	goto	l2008
  2580  00138E                     u1470:
  2581  00138E  5009               	movf	___aomod@divisor^0,w,c
  2582  001390  5E01               	subwf	___aomod@dividend^0,f,c
  2583  001392  500A               	movf	(___aomod@divisor+1)^0,w,c
  2584  001394  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2585  001396  500B               	movf	(___aomod@divisor+2)^0,w,c
  2586  001398  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2587  00139A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2588  00139C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2589  00139E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2590  0013A0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2591  0013A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2592  0013A4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2593  0013A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2594  0013A8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2595  0013AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2596  0013AC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2597  0013AE                     l2008:
  2598  0013AE  90D8               	bcf	status,0,c
  2599  0013B0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2600  0013B2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2601  0013B4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2602  0013B6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2603  0013B8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2604  0013BA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2605  0013BC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2606  0013BE  3209               	rrcf	___aomod@divisor^0,f,c
  2607  0013C0  2E11               	decfsz	___aomod@counter^0,f,c
  2608  0013C2  EFB0  F009         	goto	l2004
  2609  0013C6                     l2012:
  2610  0013C6  5012               	movf	___aomod@sign^0,w,c
  2611  0013C8  B4D8               	btfsc	status,2,c
  2612  0013CA  EFE9  F009         	goto	u1481
  2613  0013CE  EFEB  F009         	goto	u1480
  2614  0013D2                     u1481:
  2615  0013D2  EFFB  F009         	goto	l2016
  2616  0013D6                     u1480:
  2617  0013D6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2618  0013D8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2619  0013DA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2620  0013DC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2621  0013DE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2622  0013E0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2623  0013E2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2624  0013E4  6C01               	negf	___aomod@dividend^0,c
  2625  0013E6  0E00               	movlw	0
  2626  0013E8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2627  0013EA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2628  0013EC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2629  0013EE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2630  0013F0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2631  0013F2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2632  0013F4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2633  0013F6                     l2016:
  2634  0013F6  C001  F001         	movff	___aomod@dividend,?___aomod
  2635  0013FA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2636  0013FE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2637  001402  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2638  001406  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2639  00140A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2640  00140E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2641  001412  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2642  001416  0012               	return		;funcret
  2643  001418                     __end_of___aomod:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function ___aodiv *****************
  2647 ;; Defined at:
  2648 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  dividend        8    0[COMRAM] long long 
  2651 ;;  divisor         8    8[COMRAM] long long 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  quotient        8   18[COMRAM] long long 
  2654 ;;  sign            1   17[COMRAM] unsigned char 
  2655 ;;  counter         1   16[COMRAM] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  8    0[COMRAM] long long 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2665 ;;      Params:        16       0       0       0       0       0       0       0       0
  2666 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:       26 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_dtoa
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text12
  2679  00112C                     __ptext12:
  2680                           	callstack 0
  2681  00112C                     ___aodiv:
  2682                           	callstack 26
  2683  00112C  0E00               	movlw	0
  2684  00112E  6E12               	movwf	___aodiv@sign^0,c
  2685  001130  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2686  001132  EF9F  F008         	goto	u1360
  2687  001136  EF9D  F008         	goto	u1361
  2688  00113A                     u1361:
  2689  00113A  EFB1  F008         	goto	l1948
  2690  00113E                     u1360:
  2691  00113E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2692  001140  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2693  001142  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2694  001144  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2695  001146  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2696  001148  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2697  00114A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2698  00114C  6C09               	negf	___aodiv@divisor^0,c
  2699  00114E  0E00               	movlw	0
  2700  001150  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2701  001152  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2702  001154  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2703  001156  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2704  001158  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2705  00115A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2706  00115C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2707  00115E  0E01               	movlw	1
  2708  001160  6E12               	movwf	___aodiv@sign^0,c
  2709  001162                     l1948:
  2710  001162  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2711  001164  EFB8  F008         	goto	u1370
  2712  001168  EFB6  F008         	goto	u1371
  2713  00116C                     u1371:
  2714  00116C  EFCA  F008         	goto	l1954
  2715  001170                     u1370:
  2716  001170  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2717  001172  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2718  001174  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2719  001176  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2720  001178  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2721  00117A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2722  00117C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2723  00117E  6C01               	negf	___aodiv@dividend^0,c
  2724  001180  0E00               	movlw	0
  2725  001182  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2726  001184  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2727  001186  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2728  001188  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2729  00118A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2730  00118C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2731  00118E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2732  001190  0E01               	movlw	1
  2733  001192  1A12               	xorwf	___aodiv@sign^0,f,c
  2734  001194                     l1954:
  2735  001194  EE20  F013         	lfsr	2,___aodiv@quotient
  2736  001198  0E07               	movlw	7
  2737  00119A                     u1381:
  2738  00119A  6ADE               	clrf	postinc2,c
  2739  00119C  06E8               	decf	wreg,f,c
  2740  00119E  E2FD               	bc	u1381
  2741  0011A0  5009               	movf	___aodiv@divisor^0,w,c
  2742  0011A2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2743  0011A4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2744  0011A6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2745  0011A8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2746  0011AA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2747  0011AC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2748  0011AE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2749  0011B0  B4D8               	btfsc	status,2,c
  2750  0011B2  EFDD  F008         	goto	u1391
  2751  0011B6  EFDF  F008         	goto	u1390
  2752  0011BA                     u1391:
  2753  0011BA  EF31  F009         	goto	l1976
  2754  0011BE                     u1390:
  2755  0011BE  0E01               	movlw	1
  2756  0011C0  6E11               	movwf	___aodiv@counter^0,c
  2757  0011C2  EFED  F008         	goto	l1962
  2758  0011C6                     l1960:
  2759  0011C6  90D8               	bcf	status,0,c
  2760  0011C8  3609               	rlcf	___aodiv@divisor^0,f,c
  2761  0011CA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2762  0011CC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2763  0011CE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2764  0011D0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2765  0011D2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2766  0011D4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2767  0011D6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2768  0011D8  2A11               	incf	___aodiv@counter^0,f,c
  2769  0011DA                     l1962:
  2770  0011DA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2771  0011DC  EFF2  F008         	goto	u1401
  2772  0011E0  EFF4  F008         	goto	u1400
  2773  0011E4                     u1401:
  2774  0011E4  EFE3  F008         	goto	l1960
  2775  0011E8                     u1400:
  2776  0011E8                     l1964:
  2777  0011E8  90D8               	bcf	status,0,c
  2778  0011EA  3613               	rlcf	___aodiv@quotient^0,f,c
  2779  0011EC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2780  0011EE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2781  0011F0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2782  0011F2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2783  0011F4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2784  0011F6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2785  0011F8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2786  0011FA  5009               	movf	___aodiv@divisor^0,w,c
  2787  0011FC  5C01               	subwf	___aodiv@dividend^0,w,c
  2788  0011FE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2789  001200  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2790  001202  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2791  001204  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2792  001206  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2793  001208  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2794  00120A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2795  00120C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2796  00120E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2797  001210  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2798  001212  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2799  001214  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2800  001216  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2801  001218  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2802  00121A  A0D8               	btfss	status,0,c
  2803  00121C  EF12  F009         	goto	u1411
  2804  001220  EF14  F009         	goto	u1410
  2805  001224                     u1411:
  2806  001224  EF25  F009         	goto	l1972
  2807  001228                     u1410:
  2808  001228  5009               	movf	___aodiv@divisor^0,w,c
  2809  00122A  5E01               	subwf	___aodiv@dividend^0,f,c
  2810  00122C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2811  00122E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2812  001230  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2813  001232  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2814  001234  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2815  001236  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2816  001238  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2817  00123A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2818  00123C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2819  00123E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2820  001240  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2821  001242  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2822  001244  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2823  001246  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2824  001248  8013               	bsf	___aodiv@quotient^0,0,c
  2825  00124A                     l1972:
  2826  00124A  90D8               	bcf	status,0,c
  2827  00124C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2828  00124E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2829  001250  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2830  001252  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2831  001254  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2832  001256  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2833  001258  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2834  00125A  3209               	rrcf	___aodiv@divisor^0,f,c
  2835  00125C  2E11               	decfsz	___aodiv@counter^0,f,c
  2836  00125E  EFF4  F008         	goto	l1964
  2837  001262                     l1976:
  2838  001262  5012               	movf	___aodiv@sign^0,w,c
  2839  001264  B4D8               	btfsc	status,2,c
  2840  001266  EF37  F009         	goto	u1421
  2841  00126A  EF39  F009         	goto	u1420
  2842  00126E                     u1421:
  2843  00126E  EF49  F009         	goto	l1980
  2844  001272                     u1420:
  2845  001272  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2846  001274  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2847  001276  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2848  001278  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2849  00127A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2850  00127C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2851  00127E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2852  001280  6C13               	negf	___aodiv@quotient^0,c
  2853  001282  0E00               	movlw	0
  2854  001284  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2855  001286  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2856  001288  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2857  00128A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2858  00128C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2859  00128E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2860  001290  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2861  001292                     l1980:
  2862  001292  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2863  001296  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2864  00129A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2865  00129E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2866  0012A2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2867  0012A6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2868  0012AA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2869  0012AE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2870  0012B2  0012               	return		;funcret
  2871  0012B4                     __end_of___aodiv:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _TemperaturaDigitada *****************
  2875 ;; Defined at:
  2876 ;;		line 103 in file "Main_Invernadero.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  prmTemperatu    2    6[COMRAM] PTR unsigned char 
  2879 ;;		 -> main@Hume(2), main@Tempe(2), 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  Decena          2   13[COMRAM] int 
  2882 ;;  Resultado       2   11[COMRAM] int 
  2883 ;;  Unidad          2    9[COMRAM] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    6[COMRAM] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         2       0       0       0       0       0       0       0       0
  2894 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        9 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 1
  2900 ;; This function calls:
  2901 ;;		___wmul
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text13
  2908  00173A                     __ptext13:
  2909                           	callstack 0
  2910  00173A                     _TemperaturaDigitada:
  2911                           	callstack 29
  2912  00173A                     
  2913                           ;Main_Invernadero.c: 105:     int Unidad = 0;
  2914  00173A  0E00               	movlw	0
  2915  00173C  6E0B               	movwf	(TemperaturaDigitada@Unidad+1)^0,c
  2916  00173E  0E00               	movlw	0
  2917  001740  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2918                           
  2919                           ;Main_Invernadero.c: 106:     int Resultado=0;
  2920  001742  0E00               	movlw	0
  2921  001744  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2922  001746  0E00               	movlw	0
  2923  001748  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2924  00174A                     
  2925                           ;Main_Invernadero.c: 107:     Decena = prmTemperatura[0]-'0';
  2926  00174A  C007  FFD9         	movff	TemperaturaDigitada@prmTemperatura,fsr2l
  2927  00174E  C008  FFDA         	movff	TemperaturaDigitada@prmTemperatura+1,fsr2h
  2928  001752  50DF               	movf	indf2,w,c
  2929  001754  6E09               	movwf	??_TemperaturaDigitada^0,c
  2930  001756  0ED0               	movlw	208
  2931  001758  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2932  00175A  6E0E               	movwf	TemperaturaDigitada@Decena^0,c
  2933  00175C  6A0F               	clrf	(TemperaturaDigitada@Decena+1)^0,c
  2934  00175E  0EFF               	movlw	255
  2935  001760  220F               	addwfc	(TemperaturaDigitada@Decena+1)^0,f,c
  2936  001762                     
  2937                           ;Main_Invernadero.c: 108:     Unidad = prmTemperatura[1]-'0';
  2938  001762  EE20 F001          	lfsr	2,1
  2939  001766  5007               	movf	TemperaturaDigitada@prmTemperatura^0,w,c
  2940  001768  26D9               	addwf	fsr2l,f,c
  2941  00176A  5008               	movf	(TemperaturaDigitada@prmTemperatura+1)^0,w,c
  2942  00176C  22DA               	addwfc	fsr2h,f,c
  2943  00176E  50DF               	movf	indf2,w,c
  2944  001770  6E09               	movwf	??_TemperaturaDigitada^0,c
  2945  001772  0ED0               	movlw	208
  2946  001774  2409               	addwf	??_TemperaturaDigitada^0,w,c
  2947  001776  6E0A               	movwf	TemperaturaDigitada@Unidad^0,c
  2948  001778  6A0B               	clrf	(TemperaturaDigitada@Unidad+1)^0,c
  2949  00177A  0EFF               	movlw	255
  2950  00177C  220B               	addwfc	(TemperaturaDigitada@Unidad+1)^0,f,c
  2951  00177E                     
  2952                           ;Main_Invernadero.c: 110:     Decena = Decena * 10;
  2953  00177E  C00E  F001         	movff	TemperaturaDigitada@Decena,___wmul@multiplier
  2954  001782  C00F  F002         	movff	TemperaturaDigitada@Decena+1,___wmul@multiplier+1
  2955  001786  0E00               	movlw	0
  2956  001788  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2957  00178A  0E0A               	movlw	10
  2958  00178C  6E03               	movwf	___wmul@multiplicand^0,c
  2959  00178E  EC2D  F00E         	call	___wmul	;wreg free
  2960  001792  C001  F00E         	movff	?___wmul,TemperaturaDigitada@Decena
  2961  001796  C002  F00F         	movff	?___wmul+1,TemperaturaDigitada@Decena+1
  2962  00179A                     
  2963                           ;Main_Invernadero.c: 111:     Resultado = Decena + Unidad;
  2964  00179A  500A               	movf	TemperaturaDigitada@Unidad^0,w,c
  2965  00179C  240E               	addwf	TemperaturaDigitada@Decena^0,w,c
  2966  00179E  6E0C               	movwf	TemperaturaDigitada@Resultado^0,c
  2967  0017A0  500B               	movf	(TemperaturaDigitada@Unidad+1)^0,w,c
  2968  0017A2  200F               	addwfc	(TemperaturaDigitada@Decena+1)^0,w,c
  2969  0017A4  6E0D               	movwf	(TemperaturaDigitada@Resultado+1)^0,c
  2970  0017A6                     
  2971                           ;Main_Invernadero.c: 113:     return Resultado;
  2972  0017A6  C00C  F007         	movff	TemperaturaDigitada@Resultado,?_TemperaturaDigitada
  2973  0017AA  C00D  F008         	movff	TemperaturaDigitada@Resultado+1,?_TemperaturaDigitada+1
  2974  0017AE  0012               	return		;funcret
  2975  0017B0                     __end_of_TemperaturaDigitada:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function ___wmul *****************
  2979 ;; Defined at:
  2980 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  multiplier      2    0[COMRAM] unsigned int 
  2983 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  product         2    4[COMRAM] unsigned int 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  2    0[COMRAM] unsigned int 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, prodl, prodh
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         4       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:        6 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_TemperaturaDigitada
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text14
  3009  001C5A                     __ptext14:
  3010                           	callstack 0
  3011  001C5A                     ___wmul:
  3012                           	callstack 29
  3013  001C5A  5001               	movf	___wmul@multiplier^0,w,c
  3014  001C5C  0203               	mulwf	___wmul@multiplicand^0,c
  3015  001C5E  CFF3 F005          	movff	prodl,___wmul@product
  3016  001C62  CFF4 F006          	movff	prodh,___wmul@product+1
  3017  001C66  5001               	movf	___wmul@multiplier^0,w,c
  3018  001C68  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3019  001C6A  50F3               	movf	243,w,c
  3020  001C6C  2606               	addwf	(___wmul@product+1)^0,f,c
  3021  001C6E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3022  001C70  0203               	mulwf	___wmul@multiplicand^0,c
  3023  001C72  50F3               	movf	243,w,c
  3024  001C74  2606               	addwf	(___wmul@product+1)^0,f,c
  3025  001C76  C005  F001         	movff	___wmul@product,?___wmul
  3026  001C7A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3027  001C7E  0012               	return		;funcret
  3028  001C80                     __end_of___wmul:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _PedirDato *****************
  3032 ;; Defined at:
  3033 ;;		line 130 in file "Main_Invernadero.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  Etiqueta        2    9[COMRAM] PTR unsigned char 
  3036 ;;		 -> STR_2(13), STR_1(14), 
  3037 ;;  vecLlenar       2   11[COMRAM] PTR unsigned char 
  3038 ;;		 -> main@Hume(2), main@Tempe(2), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  i               2   16[COMRAM] int 
  3041 ;;  tecla           1   15[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         4       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        9 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 3
  3058 ;; This function calls:
  3059 ;;		_LCD_Char
  3060 ;;		_LCD_Clear
  3061 ;;		_LCD_Command
  3062 ;;		_LCD_String_xy
  3063 ;;		_keyfind
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text15
  3070  0016BC                     __ptext15:
  3071                           	callstack 0
  3072  0016BC                     _PedirDato:
  3073                           	callstack 27
  3074  0016BC                     
  3075                           ;Main_Invernadero.c: 131:      LCD_Clear();
  3076  0016BC  EC18  F00E         	call	_LCD_Clear	;wreg free
  3077  0016C0                     
  3078                           ;Main_Invernadero.c: 133:      unsigned char tecla;;Main_Invernadero.c: 134:      LCD_St
      +                          ring_xy(0,0,Etiqueta);
  3079  0016C0  0E00               	movlw	0
  3080  0016C2  6E05               	movwf	LCD_String_xy@pos^0,c
  3081  0016C4  C00A  F006         	movff	PedirDato@Etiqueta,LCD_String_xy@msg
  3082  0016C8  C00B  F007         	movff	PedirDato@Etiqueta+1,LCD_String_xy@msg+1
  3083  0016CC  0E00               	movlw	0
  3084  0016CE  EC73  F00D         	call	_LCD_String_xy
  3085  0016D2                     
  3086                           ;Main_Invernadero.c: 135:      LCD_Command(0xC0);
  3087  0016D2  0EC0               	movlw	192
  3088  0016D4  ECE2  F00C         	call	_LCD_Command
  3089  0016D8                     
  3090                           ;Main_Invernadero.c: 136:      for(int i=0 ; i < 2 ; i++){
  3091  0016D8  0E00               	movlw	0
  3092  0016DA  6E12               	movwf	(PedirDato@i+1)^0,c
  3093  0016DC  0E00               	movlw	0
  3094  0016DE  6E11               	movwf	PedirDato@i^0,c
  3095  0016E0                     l2404:
  3096                           
  3097                           ;Main_Invernadero.c: 137:      tecla=keyfind();
  3098  0016E0  ECA4  F006         	call	_keyfind	;wreg free
  3099  0016E4  6E10               	movwf	PedirDato@tecla^0,c
  3100  0016E6                     
  3101                           ;Main_Invernadero.c: 138:      LCD_Char(tecla);
  3102  0016E6  5010               	movf	PedirDato@tecla^0,w,c
  3103  0016E8  ECBA  F00C         	call	_LCD_Char
  3104  0016EC                     
  3105                           ;Main_Invernadero.c: 139:      vecLlenar[i] = tecla;
  3106  0016EC  5011               	movf	PedirDato@i^0,w,c
  3107  0016EE  240C               	addwf	PedirDato@vecLlenar^0,w,c
  3108  0016F0  6ED9               	movwf	fsr2l,c
  3109  0016F2  5012               	movf	(PedirDato@i+1)^0,w,c
  3110  0016F4  200D               	addwfc	(PedirDato@vecLlenar+1)^0,w,c
  3111  0016F6  6EDA               	movwf	fsr2h,c
  3112  0016F8  C010  FFDF         	movff	PedirDato@tecla,indf2
  3113  0016FC                     
  3114                           ;Main_Invernadero.c: 140:      }
  3115  0016FC  4A11               	infsnz	PedirDato@i^0,f,c
  3116  0016FE  2A12               	incf	(PedirDato@i+1)^0,f,c
  3117  001700  BE12               	btfsc	(PedirDato@i+1)^0,7,c
  3118  001702  EF8C  F00B         	goto	u2041
  3119  001706  5012               	movf	(PedirDato@i+1)^0,w,c
  3120  001708  E109               	bnz	u2040
  3121  00170A  0E02               	movlw	2
  3122  00170C  5C11               	subwf	PedirDato@i^0,w,c
  3123  00170E  A0D8               	btfss	status,0,c
  3124  001710  EF8C  F00B         	goto	u2041
  3125  001714  EF8E  F00B         	goto	u2040
  3126  001718                     u2041:
  3127  001718  EF70  F00B         	goto	l2404
  3128  00171C                     u2040:
  3129  00171C                     
  3130                           ;Main_Invernadero.c: 141:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3131  00171C  0E02               	movlw	2
  3132  00171E  6E0F               	movwf	(??_PedirDato+1)^0,c
  3133  001720  0E04               	movlw	4
  3134  001722  6E0E               	movwf	??_PedirDato^0,c
  3135  001724  0EBA               	movlw	186
  3136  001726                     u2377:
  3137  001726  2EE8               	decfsz	wreg,f,c
  3138  001728  D7FE               	bra	u2377
  3139  00172A  2E0E               	decfsz	??_PedirDato^0,f,c
  3140  00172C  D7FC               	bra	u2377
  3141  00172E  2E0F               	decfsz	(??_PedirDato+1)^0,f,c
  3142  001730  D7FA               	bra	u2377
  3143  001732  D000               	nop2	
  3144  001734                     
  3145                           ;Main_Invernadero.c: 142:      LCD_Clear();
  3146  001734  EC18  F00E         	call	_LCD_Clear	;wreg free
  3147  001738  0012               	return		;funcret
  3148  00173A                     __end_of_PedirDato:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _keyfind *****************
  3152 ;; Defined at:
  3153 ;;		line 174 in file "keypad.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  temp1           1    0        unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      unsigned char 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3169 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3170 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3171 ;;Total ram usage:        1 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_PedirDato
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text16
  3181  000D48                     __ptext16:
  3182                           	callstack 0
  3183  000D48                     _keyfind:
  3184                           	callstack 29
  3185  000D48                     
  3186                           ;keypad.c: 177:     TRISB = 0xf0;
  3187  000D48  0EF0               	movlw	240
  3188  000D4A  6E93               	movwf	147,c	;volatile
  3189                           
  3190                           ;keypad.c: 178:     unsigned char temp1;;keypad.c: 180:         LATB = 0xf0;
  3191  000D4C  0EF0               	movlw	240
  3192  000D4E  6E8A               	movwf	138,c	;volatile
  3193  000D50                     l2222:
  3194                           
  3195                           ;keypad.c: 184:         {;keypad.c: 186:             col_loc = PORTB & 0xf0;
  3196  000D50  5081               	movf	129,w,c	;volatile
  3197  000D52  0BF0               	andlw	240
  3198  000D54  0100               	movlb	0	; () banked
  3199  000D56  6F6A               	movwf	_col_loc& (0+255),b
  3200  000D58                     
  3201                           ; BSR set to: 0
  3202                           ;keypad.c: 188:         }while(col_loc!=0xf0);
  3203  000D58  0EF0               	movlw	240
  3204  000D5A  196A               	xorwf	_col_loc& (0+255),w,b
  3205  000D5C  A4D8               	btfss	status,2,c
  3206  000D5E  EFB3  F006         	goto	u1771
  3207  000D62  EFB5  F006         	goto	u1770
  3208  000D66                     u1771:
  3209  000D66  EFA8  F006         	goto	l2222
  3210  000D6A                     u1770:
  3211  000D6A                     
  3212                           ; BSR set to: 0
  3213                           ;keypad.c: 189:          col_loc = PORTB & 0xf0;
  3214  000D6A  5081               	movf	129,w,c	;volatile
  3215  000D6C  0BF0               	andlw	240
  3216  000D6E  6F6A               	movwf	_col_loc& (0+255),b
  3217                           
  3218                           ;keypad.c: 190:       }while(col_loc!=0xf0);
  3219  000D70  0EF0               	movlw	240
  3220  000D72  196A               	xorwf	_col_loc& (0+255),w,b
  3221  000D74  A4D8               	btfss	status,2,c
  3222  000D76  EFBF  F006         	goto	u1781
  3223  000D7A  EFC1  F006         	goto	u1780
  3224  000D7E                     u1781:
  3225  000D7E  EFA8  F006         	goto	l2222
  3226  000D82                     u1780:
  3227  000D82                     
  3228                           ; BSR set to: 0
  3229                           ;keypad.c: 192:       _delay((unsigned long)((30)*(8000000/4000.0)));
  3230  000D82  0E4E               	movlw	78
  3231  000D84  6E01               	movwf	??_keyfind^0,c
  3232  000D86  0EEB               	movlw	235
  3233  000D88                     u2387:
  3234  000D88  2EE8               	decfsz	wreg,f,c
  3235  000D8A  D7FE               	bra	u2387
  3236  000D8C  2E01               	decfsz	??_keyfind^0,f,c
  3237  000D8E  D7FC               	bra	u2387
  3238  000D90  F000               	nop	
  3239  000D92                     
  3240                           ;keypad.c: 193:         LATB = 0xf0;
  3241  000D92  0EF0               	movlw	240
  3242  000D94  6E8A               	movwf	138,c	;volatile
  3243  000D96                     l2232:
  3244                           
  3245                           ;keypad.c: 197:             {;keypad.c: 199:                 col_loc = PORTB & 0xf0;
  3246  000D96  5081               	movf	129,w,c	;volatile
  3247  000D98  0BF0               	andlw	240
  3248  000D9A  0100               	movlb	0	; () banked
  3249  000D9C  6F6A               	movwf	_col_loc& (0+255),b
  3250  000D9E                     
  3251                           ; BSR set to: 0
  3252                           ;keypad.c: 200:             }while(col_loc==0xf0);
  3253  000D9E  0EF0               	movlw	240
  3254  000DA0  196A               	xorwf	_col_loc& (0+255),w,b
  3255  000DA2  B4D8               	btfsc	status,2,c
  3256  000DA4  EFD6  F006         	goto	u1791
  3257  000DA8  EFD8  F006         	goto	u1790
  3258  000DAC                     u1791:
  3259  000DAC  EFCB  F006         	goto	l2232
  3260  000DB0                     u1790:
  3261  000DB0                     
  3262                           ; BSR set to: 0
  3263                           ;keypad.c: 201:          col_loc = PORTB & 0xf0;
  3264  000DB0  5081               	movf	129,w,c	;volatile
  3265  000DB2  0BF0               	andlw	240
  3266  000DB4  6F6A               	movwf	_col_loc& (0+255),b
  3267                           
  3268                           ;keypad.c: 202:         }while(col_loc==0xf0);
  3269  000DB6  0EF0               	movlw	240
  3270  000DB8  196A               	xorwf	_col_loc& (0+255),w,b
  3271  000DBA  B4D8               	btfsc	status,2,c
  3272  000DBC  EFE2  F006         	goto	u1801
  3273  000DC0  EFE4  F006         	goto	u1800
  3274  000DC4                     u1801:
  3275  000DC4  EFCB  F006         	goto	l2232
  3276  000DC8                     u1800:
  3277  000DC8                     
  3278                           ; BSR set to: 0
  3279                           ;keypad.c: 204:         _delay((unsigned long)((30)*(8000000/4000.0)));
  3280  000DC8  0E4E               	movlw	78
  3281  000DCA  6E01               	movwf	??_keyfind^0,c
  3282  000DCC  0EEB               	movlw	235
  3283  000DCE                     u2397:
  3284  000DCE  2EE8               	decfsz	wreg,f,c
  3285  000DD0  D7FE               	bra	u2397
  3286  000DD2  2E01               	decfsz	??_keyfind^0,f,c
  3287  000DD4  D7FC               	bra	u2397
  3288  000DD6  F000               	nop	
  3289  000DD8                     
  3290                           ;keypad.c: 206:         col_loc = PORTB & 0xf0;
  3291  000DD8  5081               	movf	129,w,c	;volatile
  3292  000DDA  0BF0               	andlw	240
  3293  000DDC  0100               	movlb	0	; () banked
  3294  000DDE  6F6A               	movwf	_col_loc& (0+255),b
  3295  000DE0                     l2242:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;keypad.c: 211:     {;keypad.c: 212:         LATB = 0xfe;
  3299  000DE0  0EFE               	movlw	254
  3300  000DE2  6E8A               	movwf	138,c	;volatile
  3301  000DE4                     
  3302                           ; BSR set to: 0
  3303                           ;keypad.c: 213:         col_loc = PORTB & 0xf0;
  3304  000DE4  5081               	movf	129,w,c	;volatile
  3305  000DE6  0BF0               	andlw	240
  3306  000DE8  6F6A               	movwf	_col_loc& (0+255),b
  3307  000DEA                     
  3308                           ; BSR set to: 0
  3309                           ;keypad.c: 214:         temp_col=col_loc;
  3310  000DEA  C06A  F068         	movff	_col_loc,_temp_col
  3311  000DEE                     
  3312                           ; BSR set to: 0
  3313                           ;keypad.c: 215:         if(col_loc!=0xf0)
  3314  000DEE  0EF0               	movlw	240
  3315  000DF0  196A               	xorwf	_col_loc& (0+255),w,b
  3316  000DF2  B4D8               	btfsc	status,2,c
  3317  000DF4  EFFE  F006         	goto	u1811
  3318  000DF8  EF00  F007         	goto	u1810
  3319  000DFC                     u1811:
  3320  000DFC  EF12  F007         	goto	l2254
  3321  000E00                     u1810:
  3322  000E00                     
  3323                           ; BSR set to: 0
  3324                           ;keypad.c: 216:         {;keypad.c: 217:             rowloc=0;
  3325  000E00  0E00               	movlw	0
  3326  000E02  6F69               	movwf	_rowloc& (0+255),b
  3327                           
  3328                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3329  000E04  EF07  F007         	goto	l214
  3330  000E08                     l2252:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;keypad.c: 219:             {;keypad.c: 220:                 temp_col = PORTB & 0xf0;
  3334  000E08  5081               	movf	129,w,c	;volatile
  3335  000E0A  0BF0               	andlw	240
  3336  000E0C  6F68               	movwf	_temp_col& (0+255),b
  3337  000E0E                     l214:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;keypad.c: 218:             while(temp_col!=0xf0)
  3341  000E0E  0EF0               	movlw	240
  3342  000E10  1968               	xorwf	_temp_col& (0+255),w,b
  3343  000E12  A4D8               	btfss	status,2,c
  3344  000E14  EF0E  F007         	goto	u1821
  3345  000E18  EF10  F007         	goto	u1820
  3346  000E1C                     u1821:
  3347  000E1C  EF04  F007         	goto	l2252
  3348  000E20                     u1820:
  3349  000E20  EF76  F007         	goto	l2290
  3350  000E24                     l2254:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;keypad.c: 225:         LATB = 0xfd;
  3354  000E24  0EFD               	movlw	253
  3355  000E26  6E8A               	movwf	138,c	;volatile
  3356  000E28                     
  3357                           ; BSR set to: 0
  3358                           ;keypad.c: 226:         col_loc = PORTB & 0xf0;
  3359  000E28  5081               	movf	129,w,c	;volatile
  3360  000E2A  0BF0               	andlw	240
  3361  000E2C  6F6A               	movwf	_col_loc& (0+255),b
  3362  000E2E                     
  3363                           ; BSR set to: 0
  3364                           ;keypad.c: 227:         temp_col=col_loc;
  3365  000E2E  C06A  F068         	movff	_col_loc,_temp_col
  3366  000E32                     
  3367                           ; BSR set to: 0
  3368                           ;keypad.c: 228:         if(col_loc!=0xf0)
  3369  000E32  0EF0               	movlw	240
  3370  000E34  196A               	xorwf	_col_loc& (0+255),w,b
  3371  000E36  B4D8               	btfsc	status,2,c
  3372  000E38  EF20  F007         	goto	u1831
  3373  000E3C  EF22  F007         	goto	u1830
  3374  000E40                     u1831:
  3375  000E40  EF34  F007         	goto	l2266
  3376  000E44                     u1830:
  3377  000E44                     
  3378                           ; BSR set to: 0
  3379                           ;keypad.c: 229:         {;keypad.c: 230:             rowloc=1;
  3380  000E44  0E01               	movlw	1
  3381  000E46  6F69               	movwf	_rowloc& (0+255),b
  3382                           
  3383                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3384  000E48  EF29  F007         	goto	l219
  3385  000E4C                     l2264:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;keypad.c: 232:             {;keypad.c: 233:                 temp_col = PORTB & 0xf0;
  3389  000E4C  5081               	movf	129,w,c	;volatile
  3390  000E4E  0BF0               	andlw	240
  3391  000E50  6F68               	movwf	_temp_col& (0+255),b
  3392  000E52                     l219:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;keypad.c: 231:             while(temp_col!=0xf0)
  3396  000E52  0EF0               	movlw	240
  3397  000E54  1968               	xorwf	_temp_col& (0+255),w,b
  3398  000E56  A4D8               	btfss	status,2,c
  3399  000E58  EF30  F007         	goto	u1841
  3400  000E5C  EF32  F007         	goto	u1840
  3401  000E60                     u1841:
  3402  000E60  EF26  F007         	goto	l2264
  3403  000E64                     u1840:
  3404  000E64  EF76  F007         	goto	l2290
  3405  000E68                     l2266:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;keypad.c: 238:         LATB = 0xfb;
  3409  000E68  0EFB               	movlw	251
  3410  000E6A  6E8A               	movwf	138,c	;volatile
  3411  000E6C                     
  3412                           ; BSR set to: 0
  3413                           ;keypad.c: 239:         col_loc = PORTB & 0xf0;
  3414  000E6C  5081               	movf	129,w,c	;volatile
  3415  000E6E  0BF0               	andlw	240
  3416  000E70  6F6A               	movwf	_col_loc& (0+255),b
  3417  000E72                     
  3418                           ; BSR set to: 0
  3419                           ;keypad.c: 240:         temp_col=col_loc;
  3420  000E72  C06A  F068         	movff	_col_loc,_temp_col
  3421  000E76                     
  3422                           ; BSR set to: 0
  3423                           ;keypad.c: 241:         if(col_loc!=0xf0)
  3424  000E76  0EF0               	movlw	240
  3425  000E78  196A               	xorwf	_col_loc& (0+255),w,b
  3426  000E7A  B4D8               	btfsc	status,2,c
  3427  000E7C  EF42  F007         	goto	u1851
  3428  000E80  EF44  F007         	goto	u1850
  3429  000E84                     u1851:
  3430  000E84  EF56  F007         	goto	l2278
  3431  000E88                     u1850:
  3432  000E88                     
  3433                           ; BSR set to: 0
  3434                           ;keypad.c: 242:         {;keypad.c: 243:             rowloc=2;
  3435  000E88  0E02               	movlw	2
  3436  000E8A  6F69               	movwf	_rowloc& (0+255),b
  3437                           
  3438                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3439  000E8C  EF4B  F007         	goto	l223
  3440  000E90                     l2276:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;keypad.c: 245:             {;keypad.c: 246:                 temp_col = PORTB & 0xf0;
  3444  000E90  5081               	movf	129,w,c	;volatile
  3445  000E92  0BF0               	andlw	240
  3446  000E94  6F68               	movwf	_temp_col& (0+255),b
  3447  000E96                     l223:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;keypad.c: 244:             while(temp_col!=0xf0)
  3451  000E96  0EF0               	movlw	240
  3452  000E98  1968               	xorwf	_temp_col& (0+255),w,b
  3453  000E9A  A4D8               	btfss	status,2,c
  3454  000E9C  EF52  F007         	goto	u1861
  3455  000EA0  EF54  F007         	goto	u1860
  3456  000EA4                     u1861:
  3457  000EA4  EF48  F007         	goto	l2276
  3458  000EA8                     u1860:
  3459  000EA8  EF76  F007         	goto	l2290
  3460  000EAC                     l2278:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;keypad.c: 251:         LATB = 0xf7;
  3464  000EAC  0EF7               	movlw	247
  3465  000EAE  6E8A               	movwf	138,c	;volatile
  3466  000EB0                     
  3467                           ; BSR set to: 0
  3468                           ;keypad.c: 252:         col_loc = PORTB & 0xf0;
  3469  000EB0  5081               	movf	129,w,c	;volatile
  3470  000EB2  0BF0               	andlw	240
  3471  000EB4  6F6A               	movwf	_col_loc& (0+255),b
  3472  000EB6                     
  3473                           ; BSR set to: 0
  3474                           ;keypad.c: 253:         temp_col=col_loc;
  3475  000EB6  C06A  F068         	movff	_col_loc,_temp_col
  3476  000EBA                     
  3477                           ; BSR set to: 0
  3478                           ;keypad.c: 254:         if(col_loc!=0xf0)
  3479  000EBA  0EF0               	movlw	240
  3480  000EBC  196A               	xorwf	_col_loc& (0+255),w,b
  3481  000EBE  B4D8               	btfsc	status,2,c
  3482  000EC0  EF64  F007         	goto	u1871
  3483  000EC4  EF66  F007         	goto	u1870
  3484  000EC8                     u1871:
  3485  000EC8  EFF0  F006         	goto	l2242
  3486  000ECC                     u1870:
  3487  000ECC                     
  3488                           ; BSR set to: 0
  3489                           ;keypad.c: 255:         {;keypad.c: 256:             rowloc=3;
  3490  000ECC  0E03               	movlw	3
  3491  000ECE  6F69               	movwf	_rowloc& (0+255),b
  3492                           
  3493                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3494  000ED0  EF6D  F007         	goto	l227
  3495  000ED4                     l2288:
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;keypad.c: 258:             {;keypad.c: 259:                 temp_col = PORTB & 0xf0;
  3499  000ED4  5081               	movf	129,w,c	;volatile
  3500  000ED6  0BF0               	andlw	240
  3501  000ED8  6F68               	movwf	_temp_col& (0+255),b
  3502  000EDA                     l227:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;keypad.c: 257:             while(temp_col!=0xf0)
  3506  000EDA  0EF0               	movlw	240
  3507  000EDC  1968               	xorwf	_temp_col& (0+255),w,b
  3508  000EDE  A4D8               	btfss	status,2,c
  3509  000EE0  EF74  F007         	goto	u1881
  3510  000EE4  EF76  F007         	goto	u1880
  3511  000EE8                     u1881:
  3512  000EE8  EF6A  F007         	goto	l2288
  3513  000EEC                     u1880:
  3514  000EEC                     l2290:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;keypad.c: 268:     {;keypad.c: 270:         if(col_loc==0xe0)
  3518  000EEC  0EE0               	movlw	224
  3519  000EEE  196A               	xorwf	_col_loc& (0+255),w,b
  3520  000EF0  A4D8               	btfss	status,2,c
  3521  000EF2  EF7D  F007         	goto	u1891
  3522  000EF6  EF7F  F007         	goto	u1890
  3523  000EFA                     u1891:
  3524  000EFA  EF8A  F007         	goto	l2298
  3525  000EFE                     u1890:
  3526  000EFE                     
  3527                           ; BSR set to: 0
  3528                           ;keypad.c: 271:         {;keypad.c: 272:              return keypad[rowloc][0];
  3529  000EFE  5169               	movf	_rowloc& (0+255),w,b
  3530  000F00  0D04               	mullw	4
  3531  000F02  0EAF               	movlw	low _keypad
  3532  000F04  24F3               	addwf	243,w,c
  3533  000F06  6ED9               	movwf	fsr2l,c
  3534  000F08  0E00               	movlw	high _keypad
  3535  000F0A  20F4               	addwfc	prodh,w,c
  3536  000F0C  6EDA               	movwf	fsr2h,c
  3537  000F0E  50DF               	movf	indf2,w,c
  3538  000F10  EFBB  F007         	goto	l233
  3539  000F14                     l2298:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;keypad.c: 275:             if(col_loc==0xd0)
  3543  000F14  0ED0               	movlw	208
  3544  000F16  196A               	xorwf	_col_loc& (0+255),w,b
  3545  000F18  A4D8               	btfss	status,2,c
  3546  000F1A  EF91  F007         	goto	u1901
  3547  000F1E  EF93  F007         	goto	u1900
  3548  000F22                     u1901:
  3549  000F22  EF9E  F007         	goto	l2306
  3550  000F26                     u1900:
  3551  000F26                     
  3552                           ; BSR set to: 0
  3553                           ;keypad.c: 276:         {;keypad.c: 277:             return keypad[rowloc][1];
  3554  000F26  5169               	movf	_rowloc& (0+255),w,b
  3555  000F28  0D04               	mullw	4
  3556  000F2A  0EB0               	movlw	low (_keypad+1)
  3557  000F2C  24F3               	addwf	243,w,c
  3558  000F2E  6ED9               	movwf	fsr2l,c
  3559  000F30  0E00               	movlw	high (_keypad+1)
  3560  000F32  20F4               	addwfc	prodh,w,c
  3561  000F34  6EDA               	movwf	fsr2h,c
  3562  000F36  50DF               	movf	indf2,w,c
  3563  000F38  EFBB  F007         	goto	l233
  3564  000F3C                     l2306:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;keypad.c: 280:             if(col_loc==0xb0)
  3568  000F3C  0EB0               	movlw	176
  3569  000F3E  196A               	xorwf	_col_loc& (0+255),w,b
  3570  000F40  A4D8               	btfss	status,2,c
  3571  000F42  EFA5  F007         	goto	u1911
  3572  000F46  EFA7  F007         	goto	u1910
  3573  000F4A                     u1911:
  3574  000F4A  EFB2  F007         	goto	l2314
  3575  000F4E                     u1910:
  3576  000F4E                     
  3577                           ; BSR set to: 0
  3578                           ;keypad.c: 281:         {;keypad.c: 282:             return keypad[rowloc][2];
  3579  000F4E  5169               	movf	_rowloc& (0+255),w,b
  3580  000F50  0D04               	mullw	4
  3581  000F52  0EB1               	movlw	low (_keypad+2)
  3582  000F54  24F3               	addwf	243,w,c
  3583  000F56  6ED9               	movwf	fsr2l,c
  3584  000F58  0E00               	movlw	high (_keypad+2)
  3585  000F5A  20F4               	addwfc	prodh,w,c
  3586  000F5C  6EDA               	movwf	fsr2h,c
  3587  000F5E  50DF               	movf	indf2,w,c
  3588  000F60  EFBB  F007         	goto	l233
  3589  000F64                     l2314:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;keypad.c: 286:         {;keypad.c: 287:             return keypad[rowloc][3];
  3593  000F64  5169               	movf	_rowloc& (0+255),w,b
  3594  000F66  0D04               	mullw	4
  3595  000F68  0EB2               	movlw	low (_keypad+3)
  3596  000F6A  24F3               	addwf	243,w,c
  3597  000F6C  6ED9               	movwf	fsr2l,c
  3598  000F6E  0E00               	movlw	high (_keypad+3)
  3599  000F70  20F4               	addwfc	prodh,w,c
  3600  000F72  6EDA               	movwf	fsr2h,c
  3601  000F74  50DF               	movf	indf2,w,c
  3602  000F76                     l233:
  3603                           
  3604                           ; BSR set to: 0
  3605  000F76  0012               	return		;funcret
  3606  000F78                     __end_of_keyfind:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _LCD_String_xy *****************
  3610 ;; Defined at:
  3611 ;;		line 80 in file "LCD.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  row             1    wreg     unsigned char 
  3614 ;;  pos             1    4[COMRAM] unsigned char 
  3615 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3616 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  row             1    7[COMRAM] unsigned char 
  3619 ;;  location        1    8[COMRAM] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3629 ;;      Params:         3       0       0       0       0       0       0       0       0
  3630 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3632 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3633 ;;Total ram usage:        5 bytes
  3634 ;; Hardware stack levels used: 1
  3635 ;; Hardware stack levels required when called: 2
  3636 ;; This function calls:
  3637 ;;		_LCD_Command
  3638 ;;		_LCD_String
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;;		_PedirDato
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text17
  3646  001AE6                     __ptext17:
  3647                           	callstack 0
  3648  001AE6                     _LCD_String_xy:
  3649                           	callstack 27
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;incstack = 0
  3653                           ;LCD_String_xy@row stored from wreg
  3654  001AE6  6E08               	movwf	LCD_String_xy@row^0,c
  3655  001AE8                     
  3656                           ;LCD.c: 83:     if(row<=1)
  3657  001AE8  0E02               	movlw	2
  3658  001AEA  6008               	cpfslt	LCD_String_xy@row^0,c
  3659  001AEC  EF7A  F00D         	goto	u1761
  3660  001AF0  EF7C  F00D         	goto	u1760
  3661  001AF4                     u1761:
  3662  001AF4  EF85  F00D         	goto	l2208
  3663  001AF8                     u1760:
  3664  001AF8                     
  3665                           ;LCD.c: 84:     {;LCD.c: 85:         location = (0x80) | ((pos) & 0x0f);
  3666  001AF8  5005               	movf	LCD_String_xy@pos^0,w,c
  3667  001AFA  0B0F               	andlw	15
  3668  001AFC  0980               	iorlw	128
  3669  001AFE  6E09               	movwf	LCD_String_xy@location^0,c
  3670  001B00                     
  3671                           ;LCD.c: 86:         LCD_Command(location);
  3672  001B00  5009               	movf	LCD_String_xy@location^0,w,c
  3673  001B02  ECE2  F00C         	call	_LCD_Command
  3674                           
  3675                           ;LCD.c: 87:     }
  3676  001B06  EF8C  F00D         	goto	l2212
  3677  001B0A                     l2208:
  3678                           
  3679                           ;LCD.c: 89:     {;LCD.c: 90:         location = (0xC0) | ((pos) & 0x0f);
  3680  001B0A  5005               	movf	LCD_String_xy@pos^0,w,c
  3681  001B0C  0B0F               	andlw	15
  3682  001B0E  09C0               	iorlw	192
  3683  001B10  6E09               	movwf	LCD_String_xy@location^0,c
  3684  001B12                     
  3685                           ;LCD.c: 91:         LCD_Command(location);
  3686  001B12  5009               	movf	LCD_String_xy@location^0,w,c
  3687  001B14  ECE2  F00C         	call	_LCD_Command
  3688  001B18                     l2212:
  3689                           
  3690                           ;LCD.c: 95:     LCD_String(msg);
  3691  001B18  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3692  001B1C  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3693  001B20  EC09  F00C         	call	_LCD_String	;wreg free
  3694  001B24  0012               	return		;funcret
  3695  001B26                     __end_of_LCD_String_xy:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _LCD_String *****************
  3699 ;; Defined at:
  3700 ;;		line 70 in file "LCD.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3703 ;;		 -> main@Cadena(10), STR_2(13), STR_1(14), 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         2       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3718 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 1
  3722 ;; This function calls:
  3723 ;;		_LCD_Char
  3724 ;; This function is called by:
  3725 ;;		_LCD_String_xy
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text18
  3731  001812                     __ptext18:
  3732                           	callstack 0
  3733  001812                     _LCD_String:
  3734                           	callstack 27
  3735  001812                     
  3736                           ;LCD.c: 70: void LCD_String(const char *msg);LCD.c: 71: {;LCD.c: 72:  while((*msg)!=0)
  3737  001812  EF1F  F00C         	goto	l2154
  3738  001816                     l2150:
  3739                           
  3740                           ;LCD.c: 73:  {;LCD.c: 74:    LCD_Char(*msg);
  3741  001816  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3742  00181A  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3743  00181E  6AF8               	clrf	tblptru,c
  3744  001820  0E07               	movlw	(high __ramtop+-1)
  3745  001822  64F7               	cpfsgt	tblptrh,c
  3746  001824  D003               	bra	u1697
  3747  001826  0008               	tblrd		*
  3748  001828  50F5               	movf	tablat,w,c
  3749  00182A  D005               	bra	u1690
  3750  00182C                     u1697:
  3751  00182C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3752  001830  CFF7 FFE2          	movff	tblptrh,fsr1h
  3753  001834  50E7               	movf	indf1,w,c
  3754  001836                     u1690:
  3755  001836  ECBA  F00C         	call	_LCD_Char
  3756  00183A                     
  3757                           ;LCD.c: 75:    msg++;
  3758  00183A  4A03               	infsnz	LCD_String@msg^0,f,c
  3759  00183C  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3760  00183E                     l2154:
  3761                           
  3762                           ;LCD.c: 72:  while((*msg)!=0)
  3763  00183E  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3764  001842  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3765  001846  6AF8               	clrf	tblptru,c
  3766  001848  0E07               	movlw	(high __ramtop+-1)
  3767  00184A  64F7               	cpfsgt	tblptrh,c
  3768  00184C  D003               	bra	u1707
  3769  00184E  0008               	tblrd		*
  3770  001850  50F5               	movf	tablat,w,c
  3771  001852  D005               	bra	u1700
  3772  001854                     u1707:
  3773  001854  CFF6 FFE1          	movff	tblptrl,fsr1l
  3774  001858  CFF7 FFE2          	movff	tblptrh,fsr1h
  3775  00185C  50E7               	movf	indf1,w,c
  3776  00185E                     u1700:
  3777  00185E  0900               	iorlw	0
  3778  001860  A4D8               	btfss	status,2,c
  3779  001862  EF35  F00C         	goto	u1711
  3780  001866  EF37  F00C         	goto	u1710
  3781  00186A                     u1711:
  3782  00186A  EF0B  F00C         	goto	l2150
  3783  00186E                     u1710:
  3784  00186E  0012               	return		;funcret
  3785  001870                     __end_of_LCD_String:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _LCD_Char *****************
  3789 ;; Defined at:
  3790 ;;		line 56 in file "LCD.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  dat             1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  dat             1    1[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0
  3805 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3806 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3807 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3808 ;;Total ram usage:        2 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_LCD_String
  3814 ;;		_main
  3815 ;;		_PedirDato
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text19
  3820  001974                     __ptext19:
  3821                           	callstack 0
  3822  001974                     _LCD_Char:
  3823                           	callstack 27
  3824                           
  3825                           ;incstack = 0
  3826                           ;LCD_Char@dat stored from wreg
  3827  001974  6E02               	movwf	LCD_Char@dat^0,c
  3828  001976                     
  3829                           ;LCD.c: 56: void LCD_Char(unsigned char dat);LCD.c: 57: {;LCD.c: 58:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  3830  001976  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3831  00197A  0EF0               	movlw	240
  3832  00197C  1601               	andwf	??_LCD_Char^0,f,c
  3833  00197E  508C               	movf	140,w,c	;volatile
  3834  001980  0B0F               	andlw	15
  3835  001982  1001               	iorwf	??_LCD_Char^0,w,c
  3836  001984  6E8C               	movwf	140,c	;volatile
  3837  001986                     
  3838                           ;LCD.c: 59:  LATD0 = 1;
  3839  001986  808C               	bsf	3980,0,c	;volatile
  3840  001988                     
  3841                           ;LCD.c: 60:  LATD1 = 1;
  3842  001988  828C               	bsf	3980,1,c	;volatile
  3843  00198A                     
  3844                           ;LCD.c: 61:  __nop();
  3845  00198A  F000               	nop	
  3846  00198C                     
  3847                           ;LCD.c: 62:  LATD1 = 0;
  3848  00198C  928C               	bcf	3980,1,c	;volatile
  3849  00198E                     
  3850                           ;LCD.c: 63:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3851  00198E  0E03               	movlw	3
  3852  001990  6E01               	movwf	??_LCD_Char^0,c
  3853  001992  0E98               	movlw	152
  3854  001994                     u2407:
  3855  001994  2EE8               	decfsz	wreg,f,c
  3856  001996  D7FE               	bra	u2407
  3857  001998  2E01               	decfsz	??_LCD_Char^0,f,c
  3858  00199A  D7FC               	bra	u2407
  3859  00199C                     
  3860                           ;LCD.c: 64:     LATD = (LATD & 0x0f) | (dat<<4);
  3861  00199C  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3862  0019A0  3A01               	swapf	??_LCD_Char^0,f,c
  3863  0019A2  0EF0               	movlw	240
  3864  0019A4  1601               	andwf	??_LCD_Char^0,f,c
  3865  0019A6  508C               	movf	140,w,c	;volatile
  3866  0019A8  0B0F               	andlw	15
  3867  0019AA  1001               	iorwf	??_LCD_Char^0,w,c
  3868  0019AC  6E8C               	movwf	140,c	;volatile
  3869  0019AE                     
  3870                           ;LCD.c: 65:  LATD1 = 1;
  3871  0019AE  828C               	bsf	3980,1,c	;volatile
  3872  0019B0                     
  3873                           ;LCD.c: 66:  __nop();
  3874  0019B0  F000               	nop	
  3875  0019B2                     
  3876                           ;LCD.c: 67:  LATD1 = 0;
  3877  0019B2  928C               	bcf	3980,1,c	;volatile
  3878                           
  3879                           ;LCD.c: 68:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3880  0019B4  0E08               	movlw	8
  3881  0019B6  6E01               	movwf	??_LCD_Char^0,c
  3882  0019B8  0ECA               	movlw	202
  3883  0019BA                     u2417:
  3884  0019BA  2EE8               	decfsz	wreg,f,c
  3885  0019BC  D7FE               	bra	u2417
  3886  0019BE  2E01               	decfsz	??_LCD_Char^0,f,c
  3887  0019C0  D7FC               	bra	u2417
  3888  0019C2  0012               	return		;funcret
  3889  0019C4                     __end_of_LCD_Char:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _LCD_Clear *****************
  3893 ;; Defined at:
  3894 ;;		line 99 in file "LCD.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3910 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3911 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        1 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 1
  3915 ;; This function calls:
  3916 ;;		_LCD_Command
  3917 ;; This function is called by:
  3918 ;;		_PedirDato
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text20
  3923  001C30                     __ptext20:
  3924                           	callstack 0
  3925  001C30                     _LCD_Clear:
  3926                           	callstack 28
  3927  001C30                     
  3928                           ;LCD.c: 101:     LCD_Command(0x01);
  3929  001C30  0E01               	movlw	1
  3930  001C32  ECE2  F00C         	call	_LCD_Command
  3931  001C36                     
  3932                           ;LCD.c: 102:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3933  001C36  0E08               	movlw	8
  3934  001C38  6E03               	movwf	??_LCD_Clear^0,c
  3935  001C3A  0ECA               	movlw	202
  3936  001C3C                     u2427:
  3937  001C3C  2EE8               	decfsz	wreg,f,c
  3938  001C3E  D7FE               	bra	u2427
  3939  001C40  2E03               	decfsz	??_LCD_Clear^0,f,c
  3940  001C42  D7FC               	bra	u2427
  3941  001C44                     
  3942                           ;LCD.c: 103:     LCD_Command (0x80);
  3943  001C44  0E80               	movlw	128
  3944  001C46  ECE2  F00C         	call	_LCD_Command
  3945                           
  3946                           ;LCD.c: 104:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3947  001C4A  0E03               	movlw	3
  3948  001C4C  6E03               	movwf	??_LCD_Clear^0,c
  3949  001C4E  0E98               	movlw	152
  3950  001C50                     u2437:
  3951  001C50  2EE8               	decfsz	wreg,f,c
  3952  001C52  D7FE               	bra	u2437
  3953  001C54  2E03               	decfsz	??_LCD_Clear^0,f,c
  3954  001C56  D7FC               	bra	u2437
  3955  001C58  0012               	return		;funcret
  3956  001C5A                     __end_of_LCD_Clear:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _LCD_Init *****************
  3960 ;; Defined at:
  3961 ;;		line 25 in file "LCD.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3977 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3978 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3979 ;;Total ram usage:        1 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		_LCD_Command
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text21
  3990  001BD0                     __ptext21:
  3991                           	callstack 0
  3992  001BD0                     _LCD_Init:
  3993                           	callstack 29
  3994  001BD0                     
  3995                           ;LCD.c: 27:     TRISD = 0;
  3996  001BD0  0E00               	movlw	0
  3997  001BD2  6E95               	movwf	149,c	;volatile
  3998  001BD4                     
  3999                           ;LCD.c: 28:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4000  001BD4  0E27               	movlw	39
  4001  001BD6  6E03               	movwf	??_LCD_Init^0,c
  4002  001BD8  0EF5               	movlw	245
  4003  001BDA                     u2447:
  4004  001BDA  2EE8               	decfsz	wreg,f,c
  4005  001BDC  D7FE               	bra	u2447
  4006  001BDE  2E03               	decfsz	??_LCD_Init^0,f,c
  4007  001BE0  D7FC               	bra	u2447
  4008  001BE2  F000               	nop	
  4009  001BE4                     
  4010                           ;LCD.c: 29:     LCD_Command(0x02);
  4011  001BE4  0E02               	movlw	2
  4012  001BE6  ECE2  F00C         	call	_LCD_Command
  4013  001BEA                     
  4014                           ;LCD.c: 31:     LCD_Command(0x28);
  4015  001BEA  0E28               	movlw	40
  4016  001BEC  ECE2  F00C         	call	_LCD_Command
  4017  001BF0                     
  4018                           ;LCD.c: 33:  LCD_Command(0x01);
  4019  001BF0  0E01               	movlw	1
  4020  001BF2  ECE2  F00C         	call	_LCD_Command
  4021  001BF6                     
  4022                           ;LCD.c: 34:     LCD_Command(0x0c);
  4023  001BF6  0E0C               	movlw	12
  4024  001BF8  ECE2  F00C         	call	_LCD_Command
  4025  001BFC                     
  4026                           ;LCD.c: 35:  LCD_Command(0x06);
  4027  001BFC  0E06               	movlw	6
  4028  001BFE  ECE2  F00C         	call	_LCD_Command
  4029  001C02  0012               	return		;funcret
  4030  001C04                     __end_of_LCD_Init:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _LCD_Command *****************
  4034 ;; Defined at:
  4035 ;;		line 38 in file "LCD.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  cmd             1    wreg     unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  cmd             1    1[COMRAM] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0
  4050 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4051 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4052 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        2 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_LCD_Init
  4059 ;;		_LCD_String_xy
  4060 ;;		_LCD_Clear
  4061 ;;		_PedirDato
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text22
  4066  0019C4                     __ptext22:
  4067                           	callstack 0
  4068  0019C4                     _LCD_Command:
  4069                           	callstack 28
  4070                           
  4071                           ;incstack = 0
  4072                           ;LCD_Command@cmd stored from wreg
  4073  0019C4  6E02               	movwf	LCD_Command@cmd^0,c
  4074  0019C6                     
  4075                           ;LCD.c: 38: void LCD_Command(unsigned char cmd );LCD.c: 39: {;LCD.c: 40:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  4076  0019C6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4077  0019CA  0EF0               	movlw	240
  4078  0019CC  1601               	andwf	??_LCD_Command^0,f,c
  4079  0019CE  508C               	movf	140,w,c	;volatile
  4080  0019D0  0B0F               	andlw	15
  4081  0019D2  1001               	iorwf	??_LCD_Command^0,w,c
  4082  0019D4  6E8C               	movwf	140,c	;volatile
  4083  0019D6                     
  4084                           ;LCD.c: 41:  LATD0 = 0;
  4085  0019D6  908C               	bcf	3980,0,c	;volatile
  4086  0019D8                     
  4087                           ;LCD.c: 42:  LATD1 = 1;
  4088  0019D8  828C               	bsf	3980,1,c	;volatile
  4089  0019DA                     
  4090                           ;LCD.c: 43:  __nop();
  4091  0019DA  F000               	nop	
  4092  0019DC                     
  4093                           ;LCD.c: 44:  LATD1 = 0;
  4094  0019DC  928C               	bcf	3980,1,c	;volatile
  4095  0019DE                     
  4096                           ;LCD.c: 45:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4097  0019DE  0E03               	movlw	3
  4098  0019E0  6E01               	movwf	??_LCD_Command^0,c
  4099  0019E2  0E98               	movlw	152
  4100  0019E4                     u2457:
  4101  0019E4  2EE8               	decfsz	wreg,f,c
  4102  0019E6  D7FE               	bra	u2457
  4103  0019E8  2E01               	decfsz	??_LCD_Command^0,f,c
  4104  0019EA  D7FC               	bra	u2457
  4105  0019EC                     
  4106                           ;LCD.c: 46:     LATD = (LATD & 0x0f) | (cmd<<4);
  4107  0019EC  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4108  0019F0  3A01               	swapf	??_LCD_Command^0,f,c
  4109  0019F2  0EF0               	movlw	240
  4110  0019F4  1601               	andwf	??_LCD_Command^0,f,c
  4111  0019F6  508C               	movf	140,w,c	;volatile
  4112  0019F8  0B0F               	andlw	15
  4113  0019FA  1001               	iorwf	??_LCD_Command^0,w,c
  4114  0019FC  6E8C               	movwf	140,c	;volatile
  4115  0019FE                     
  4116                           ;LCD.c: 47:  LATD1 = 1;
  4117  0019FE  828C               	bsf	3980,1,c	;volatile
  4118  001A00                     
  4119                           ;LCD.c: 48:  __nop();
  4120  001A00  F000               	nop	
  4121  001A02                     
  4122                           ;LCD.c: 49:  LATD1 = 0;
  4123  001A02  928C               	bcf	3980,1,c	;volatile
  4124                           
  4125                           ;LCD.c: 50:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4126  001A04  0E08               	movlw	8
  4127  001A06  6E01               	movwf	??_LCD_Command^0,c
  4128  001A08  0ECA               	movlw	202
  4129  001A0A                     u2467:
  4130  001A0A  2EE8               	decfsz	wreg,f,c
  4131  001A0C  D7FE               	bra	u2467
  4132  001A0E  2E01               	decfsz	??_LCD_Command^0,f,c
  4133  001A10  D7FC               	bra	u2467
  4134  001A12  0012               	return		;funcret
  4135  001A14                     __end_of_LCD_Command:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _DatoSensorTH *****************
  4139 ;; Defined at:
  4140 ;;		line 145 in file "Main_Invernadero.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  Datos           2    2[COMRAM] PTR unsigned char 
  4143 ;;		 -> main@Datos(2), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  T_Integral      1    5[COMRAM] unsigned char 
  4146 ;;  RH_Integral     1    4[COMRAM] unsigned char 
  4147 ;;  Checksum        1    0        unsigned char 
  4148 ;;  T_Decimal       1    0        unsigned char 
  4149 ;;  RH_Decimal      1    0        unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         2       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4162 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4163 ;;Total ram usage:        4 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 1
  4166 ;; This function calls:
  4167 ;;		_DHT11_CheckResponse
  4168 ;;		_DHT11_ReadData
  4169 ;;		_DHT11_Start
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text23
  4176  001B26                     __ptext23:
  4177                           	callstack 0
  4178  001B26                     _DatoSensorTH:
  4179                           	callstack 29
  4180  001B26                     
  4181                           ;Main_Invernadero.c: 146:          char RH_Decimal,RH_Integral,T_Decimal,T_Integral;;Mai
      +                          n_Invernadero.c: 147:          char Checksum;;Main_Invernadero.c: 148:          DHT11_St
      +                          art();
  4182  001B26  EC50  F00E         	call	_DHT11_Start	;wreg free
  4183  001B2A                     
  4184                           ;Main_Invernadero.c: 149:          DHT11_CheckResponse();
  4185  001B2A  EC02  F00E         	call	_DHT11_CheckResponse	;wreg free
  4186  001B2E                     
  4187                           ;Main_Invernadero.c: 152:          RH_Integral = DHT11_ReadData();
  4188  001B2E  EC38  F00C         	call	_DHT11_ReadData	;wreg free
  4189  001B32  6E05               	movwf	DatoSensorTH@RH_Integral^0,c
  4190  001B34  EC38  F00C         	call	_DHT11_ReadData	;wreg free
  4191  001B38                     
  4192                           ;Main_Invernadero.c: 154:          T_Integral = DHT11_ReadData();
  4193  001B38  EC38  F00C         	call	_DHT11_ReadData	;wreg free
  4194  001B3C  6E06               	movwf	DatoSensorTH@T_Integral^0,c
  4195  001B3E  EC38  F00C         	call	_DHT11_ReadData	;wreg free
  4196  001B42  EC38  F00C         	call	_DHT11_ReadData	;wreg free
  4197  001B46                     
  4198                           ;Main_Invernadero.c: 158:          Datos[0]=T_Integral;
  4199  001B46  C003  FFD9         	movff	DatoSensorTH@Datos,fsr2l
  4200  001B4A  C004  FFDA         	movff	DatoSensorTH@Datos+1,fsr2h
  4201  001B4E  C006  FFDF         	movff	DatoSensorTH@T_Integral,indf2
  4202  001B52                     
  4203                           ;Main_Invernadero.c: 159:          Datos[1]=RH_Integral;
  4204  001B52  EE20 F001          	lfsr	2,1
  4205  001B56  5003               	movf	DatoSensorTH@Datos^0,w,c
  4206  001B58  26D9               	addwf	fsr2l,f,c
  4207  001B5A  5004               	movf	(DatoSensorTH@Datos+1)^0,w,c
  4208  001B5C  22DA               	addwfc	fsr2h,f,c
  4209  001B5E  C005  FFDF         	movff	DatoSensorTH@RH_Integral,indf2
  4210  001B62  0012               	return		;funcret
  4211  001B64                     __end_of_DatoSensorTH:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _DHT11_Start *****************
  4215 ;; Defined at:
  4216 ;;		line 22 in file "DHT11.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        1 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_DatoSensorTH
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text24
  4244  001CA0                     __ptext24:
  4245                           	callstack 0
  4246  001CA0                     _DHT11_Start:
  4247                           	callstack 29
  4248  001CA0                     
  4249                           ;DHT11.c: 24:     TRISAbits.RA0 = 0;
  4250  001CA0  9092               	bcf	146,0,c	;volatile
  4251                           
  4252                           ;DHT11.c: 25:     LATA0 = 0;
  4253  001CA2  9089               	bcf	3977,0,c	;volatile
  4254  001CA4                     
  4255                           ;DHT11.c: 26:     _delay((unsigned long)((18)*(8000000/4000.0)));
  4256  001CA4  0E2F               	movlw	47
  4257  001CA6  6E01               	movwf	??_DHT11_Start^0,c
  4258  001CA8  0EC0               	movlw	192
  4259  001CAA                     u2477:
  4260  001CAA  2EE8               	decfsz	wreg,f,c
  4261  001CAC  D7FE               	bra	u2477
  4262  001CAE  2E01               	decfsz	??_DHT11_Start^0,f,c
  4263  001CB0  D7FC               	bra	u2477
  4264  001CB2                     
  4265                           ;DHT11.c: 27:     LATA0 = 1;
  4266  001CB2  8089               	bsf	3977,0,c	;volatile
  4267                           
  4268                           ;DHT11.c: 28:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  4269  001CB4  0E0D               	movlw	13
  4270  001CB6                     u2487:
  4271  001CB6  2EE8               	decfsz	wreg,f,c
  4272  001CB8  D7FE               	bra	u2487
  4273  001CBA  F000               	nop	
  4274  001CBC                     
  4275                           ;DHT11.c: 29:     TRISAbits.RA0 = 1;
  4276  001CBC  8092               	bsf	146,0,c	;volatile
  4277  001CBE  0012               	return		;funcret
  4278  001CC0                     __end_of_DHT11_Start:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _DHT11_ReadData *****************
  4282 ;; Defined at:
  4283 ;;		line 6 in file "DHT11.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  data            1    1[COMRAM] unsigned char 
  4288 ;;  i               1    0[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        2 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_DatoSensorTH
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text25
  4312  001870                     __ptext25:
  4313                           	callstack 0
  4314  001870                     _DHT11_ReadData:
  4315                           	callstack 29
  4316  001870                     
  4317                           ;DHT11.c: 8:   char i,data = 0;
  4318  001870  0E00               	movlw	0
  4319  001872  6E02               	movwf	DHT11_ReadData@data^0,c
  4320                           
  4321                           ;DHT11.c: 9:     for(i=0;i<8;i++)
  4322  001874  0E00               	movlw	0
  4323  001876  6E01               	movwf	DHT11_ReadData@i^0,c
  4324  001878                     l253:
  4325  001878  A080               	btfss	128,0,c	;volatile
  4326  00187A  EF41  F00C         	goto	u1921
  4327  00187E  EF43  F00C         	goto	u1920
  4328  001882                     u1921:
  4329  001882  EF3C  F00C         	goto	l253
  4330  001886                     u1920:
  4331  001886                     
  4332                           ;DHT11.c: 12:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  4333  001886  0E14               	movlw	20
  4334  001888                     u2497:
  4335  001888  2EE8               	decfsz	wreg,f,c
  4336  00188A  D7FE               	bra	u2497
  4337  00188C                     
  4338                           ;DHT11.c: 13:         if(PORTAbits.RA0 & 1)
  4339  00188C  A080               	btfss	128,0,c	;volatile
  4340  00188E  EF4B  F00C         	goto	u1931
  4341  001892  EF4D  F00C         	goto	u1930
  4342  001896                     u1931:
  4343  001896  EF51  F00C         	goto	l2332
  4344  00189A                     u1930:
  4345  00189A                     
  4346                           ;DHT11.c: 14:           data = ((data<<1) | 1);
  4347  00189A  80D8               	bsf	status,0,c
  4348  00189C  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4349  00189E  EF54  F00C         	goto	l258
  4350  0018A2                     l2332:
  4351                           
  4352                           ;DHT11.c: 16:           data = (data<<1);
  4353  0018A2  5002               	movf	DHT11_ReadData@data^0,w,c
  4354  0018A4  2402               	addwf	DHT11_ReadData@data^0,w,c
  4355  0018A6  6E02               	movwf	DHT11_ReadData@data^0,c
  4356  0018A8                     l258:
  4357  0018A8  B080               	btfsc	128,0,c	;volatile
  4358  0018AA  EF59  F00C         	goto	u1941
  4359  0018AE  EF5B  F00C         	goto	u1940
  4360  0018B2                     u1941:
  4361  0018B2  EF54  F00C         	goto	l258
  4362  0018B6                     u1940:
  4363  0018B6                     
  4364                           ;DHT11.c: 18:     }
  4365  0018B6  2A01               	incf	DHT11_ReadData@i^0,f,c
  4366  0018B8  0E07               	movlw	7
  4367  0018BA  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4368  0018BC  EF62  F00C         	goto	u1951
  4369  0018C0  EF64  F00C         	goto	u1950
  4370  0018C4                     u1951:
  4371  0018C4  EF3C  F00C         	goto	l253
  4372  0018C8                     u1950:
  4373  0018C8                     
  4374                           ;DHT11.c: 19:   return data;
  4375  0018C8  5002               	movf	DHT11_ReadData@data^0,w,c
  4376  0018CA  0012               	return		;funcret
  4377  0018CC                     __end_of_DHT11_ReadData:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _DHT11_CheckResponse *****************
  4381 ;; Defined at:
  4382 ;;		line 35 in file "DHT11.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_DatoSensorTH
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text26
  4410  001C04                     __ptext26:
  4411                           	callstack 0
  4412  001C04                     _DHT11_CheckResponse:
  4413                           	callstack 29
  4414  001C04                     l267:
  4415  001C04  B080               	btfsc	128,0,c	;volatile
  4416  001C06  EF07  F00E         	goto	u1961
  4417  001C0A  EF09  F00E         	goto	u1960
  4418  001C0E                     u1961:
  4419  001C0E  EF02  F00E         	goto	l267
  4420  001C12                     u1960:
  4421  001C12                     l270:
  4422  001C12  A080               	btfss	128,0,c	;volatile
  4423  001C14  EF0E  F00E         	goto	u1971
  4424  001C18  EF10  F00E         	goto	u1970
  4425  001C1C                     u1971:
  4426  001C1C  EF09  F00E         	goto	l270
  4427  001C20                     u1970:
  4428  001C20                     l273:
  4429  001C20  B080               	btfsc	128,0,c	;volatile
  4430  001C22  EF15  F00E         	goto	u1981
  4431  001C26  EF17  F00E         	goto	u1980
  4432  001C2A                     u1981:
  4433  001C2A  EF10  F00E         	goto	l273
  4434  001C2E                     u1980:
  4435  001C2E  0012               	return		;funcret
  4436  001C30                     __end_of_DHT11_CheckResponse:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _ControlAspersor *****************
  4440 ;; Defined at:
  4441 ;;		line 166 in file "Main_Invernadero.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  HumedadActua    2    0[COMRAM] PTR unsigned char 
  4444 ;;		 -> main@Datos(2), 
  4445 ;;  HumedadDigit    2    2[COMRAM] int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4457 ;;      Params:         4       0       0       0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4459 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4460 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4461 ;;Total ram usage:       11 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text27
  4471  001A14                     __ptext27:
  4472                           	callstack 0
  4473  001A14                     _ControlAspersor:
  4474                           	callstack 30
  4475  001A14                     
  4476                           ;Main_Invernadero.c: 167:     if(*HumedadActual<HumedadDigitada-2){
  4477  001A14  0EFE               	movlw	254
  4478  001A16  6E05               	movwf	??_ControlAspersor^0,c
  4479  001A18  0EFF               	movlw	255
  4480  001A1A  6E06               	movwf	(??_ControlAspersor+1)^0,c
  4481  001A1C  C003  F007         	movff	ControlAspersor@HumedadDigitada,??_ControlAspersor+2
  4482  001A20  C004  F008         	movff	ControlAspersor@HumedadDigitada+1,??_ControlAspersor+3
  4483  001A24  5005               	movf	??_ControlAspersor^0,w,c
  4484  001A26  2607               	addwf	(??_ControlAspersor+2)^0,f,c
  4485  001A28  5006               	movf	(??_ControlAspersor+1)^0,w,c
  4486  001A2A  2208               	addwfc	(??_ControlAspersor+3)^0,f,c
  4487  001A2C  C001  FFD9         	movff	ControlAspersor@HumedadActual,fsr2l
  4488  001A30  C002  FFDA         	movff	ControlAspersor@HumedadActual+1,fsr2h
  4489  001A34  50DF               	movf	indf2,w,c
  4490  001A36  6E09               	movwf	(??_ControlAspersor+4)^0,c
  4491  001A38  6A0A               	clrf	(??_ControlAspersor+5)^0,c
  4492  001A3A  5007               	movf	(??_ControlAspersor+2)^0,w,c
  4493  001A3C  5C09               	subwf	(??_ControlAspersor+4)^0,w,c
  4494  001A3E  500A               	movf	(??_ControlAspersor+5)^0,w,c
  4495  001A40  0A80               	xorlw	128
  4496  001A42  6E0B               	movwf	(??_ControlAspersor+6)^0,c
  4497  001A44  5008               	movf	(??_ControlAspersor+3)^0,w,c
  4498  001A46  0A80               	xorlw	128
  4499  001A48  580B               	subwfb	(??_ControlAspersor+6)^0,w,c
  4500  001A4A  B0D8               	btfsc	status,0,c
  4501  001A4C  EF2A  F00D         	goto	u2091
  4502  001A50  EF2C  F00D         	goto	u2090
  4503  001A54                     u2091:
  4504  001A54  EF2F  F00D         	goto	l379
  4505  001A58                     u2090:
  4506  001A58                     
  4507                           ;Main_Invernadero.c: 168:         LATC0=1;
  4508  001A58  808B               	bsf	3979,0,c	;volatile
  4509                           
  4510                           ;Main_Invernadero.c: 170:     }else{
  4511  001A5A  EF30  F00D         	goto	l381
  4512  001A5E                     l379:
  4513                           
  4514                           ;Main_Invernadero.c: 171:         LATC0=0;
  4515  001A5E  908B               	bcf	3979,0,c	;volatile
  4516  001A60                     l381:
  4517  001A60  0012               	return		;funcret
  4518  001A62                     __end_of_ControlAspersor:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _CompararTempe *****************
  4522 ;; Defined at:
  4523 ;;		line 117 in file "Main_Invernadero.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  TempActual      2    2[COMRAM] PTR unsigned char 
  4526 ;;		 -> main@Datos(2), 
  4527 ;;  HumActual       2    4[COMRAM] PTR unsigned char 
  4528 ;;		 -> main@Datos(2), 
  4529 ;;  TempDigitada    2    6[COMRAM] int 
  4530 ;;  HumDigitada     2    8[COMRAM] int 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  HumedadAdecu    1   18[COMRAM] _Bool 
  4533 ;;  TemperaturaA    1   17[COMRAM] _Bool 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4543 ;;      Params:         8       0       0       0       0       0       0       0       0
  4544 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4545 ;;      Temps:          7       0       0       0       0       0       0       0       0
  4546 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4547 ;;Total ram usage:       17 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 2
  4550 ;; This function calls:
  4551 ;;		_PrenderLed
  4552 ;; This function is called by:
  4553 ;;		_main
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text28
  4558  001418                     __ptext28:
  4559                           	callstack 0
  4560  001418                     _CompararTempe:
  4561                           	callstack 28
  4562  001418                     
  4563                           ;Main_Invernadero.c: 118:     _Bool TemperaturaAdecuada= 1;
  4564  001418  0E01               	movlw	1
  4565  00141A  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4566                           
  4567                           ;Main_Invernadero.c: 119:     _Bool HumedadAdecuada =1;
  4568  00141C  0E01               	movlw	1
  4569  00141E  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4570  001420                     
  4571                           ;Main_Invernadero.c: 120:     if(*TempActual<TempDigitada-2 || *TempActual >TempDigitada
      +                          +2){
  4572  001420  0EFE               	movlw	254
  4573  001422  6E0B               	movwf	??_CompararTempe^0,c
  4574  001424  0EFF               	movlw	255
  4575  001426  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4576  001428  C007  F00D         	movff	CompararTempe@TempDigitada,??_CompararTempe+2
  4577  00142C  C008  F00E         	movff	CompararTempe@TempDigitada+1,??_CompararTempe+3
  4578  001430  500B               	movf	??_CompararTempe^0,w,c
  4579  001432  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4580  001434  500C               	movf	(??_CompararTempe+1)^0,w,c
  4581  001436  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4582  001438  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4583  00143C  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4584  001440  50DF               	movf	indf2,w,c
  4585  001442  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4586  001444  6A10               	clrf	(??_CompararTempe+5)^0,c
  4587  001446  500D               	movf	(??_CompararTempe+2)^0,w,c
  4588  001448  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4589  00144A  5010               	movf	(??_CompararTempe+5)^0,w,c
  4590  00144C  0A80               	xorlw	128
  4591  00144E  6E11               	movwf	(??_CompararTempe+6)^0,c
  4592  001450  500E               	movf	(??_CompararTempe+3)^0,w,c
  4593  001452  0A80               	xorlw	128
  4594  001454  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4595  001456  A0D8               	btfss	status,0,c
  4596  001458  EF30  F00A         	goto	u2051
  4597  00145C  EF32  F00A         	goto	u2050
  4598  001460                     u2051:
  4599  001460  EF4E  F00A         	goto	l2456
  4600  001464                     u2050:
  4601  001464  C003  FFD9         	movff	CompararTempe@TempActual,fsr2l
  4602  001468  C004  FFDA         	movff	CompararTempe@TempActual+1,fsr2h
  4603  00146C  50DF               	movf	indf2,w,c
  4604  00146E  6E0B               	movwf	??_CompararTempe^0,c
  4605  001470  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4606  001472  0E02               	movlw	2
  4607  001474  2407               	addwf	CompararTempe@TempDigitada^0,w,c
  4608  001476  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4609  001478  0E00               	movlw	0
  4610  00147A  2008               	addwfc	(CompararTempe@TempDigitada+1)^0,w,c
  4611  00147C  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4612  00147E  500B               	movf	??_CompararTempe^0,w,c
  4613  001480  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4614  001482  500E               	movf	(??_CompararTempe+3)^0,w,c
  4615  001484  0A80               	xorlw	128
  4616  001486  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4617  001488  500C               	movf	(??_CompararTempe+1)^0,w,c
  4618  00148A  0A80               	xorlw	128
  4619  00148C  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4620  00148E  B0D8               	btfsc	status,0,c
  4621  001490  EF4C  F00A         	goto	u2061
  4622  001494  EF4E  F00A         	goto	u2060
  4623  001498                     u2061:
  4624  001498  EF50  F00A         	goto	l2458
  4625  00149C                     u2060:
  4626  00149C                     l2456:
  4627                           
  4628                           ;Main_Invernadero.c: 121:            TemperaturaAdecuada=0;
  4629  00149C  0E00               	movlw	0
  4630  00149E  6E12               	movwf	CompararTempe@TemperaturaAdecuada^0,c
  4631  0014A0                     l2458:
  4632                           
  4633                           ;Main_Invernadero.c: 123:     if(*HumActual<HumDigitada-2 || *HumActual>HumDigitada+2){
  4634  0014A0  0EFE               	movlw	254
  4635  0014A2  6E0B               	movwf	??_CompararTempe^0,c
  4636  0014A4  0EFF               	movlw	255
  4637  0014A6  6E0C               	movwf	(??_CompararTempe+1)^0,c
  4638  0014A8  C009  F00D         	movff	CompararTempe@HumDigitada,??_CompararTempe+2
  4639  0014AC  C00A  F00E         	movff	CompararTempe@HumDigitada+1,??_CompararTempe+3
  4640  0014B0  500B               	movf	??_CompararTempe^0,w,c
  4641  0014B2  260D               	addwf	(??_CompararTempe+2)^0,f,c
  4642  0014B4  500C               	movf	(??_CompararTempe+1)^0,w,c
  4643  0014B6  220E               	addwfc	(??_CompararTempe+3)^0,f,c
  4644  0014B8  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4645  0014BC  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4646  0014C0  50DF               	movf	indf2,w,c
  4647  0014C2  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4648  0014C4  6A10               	clrf	(??_CompararTempe+5)^0,c
  4649  0014C6  500D               	movf	(??_CompararTempe+2)^0,w,c
  4650  0014C8  5C0F               	subwf	(??_CompararTempe+4)^0,w,c
  4651  0014CA  5010               	movf	(??_CompararTempe+5)^0,w,c
  4652  0014CC  0A80               	xorlw	128
  4653  0014CE  6E11               	movwf	(??_CompararTempe+6)^0,c
  4654  0014D0  500E               	movf	(??_CompararTempe+3)^0,w,c
  4655  0014D2  0A80               	xorlw	128
  4656  0014D4  5811               	subwfb	(??_CompararTempe+6)^0,w,c
  4657  0014D6  A0D8               	btfss	status,0,c
  4658  0014D8  EF70  F00A         	goto	u2071
  4659  0014DC  EF72  F00A         	goto	u2070
  4660  0014E0                     u2071:
  4661  0014E0  EF8E  F00A         	goto	l2462
  4662  0014E4                     u2070:
  4663  0014E4  C005  FFD9         	movff	CompararTempe@HumActual,fsr2l
  4664  0014E8  C006  FFDA         	movff	CompararTempe@HumActual+1,fsr2h
  4665  0014EC  50DF               	movf	indf2,w,c
  4666  0014EE  6E0B               	movwf	??_CompararTempe^0,c
  4667  0014F0  6A0C               	clrf	(??_CompararTempe+1)^0,c
  4668  0014F2  0E02               	movlw	2
  4669  0014F4  2409               	addwf	CompararTempe@HumDigitada^0,w,c
  4670  0014F6  6E0D               	movwf	(??_CompararTempe+2)^0,c
  4671  0014F8  0E00               	movlw	0
  4672  0014FA  200A               	addwfc	(CompararTempe@HumDigitada+1)^0,w,c
  4673  0014FC  6E0E               	movwf	(??_CompararTempe+3)^0,c
  4674  0014FE  500B               	movf	??_CompararTempe^0,w,c
  4675  001500  5C0D               	subwf	(??_CompararTempe+2)^0,w,c
  4676  001502  500E               	movf	(??_CompararTempe+3)^0,w,c
  4677  001504  0A80               	xorlw	128
  4678  001506  6E0F               	movwf	(??_CompararTempe+4)^0,c
  4679  001508  500C               	movf	(??_CompararTempe+1)^0,w,c
  4680  00150A  0A80               	xorlw	128
  4681  00150C  580F               	subwfb	(??_CompararTempe+4)^0,w,c
  4682  00150E  B0D8               	btfsc	status,0,c
  4683  001510  EF8C  F00A         	goto	u2081
  4684  001514  EF8E  F00A         	goto	u2080
  4685  001518                     u2081:
  4686  001518  EF90  F00A         	goto	l2464
  4687  00151C                     u2080:
  4688  00151C                     l2462:
  4689                           
  4690                           ;Main_Invernadero.c: 124:         HumedadAdecuada=0;
  4691  00151C  0E00               	movlw	0
  4692  00151E  6E13               	movwf	CompararTempe@HumedadAdecuada^0,c
  4693  001520                     l2464:
  4694                           
  4695                           ;Main_Invernadero.c: 127:    PrenderLed(TemperaturaAdecuada,HumedadAdecuada);
  4696  001520  C013  F001         	movff	CompararTempe@HumedadAdecuada,PrenderLed@HumedadAdecuada
  4697  001524  5012               	movf	CompararTempe@TemperaturaAdecuada^0,w,c
  4698  001526  EC66  F00C         	call	_PrenderLed
  4699  00152A  0012               	return		;funcret
  4700  00152C                     __end_of_CompararTempe:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _PrenderLed *****************
  4704 ;; Defined at:
  4705 ;;		line 91 in file "Main_Invernadero.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  TemperaturaA    1    wreg     _Bool 
  4708 ;;  HumedadAdecu    1    0[COMRAM] _Bool 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  TemperaturaA    1    1[COMRAM] _Bool 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4720 ;;      Params:         1       0       0       0       0       0       0       0       0
  4721 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4723 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4724 ;;Total ram usage:        2 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 1
  4727 ;; This function calls:
  4728 ;;		_LedsIniciar
  4729 ;; This function is called by:
  4730 ;;		_CompararTempe
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text29
  4735  0018CC                     __ptext29:
  4736                           	callstack 0
  4737  0018CC                     _PrenderLed:
  4738                           	callstack 28
  4739                           
  4740                           ;incstack = 0
  4741                           ;PrenderLed@TemperaturaAdecuada stored from wreg
  4742  0018CC  6E02               	movwf	PrenderLed@TemperaturaAdecuada^0,c
  4743  0018CE                     
  4744                           ;Main_Invernadero.c: 92:     LedsIniciar();
  4745  0018CE  EC60  F00E         	call	_LedsIniciar	;wreg free
  4746  0018D2                     
  4747                           ;Main_Invernadero.c: 93:     if(TemperaturaAdecuada==0 && HumedadAdecuada==0){
  4748  0018D2  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  4749  0018D4  A4D8               	btfss	status,2,c
  4750  0018D6  EF6F  F00C         	goto	u1991
  4751  0018DA  EF71  F00C         	goto	u1990
  4752  0018DE                     u1991:
  4753  0018DE  EF7C  F00C         	goto	l2360
  4754  0018E2                     u1990:
  4755  0018E2  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  4756  0018E4  A4D8               	btfss	status,2,c
  4757  0018E6  EF77  F00C         	goto	u2001
  4758  0018EA  EF79  F00C         	goto	u2000
  4759  0018EE                     u2001:
  4760  0018EE  EF7C  F00C         	goto	l2360
  4761  0018F2                     u2000:
  4762  0018F2                     
  4763                           ;Main_Invernadero.c: 94:        LATE0=1;
  4764  0018F2  808D               	bsf	3981,0,c	;volatile
  4765                           
  4766                           ;Main_Invernadero.c: 95:     }else if(TemperaturaAdecuada==0 || HumedadAdecuada==0){
  4767  0018F4  EF90  F00C         	goto	l353
  4768  0018F8                     l2360:
  4769  0018F8  5002               	movf	PrenderLed@TemperaturaAdecuada^0,w,c
  4770  0018FA  B4D8               	btfsc	status,2,c
  4771  0018FC  EF82  F00C         	goto	u2011
  4772  001900  EF84  F00C         	goto	u2010
  4773  001904                     u2011:
  4774  001904  EF8C  F00C         	goto	l351
  4775  001908                     u2010:
  4776  001908  5001               	movf	PrenderLed@HumedadAdecuada^0,w,c
  4777  00190A  A4D8               	btfss	status,2,c
  4778  00190C  EF8A  F00C         	goto	u2021
  4779  001910  EF8C  F00C         	goto	u2020
  4780  001914                     u2021:
  4781  001914  EF8F  F00C         	goto	l349
  4782  001918                     u2020:
  4783  001918                     l351:
  4784                           
  4785                           ;Main_Invernadero.c: 96:         LATE1=1;
  4786  001918  828D               	bsf	3981,1,c	;volatile
  4787                           
  4788                           ;Main_Invernadero.c: 97:     }else{
  4789  00191A  EF90  F00C         	goto	l353
  4790  00191E                     l349:
  4791                           
  4792                           ;Main_Invernadero.c: 98:         LATE2=1;
  4793  00191E  848D               	bsf	3981,2,c	;volatile
  4794  001920                     l353:
  4795  001920  0012               	return		;funcret
  4796  001922                     __end_of_PrenderLed:
  4797                           	callstack 0
  4798                           
  4799 ;; *************** function _LedsIniciar *****************
  4800 ;; Defined at:
  4801 ;;		line 161 in file "Main_Invernadero.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		None
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_main
  4825 ;;		_PrenderLed
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text30
  4830  001CC0                     __ptext30:
  4831                           	callstack 0
  4832  001CC0                     _LedsIniciar:
  4833                           	callstack 30
  4834  001CC0                     
  4835                           ;Main_Invernadero.c: 162:     LATE1=0;
  4836  001CC0  928D               	bcf	3981,1,c	;volatile
  4837                           
  4838                           ;Main_Invernadero.c: 163:     LATE0=0;
  4839  001CC2  908D               	bcf	3981,0,c	;volatile
  4840                           
  4841                           ;Main_Invernadero.c: 164:     LATE2=0;
  4842  001CC4  948D               	bcf	3981,2,c	;volatile
  4843  001CC6  0012               	return		;funcret
  4844  001CC8                     __end_of_LedsIniciar:
  4845                           	callstack 0
  4846                           
  4847                           	psect	rparam
  4848  0000                     
  4849                           	psect	idloc
  4850                           
  4851                           ;Config register IDLOC0 @ 0x200000
  4852                           ;	unspecified, using default values
  4853  200000                     	org	2097152
  4854  200000  FF                 	db	255
  4855                           
  4856                           ;Config register IDLOC1 @ 0x200001
  4857                           ;	unspecified, using default values
  4858  200001                     	org	2097153
  4859  200001  FF                 	db	255
  4860                           
  4861                           ;Config register IDLOC2 @ 0x200002
  4862                           ;	unspecified, using default values
  4863  200002                     	org	2097154
  4864  200002  FF                 	db	255
  4865                           
  4866                           ;Config register IDLOC3 @ 0x200003
  4867                           ;	unspecified, using default values
  4868  200003                     	org	2097155
  4869  200003  FF                 	db	255
  4870                           
  4871                           ;Config register IDLOC4 @ 0x200004
  4872                           ;	unspecified, using default values
  4873  200004                     	org	2097156
  4874  200004  FF                 	db	255
  4875                           
  4876                           ;Config register IDLOC5 @ 0x200005
  4877                           ;	unspecified, using default values
  4878  200005                     	org	2097157
  4879  200005  FF                 	db	255
  4880                           
  4881                           ;Config register IDLOC6 @ 0x200006
  4882                           ;	unspecified, using default values
  4883  200006                     	org	2097158
  4884  200006  FF                 	db	255
  4885                           
  4886                           ;Config register IDLOC7 @ 0x200007
  4887                           ;	unspecified, using default values
  4888  200007                     	org	2097159
  4889  200007  FF                 	db	255
  4890                           
  4891                           	psect	config
  4892                           
  4893                           ;Config register CONFIG1L @ 0x300000
  4894                           ;	PLL Prescaler Selection bits
  4895                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4896                           ;	System Clock Postscaler Selection bits
  4897                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4898                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4899                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4900  300000                     	org	3145728
  4901  300000  00                 	db	0
  4902                           
  4903                           ;Config register CONFIG1H @ 0x300001
  4904                           ;	Oscillator Selection bits
  4905                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4906                           ;	Fail-Safe Clock Monitor Enable bit
  4907                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4908                           ;	Internal/External Oscillator Switchover bit
  4909                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4910  300001                     	org	3145729
  4911  300001  09                 	db	9
  4912                           
  4913                           ;Config register CONFIG2L @ 0x300002
  4914                           ;	Power-up Timer Enable bit
  4915                           ;	PWRT = OFF, PWRT disabled
  4916                           ;	Brown-out Reset Enable bits
  4917                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4918                           ;	Brown-out Reset Voltage bits
  4919                           ;	BORV = 3, Minimum setting 2.05V
  4920                           ;	USB Voltage Regulator Enable bit
  4921                           ;	VREGEN = OFF, USB voltage regulator disabled
  4922  300002                     	org	3145730
  4923  300002  1F                 	db	31
  4924                           
  4925                           ;Config register CONFIG2H @ 0x300003
  4926                           ;	Watchdog Timer Enable bit
  4927                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4928                           ;	Watchdog Timer Postscale Select bits
  4929                           ;	WDTPS = 32768, 1:32768
  4930  300003                     	org	3145731
  4931  300003  1E                 	db	30
  4932                           
  4933                           ; Padding undefined space
  4934  300004                     	org	3145732
  4935  300004  FF                 	db	255
  4936                           
  4937                           ;Config register CONFIG3H @ 0x300005
  4938                           ;	CCP2 MUX bit
  4939                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4940                           ;	PORTB A/D Enable bit
  4941                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4942                           ;	Low-Power Timer 1 Oscillator Enable bit
  4943                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4944                           ;	MCLR Pin Enable bit
  4945                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4946  300005                     	org	3145733
  4947  300005  81                 	db	129
  4948                           
  4949                           ;Config register CONFIG4L @ 0x300006
  4950                           ;	Stack Full/Underflow Reset Enable bit
  4951                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4952                           ;	Single-Supply ICSP Enable bit
  4953                           ;	LVP = OFF, Single-Supply ICSP disabled
  4954                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4955                           ;	ICPRT = OFF, ICPORT disabled
  4956                           ;	Extended Instruction Set Enable bit
  4957                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4958                           ;	Background Debugger Enable bit
  4959                           ;	DEBUG = 0x1, unprogrammed default
  4960  300006                     	org	3145734
  4961  300006  81                 	db	129
  4962                           
  4963                           ; Padding undefined space
  4964  300007                     	org	3145735
  4965  300007  FF                 	db	255
  4966                           
  4967                           ;Config register CONFIG5L @ 0x300008
  4968                           ;	Code Protection bit
  4969                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4970                           ;	Code Protection bit
  4971                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4972                           ;	Code Protection bit
  4973                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4974                           ;	Code Protection bit
  4975                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4976  300008                     	org	3145736
  4977  300008  0F                 	db	15
  4978                           
  4979                           ;Config register CONFIG5H @ 0x300009
  4980                           ;	Boot Block Code Protection bit
  4981                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4982                           ;	Data EEPROM Code Protection bit
  4983                           ;	CPD = OFF, Data EEPROM is not code-protected
  4984  300009                     	org	3145737
  4985  300009  C0                 	db	192
  4986                           
  4987                           ;Config register CONFIG6L @ 0x30000A
  4988                           ;	Write Protection bit
  4989                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4990                           ;	Write Protection bit
  4991                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4992                           ;	Write Protection bit
  4993                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4994                           ;	Write Protection bit
  4995                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4996  30000A                     	org	3145738
  4997  30000A  0F                 	db	15
  4998                           
  4999                           ;Config register CONFIG6H @ 0x30000B
  5000                           ;	Configuration Register Write Protection bit
  5001                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5002                           ;	Boot Block Write Protection bit
  5003                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5004                           ;	Data EEPROM Write Protection bit
  5005                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5006  30000B                     	org	3145739
  5007  30000B  E0                 	db	224
  5008                           
  5009                           ;Config register CONFIG7L @ 0x30000C
  5010                           ;	Table Read Protection bit
  5011                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5012                           ;	Table Read Protection bit
  5013                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5014                           ;	Table Read Protection bit
  5015                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5016                           ;	Table Read Protection bit
  5017                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5018  30000C                     	org	3145740
  5019  30000C  0F                 	db	15
  5020                           
  5021                           ;Config register CONFIG7H @ 0x30000D
  5022                           ;	Boot Block Table Read Protection bit
  5023                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5024  30000D                     	org	3145741
  5025  30000D  40                 	db	64
  5026                           tosu	equ	0xFFF
  5027                           tosh	equ	0xFFE
  5028                           tosl	equ	0xFFD
  5029                           stkptr	equ	0xFFC
  5030                           pclatu	equ	0xFFB
  5031                           pclath	equ	0xFFA
  5032                           pcl	equ	0xFF9
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           indf0	equ	0xFEF
  5040                           postinc0	equ	0xFEE
  5041                           postdec0	equ	0xFED
  5042                           preinc0	equ	0xFEC
  5043                           plusw0	equ	0xFEB
  5044                           fsr0h	equ	0xFEA
  5045                           fsr0l	equ	0xFE9
  5046                           wreg	equ	0xFE8
  5047                           indf1	equ	0xFE7
  5048                           postinc1	equ	0xFE6
  5049                           postdec1	equ	0xFE5
  5050                           preinc1	equ	0xFE4
  5051                           plusw1	equ	0xFE3
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           bsr	equ	0xFE0
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           preinc2	equ	0xFDC
  5059                           plusw2	equ	0xFDB
  5060                           fsr2h	equ	0xFDA
  5061                           fsr2l	equ	0xFD9
  5062                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    0
    Data        32
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     36     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_8(CODE[9]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[8]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@Cadena(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S908$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S908$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ControlAspersor@HumedadActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    DatoSensorTH@Datos	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    PedirDato@vecLlenar	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    PedirDato@Etiqueta	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 

    CompararTempe@HumActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    CompararTempe@TempActual	PTR unsigned char  size(2) Largest target is 2
		 -> main@Datos(BANK0[2]), 

    TemperaturaDigitada@prmTemperatura	PTR unsigned char  size(2) Largest target is 2
		 -> main@Hume(BANK0[2]), main@Tempe(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 14
		 -> main@Cadena(BANK0[10]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _TemperaturaDigitada->___wmul
    _PedirDato->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _DatoSensorTH->_DHT11_ReadData
    _CompararTempe->_PrenderLed

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   12588
                                             93 COMRAM     2     2      0
                                             13 BANK0     23    23      0
                      _CompararTempe
                    _ControlAspersor
                       _DatoSensorTH
                           _LCD_Char
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                        _LedsIniciar
                          _PedirDato
                _TemperaturaDigitada
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    7216
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _TemperaturaDigitada                                  9     7      2     694
                                              6 COMRAM     9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PedirDato                                            9     5      4    1545
                                              9 COMRAM     9     5      4
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (2) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DatoSensorTH                                         7     5      2     284
                                              2 COMRAM     4     2      2
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlAspersor                                     11     7      4     196
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _CompararTempe                                       17     9      8     692
                                              2 COMRAM    17     9      8
                         _PrenderLed
 ---------------------------------------------------------------------------------
 (2) _PrenderLed                                           2     1      1     164
                                              0 COMRAM     2     1      1
                        _LedsIniciar
 ---------------------------------------------------------------------------------
 (1) _LedsIniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompararTempe
     _PrenderLed
       _LedsIniciar
   _ControlAspersor
   _DatoSensorTH
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start
   _LCD_Char
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _LedsIniciar
   _PedirDato
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
     _keyfind
   _TemperaturaDigitada
     ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhlll       2A      0       0      23        0.0%
BITBIGSFRllll       20      0       0      27        0.0%
BITBIGSFRhlh        1D      0       0      21        0.0%
BITBIGSFRhllh       11      0       0      22        0.0%
BITBIGSFRhh          E      0       0      20        0.0%
BITBIGSFRllhl        5      0       0      25        0.0%
BITBIGSFRlhl         4      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      28        0.0%
DATA                 0      0      CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 04 08:48:31 2022

             ?_TemperaturaDigitada 0007                    ??_CompararTempe 000B  
                     ?_LCD_Command 0001                                 l20 1A12  
                               l23 19C2                                 l17 1C02  
                    ??_LedsIniciar 0001                                 l34 1B24  
                               l37 1C58                                 l29 186E  
              ___wmul@multiplicand 0003                        ?_LCD_String 0003  
                              l214 0E0E                                l223 0E96  
                              l233 0F76                                l227 0EDA  
                              l219 0E52                                l261 18CA  
                              l253 1878                                l270 1C12  
                              l351 1918                                l511 1416  
                              l264 1CBE                                l353 1920  
                              l273 1C20                                l258 18A8  
                              l370 1738                                l267 1C04  
                              l276 1C2E                                l356 17AE  
                              l349 191E                                l365 152A  
                              l381 1A60                                l373 1B62  
                              l376 1CC6                                l384 1C7E  
                              l379 1A5E                                l498 12B2  
                              _abs 1AA6                                _pad 15F6  
                              prod 000FF3                                wreg 000FE8  
                      LCD_Char@dat 0002                     PedirDato@tecla 0010  
                             l1100 08D2                               l1102 08DA  
                             l2000 133E                               l1120 0B12  
                             l2010 13C0                               l2002 1352  
                             ?_abs 0013                               l2004 1360  
                             l2012 13C6                               l2020 15F6  
                             l2100 0A10                               l1141 1AE4  
                             l1133 1808                               l2014 13D6  
                             l2006 138E                               l2030 1648  
                             l2022 1606                               l2102 0A2A  
                             l2110 0A8C                               l1134 1810  
                             l1062 1972                               l1127 112A  
                             l2200 1AE8                               l2016 13F6  
                             l2008 13AE                               l2032 165C  
                             l2024 161A                               l2120 0AD2  
                             l2112 0A9E                               l2104 0A48  
                             l1153 15F4                               l1161 1AA4  
                             l2130 19D6                               l2050 1988  
                             l2210 1B12                               l2202 1AE8  
                             l1138 1ADC                               l2042 1AA6  
                             l1170 1BCE                               l2034 1660  
                             l2026 1628                               l2122 0ADA  
                             l2114 0AAE                               l2106 0A62  
                             l2140 19EC                               l2132 19D8  
                             l2060 19AE                               l2052 198A  
                             l2212 1B18                               l2204 1AF8  
                             l2300 0F26                               l2220 0D48  
                             l2044 1AC0                               l1164 1CC8  
                             l2036 168E                               l1092 167E  
                             l2028 1634                               l2116 0AB4  
                             l2124 0AEA                               l2108 0A7C  
                             l2142 19FE                               l2134 19DA  
                             l2214 1C30                               l2062 19B0  
                             l2054 198C                               l2046 1976  
                             l2150 1816                               l2206 1B00  
                             l2230 0D92                               l2222 0D50  
                             l1094 16BA                               l2038 16A2  
                             l2118 0AC6                               l2070 087A  
                             l2320 1870                               l2144 1A00  
                             l2136 19DC                               l2128 19C6  
                             l2216 1C36                               l2064 19B2  
                             l2056 198E                               l2048 1986  
                             l2152 183A                               l2208 1B0A  
                             l2240 0DD8                               l2232 0D96  
                             l2224 0D58                               l2080 08E2  
                             l2072 089A                               l2160 0F9C  
                             l1089 163C                               l2330 189A  
                             l2146 1A02                               l2138 19DE  
                             l2218 1C44                               l2058 199C  
                             l2154 183E                               l2314 0F64  
                             l2306 0F3C                               l2250 0E00  
                             l2242 0DE0                               l2234 0D9E  
                             l2226 0D6A                               l2410 16FC  
                             l2090 0918                               l2082 08F4  
                             l2074 08AA                               l2066 0832  
                             l2170 1008                               l2162 0FAA  
                             l2156 1CC0                               l2332 18A2  
                             l2148 1812                               l2308 0F4E  
                             l2260 0E32                               l2252 0E08  
                             l2244 0DE4                               l2236 0DB0  
                             l2228 0D82                               l2412 1700  
                             l2404 16E0                               l2420 174A  
                             l2092 091E                               l2084 0902  
                             l2076 08AC                               l2068 0852  
                             l2180 10BA                               l2172 1050  
                             l2164 0FBC                               l2350 1C04  
                             l2334 18B6                               l2326 1886  
                             l2342 1CA0                               l2270 0E72  
                             l2262 0E44                               l2254 0E24  
                             l2246 0DEA                               l2238 0DC8  
                             l2414 171C                               l2406 16E6  
                             l2422 1762                               l2094 09A0  
                             l2086 0908                               l2078 08C6  
                             l2182 10CE                               l2166 0FC0  
                             l2158 0F78                               l2360 18F8  
                             l2352 18CE                               l2336 18B8  
                             l2328 188C                               l2344 1CA4  
                             l2440 1B38                               l2432 1B26  
                             l2280 0EB0                               l2272 0E76  
                             l2264 0E4C                               l2256 0E28  
                             l2248 0DEE                               l2416 1734  
                             l2408 16EC                               l2424 177E  
                             l2096 09A6                               l2088 0910  
                             l2176 1088                               l2168 0FE4  
                             l2192 10F4                               l2362 1908  
                             l2354 18D2                               l2450 1418  
                             l2338 18C8                               l2346 1CB2  
                             l2442 1B3E                               l2434 1B2A  
                             l2282 0EB6                               l2274 0E88  
                             l2266 0E68                               l2258 0E2E  
                             l2290 0EEC                               l2426 179A  
                             l2418 173A                               l2098 09AC  
                             l2194 1118                               l2178 10AC  
                             l2186 10DA                               l2370 17B0  
                             l2530 0B50                               l2522 0B14  
                             l2356 18E2                               l2460 14E4  
                             l2452 1420                               l2348 1CBC  
                             l2444 1B42                               l2436 1B2E  
                             l2380 1BD4                               l2292 0EFE  
                             l2284 0EBA                               l2276 0E90  
                             l2268 0E6C                               l2364 1C5A  
                             l2428 17A6                               l2188 10E8  
                             l2372 17B8                               l2532 0B6E  
                             l2540 0BBC                               l2524 0B46  
                             l2358 18F2                               l2462 151C  
                             l2454 1464                               l2446 1B46  
                             l2438 1B34                               l2390 1BFC  
                             l2382 1BE4                               l2286 0ECC  
                             l2278 0EAC                               l2366 1C76  
                             l1910 153E                               l2374 17C6  
                             l2470 1922                               l2550 0C4E  
                             l2542 0BCC                               l2534 0B82  
                             l2526 0B48                               l2464 1520  
                             l2456 149C                               l2448 1B52  
                             l2384 1BEA                               l2288 0ED4  
                             l2392 16BC                               l1912 1550  
                             l2376 17EC                               l2472 1934  
                             l2560 0CBC                               l2552 0C68  
                             l2544 0BF4                               l2536 0B9A  
                             l2528 0B4C                               l2458 14A0  
                             l2466 1A14                               l2386 1BF0  
                             l2378 1BD0                               l2298 0F14  
                             l2394 16C0                               l1914 155A  
                             l1922 1A62                               l1930 1B9A  
                             l2474 193C                               l2570 0D2A  
                             l2562 0CE8                               l2554 0C7A  
                             l2546 0BFA                               l2538 0BAE  
                             l2468 1A58                               l2388 1BF6  
                             l2396 16D2                               l1940 112C  
                             l1916 1578                               l1908 152C  
                             l1924 1A6E                               l1932 1BA6  
                             l2476 1944                               l2564 0D04  
                             l2556 0C96                               l2548 0C0A  
                             l2398 16D8                               l1950 1170  
                             l1942 1130                               l1918 15AE  
                             l1926 1A80                               l1934 1BAA  
                             l2478 1960                               l2566 0D0A  
                             l2558 0CB0                               l1960 11C6  
                             l1952 1190                               l1944 113E  
                             l1928 1A84                               l1936 1BC2  
                             l2568 0D1E                               l1970 1248  
                             l1962 11DA                               l1954 1194  
                             l1946 115E                               l1980 1292  
                             l1972 124A                               l1964 11E8  
                             l1956 11A0                               l1948 1162  
                             l1974 125C                               l1966 11FA  
                             l1958 11BE                               l1990 12E6  
                             ?_pad 0011                               l1968 1228  
                             l1976 1262                               l1992 12EA  
                             l1984 12B4                               l1978 1272  
                             l1994 12F8                               l1986 12B8  
                             l1996 1318                               l1988 12C6  
                             l1998 1336                               STR_1 0801  
                             STR_2 080F                               STR_3 082E  
                             STR_4 082D                               STR_5 0825  
                             STR_6 082E                               STR_7 082D  
                             STR_8 081C                               u2000 18F2  
                             u2001 18EE                               u2010 1908  
                             u2011 1904                               u2020 1918  
                             u1300 153E                               u2021 1914  
                             u1301 153A                               u1310 1550  
                             u2030 1808                               u1311 154C  
                             u2031 1804                               u2040 171C  
                             u1400 11E8                               u1320 1578  
                             u2041 1718                               u1401 11E4  
                             u1321 1574                               u2050 1464  
                             u1410 1228                               u1330 15AE  
                             u2051 1460                               u1411 1224  
                             u1331 15AA                               u2060 149C  
                             u1420 1272                               u1340 1AA4  
                             u1500 1628                               u2061 1498  
                             u1421 126E                               u1341 1AA0  
                             u1501 1624                               u2070 14E4  
                             u1430 12C6                               u1350 1BC2  
                             u1510 167E                               _LATB 000F8A  
                             u2071 14E0                               u1431 12C2  
                             u1351 1BBE                               u1511 167A  
                             u2080 151C                               u1360 113E  
                             u1440 12F8                               u1520 168E  
                             u1600 0902                               u2320 0B6E  
                             _LATD 000F8C                               u2081 1518  
                             u1361 113A                               u1441 12F4  
                             u1521 168A                               u1601 08FE  
                             u2321 0B6A                               u2090 1A58  
                             u1370 1170                               u1450 1336  
                             u1530 1AC0                               u1610 0A2A  
                             u2330 0BCC                               u2091 1A54  
                             u1371 116C                               u1451 1332  
                             u1531 1ABC                               u1611 0A26  
                             u2331 0BC8                               u1700 185E  
                             u1460 1360                               u1620 0A48  
                             u1540 0862                               u2340 0C0A  
                             u1381 119A                               u1461 135C  
                             u1621 0A44                               u1541 085C  
                             u2341 0C06                               u1710 186E  
                             u1390 11BE                               u1470 138E  
                             u1630 0A62                               u1550 0864  
                             u2407 1994                               u1711 186A  
                             u1391 11BA                               u1471 138A  
                             u1631 0A5E                               u1800 0DC8  
                             u1480 13D6                               u1640 0A7C  
                             u1560 087A                               u1720 0F9C  
                             u2417 19BA                               u1801 0DC4  
                             u1481 13D2                               u1641 0A78  
                             u1561 0876                               u1721 0F98  
                             u1810 0E00                               u1490 1606  
                             u1650 0A8C                               u1570 08AA  
                             u1730 0FE4                               u2427 1C3C  
                             u1707 1854                               u1811 0DFC  
                             u1491 1602                               u1651 0A88  
                             u1571 08A6                               u1731 0FE0  
                             u1900 0F26                               u1820 0E20  
                             u1660 0A9E                               u1580 08C6  
                             u1740 1008                               u2437 1C50  
                             u1901 0F22                               u1821 0E1C  
                             u1661 0A9A                               u1581 08C2  
                             u1741 1004                               u2357 0B8C  
                             u1910 0F4E                               u1830 0E44  
                             u1670 0AAE                               u1590 08F4  
                             u1750 10AC                               u2447 1BDA  
                             u1911 0F4A                               u1831 0E40  
                             u1671 0AAA                               u1591 08F0  
                             u1751 10A8                               u2367 0D34  
                             u1920 1886                               u1760 1AF8  
                             u1840 0E64                               u1680 0AC6  
                             u1921 1882                               u2457 19E4  
                             u1761 1AF4                               u1841 0E60  
                             u2377 1726                               u1681 0AC2  
                             u1930 189A                               u1690 1836  
                             u1850 0E88                               u1770 0D6A  
                             u1931 1896                               u2467 1A0A  
                             u1851 0E84                               u2387 0D88  
                             u1771 0D66                               u1940 18B6  
                             u1860 0EA8                               u1780 0D82  
                             u1941 18B2                               u2477 1CAA  
                             u1861 0EA4                               u2397 0DCE  
                             u1781 0D7E                               u1950 18C8  
                             u1870 0ECC                               u1790 0DB0  
                             u1951 18C4                               u2487 1CB6  
                             u1871 0EC8                               u1791 0DAC  
                             u1960 1C12                               u1880 0EEC  
                             u1961 1C0E                               u2497 1888  
                             u1697 182C                               u1881 0EE8  
                             u1970 1C20                               u1890 0EFE  
                             u1971 1C1C                               u1891 0EFA  
                             u1980 1C2E                               u1981 1C2A  
                             u1990 18E2                               u1991 18DE  
                             _RBPU 007F8F                               abs@a 0013  
                             _dbuf 006B                               _main 0B14  
                             _dtoa 0832                               _prec 0064  
                             _nout 0060                               pad@i 0018  
                             pad@p 0015                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               fsr2l 000FD9  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                   ??_DHT11_ReadData 0001  
                    _LCD_String_xy 1AE6                         PedirDato@i 0011  
            ??_TemperaturaDigitada 0009                       ___param_bank 000000  
                            ??_abs 0015                              ??_pad 0017  
                 __end_of_LCD_Char 19C4                   __end_of_LCD_Init 1C04  
                  __end_of___aodiv 12B4                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 1418  
                            _LATA0 007C48                              _LATC0 007C58  
                            _LATD0 007C60                              _LATD1 007C61  
                            _LATE0 007C68                              _LATE1 007C69  
                            _LATE2 007C6A                       vfpfcnvrt@fmt 0042  
                            _PORTB 000F81                              _PORTD 000F83  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
              __end_of_LedsIniciar 1CC8                              _flags 0066  
                            _fputc 152C                    __end_of_keyfind 0F78  
                            _fputs 1A62                              pad@fp 0011  
                            _width 0062                              _putch 1CC8  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                            tablat 000FF5                              status 000FD8  
                  __end_of_sprintf 1974                     ?_LCD_String_xy 0005  
                  __initialization 1B64                       __end_of_main 0D48  
                     __end_of_dtoa 0B14                             ??_main 005E  
                           ??_dtoa 0026                  __end_of_LCD_Clear 1C5A  
                    __activetblptr 000002                             _ADCON1 000FC1  
                           ?_fputc 0001                             ?_fputs 000A  
                           ?_putch 0001                _DHT11_CheckResponse 1C04  
                 LCD_String_xy@msg 0006                   LCD_String_xy@pos 0005  
                 LCD_String_xy@row 0008                             _OSCCON 000FD3  
                     vfprintf@cfmt 0056                         _PrenderLed 18CC  
                        ??___aodiv 0011                          ??___aomod 0011  
                           ___wmul 1C5A               ?_DHT11_CheckResponse 0001  
                           _keypad 00AF                        _LedsIniciar 1CC0  
                           clear_0 1B8A                             isa$std 000001  
                           pad@buf 0013                             _rowloc 0069  
                           dtoa@fp 001C                             _strlen 1B9A  
                           fputc@c 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
                        ??_keyfind 0001                       _DatoSensorTH 1B26  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
   ControlAspersor@HumedadDigitada 0003                             putch@c 0001  
                 __end_of_vfprintf 1812                          ??_sprintf 005E  
     CompararTempe@HumedadAdecuada 0013                  PedirDato@Etiqueta 000A  
                        ?_LCD_Char 0001                         __accesstop 0060  
          __end_of__initialization 1B90                          ?_LCD_Init 0001  
                  ??_LCD_String_xy 0008                      ___rparam_used 000001  
        TemperaturaDigitada@Decena 000E                     __pcstackCOMRAM 0001  
                     __pidataBANK0 1C80              ??_DHT11_CheckResponse 0001  
                main@TempeAdecuada 00A8          TemperaturaDigitada@Unidad 000A  
                    __end_of_fputc 15F6                      __end_of_fputs 1AA6  
                    __end_of_putch 1CCA                       ??_LCD_String 0005  
                __end_of_PedirDato 173A                            ??_fputc 0005  
                          ??_fputs 000E                            ??_putch 0001  
                       __pbssBANK0 0060                         ??_LCD_Char 0001  
                       ??_LCD_Init 0003                 __end_of_LCD_String 1870  
                      ?_PrenderLed 0001                            ?___wmul 0001  
            __end_of_CompararTempe 152C                            ?_strlen 0001  
                    ??_DHT11_Start 0001        __end_of_TemperaturaDigitada 17B0  
                    LCD_String@msg 0003                            __Hparam 0000  
                          __Lparam 0000                            ___aodiv 112C  
                          ___aomod 12B4                          ?_vfprintf 0050  
                     __psmallconst 0800                            __pcinit 1B64  
                          __ramtop 0800                   main@HumeAdecuada 00AA  
    PrenderLed@TemperaturaAdecuada 0002                            __ptext0 0B14  
                          __ptext1 1922                            __ptext2 17B0  
                          __ptext3 0F78                            __ptext4 0832  
                          __ptext5 15F6                            __ptext6 1B9A  
                          __ptext7 1A62                            __ptext8 152C  
                          __ptext9 1CC8                            _col_loc 006A  
                          _keyfind 0D48                          _LCD_Clear 1C30  
                          _sprintf 1922               end_of_initialization 1B90  
                          fputc@fp 0003                     LCD_Command@cmd 0002  
                    __Lmediumconst 0000                            fputs@fp 000C  
           CompararTempe@HumActual 0005                  __end_of_vfpfcnvrt 112C  
                ??_ControlAspersor 0005                __end_of_DHT11_Start 1CC0  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 0056  
                     ?_LedsIniciar 0001                            strlen@a 0003  
                          strlen@s 0001                          _PORTAbits 000F80  
                        _PORTDbits 000F83                          _TRISAbits 000F92  
                       main@Cadena 0098                         ?_LCD_Clear 0001  
           DatoSensorTH@T_Integral 0006                         main@indice 00A6  
               DHT11_ReadData@data 0002                      ??_LCD_Command 0001  
                      vfpfcnvrt@ap 0044                        vfpfcnvrt@fp 0040  
                      vfpfcnvrt@ll 0048                     __end_of___wmul 1C80  
     ControlAspersor@HumedadActual 0001                     __end_of_strlen 1BD0  
               keypad_getkey@F3209 00BF                start_initialization 1B64  
                      __end_of_abs 1AE6                        __end_of_pad 16BC  
                        _PedirDato 16BC          CompararTempe@TempDigitada 0007  
                      _DHT11_Start 1CA0        __end_of_DHT11_CheckResponse 1C30  
            __end_of_LCD_String_xy 1B26                        vfprintf@fmt 0052  
                     ??_PrenderLed 0002                           ??___wmul 0005  
                      __pdataBANK0 00AF                           ??_strlen 0003  
              __end_of_LCD_Command 1A14                      __pcstackBANK0 008B  
                 ___aodiv@dividend 0001                        ??_LCD_Clear 0003  
                       ?_PedirDato 000A   CompararTempe@TemperaturaAdecuada 0012  
               PedirDato@vecLlenar 000C                 __end_of_PrenderLed 1922  
                         ?___aodiv 0001                           ?___aomod 0001  
                 ___aodiv@quotient 0013                     _DHT11_ReadData 1870  
                      __smallconst 0800                           ?_keyfind 0001  
            LCD_String_xy@location 0009                           ?_sprintf 0058  
                  _ControlAspersor 1A14                           _LCD_Char 1974  
                         _LCD_Init 1BD0                     ___wmul@product 0005  
                         _LATDbits 000F8C             __end_of_DHT11_ReadData 18CC  
                      _LCD_Command 19C4                          _vfpfcnvrt 0F78  
                        main@Datos 00AD                  ___wmul@multiplier 0001  
                        main@Tempe 00A2                      ?_DatoSensorTH 0003  
                      ??_PedirDato 000E                        _INTCON2bits 000FF1  
                        copy_data0 1B78                           __Hrparam 0000  
                       vfprintf@ap 0054                           __Lrparam 0000  
                       vfprintf@fp 0050                    ?_DHT11_ReadData 0001  
          DatoSensorTH@RH_Integral 0005                         ?_vfpfcnvrt 0040  
                  DHT11_ReadData@i 0001                      _CompararTempe 1418  
                  ___aodiv@divisor 0009                    ___aodiv@counter 0011  
                   ??_DatoSensorTH 0005                         sprintf@fmt 005A  
                DatoSensorTH@Datos 0003            __end_of_ControlAspersor 1A62  
TemperaturaDigitada@prmTemperatura 0007                           _dtoa$990 002E  
                         __ptext10 1AA6                           __ptext11 12B4  
                         __ptext20 1C30                           __ptext12 112C  
                         __ptext21 1BD0                           __ptext13 173A  
                         __ptext30 1CC0                           __ptext22 19C4  
                         __ptext14 1C5A                           __ptext23 1B26  
                         __ptext15 16BC                           __ptext24 1CA0  
                         __ptext16 0D48                           __ptext25 1870  
                         __ptext17 1AE6                           __ptext26 1C04  
                         __ptext18 1812                           __ptext27 1A14  
                         __ptext19 1974                           __ptext28 1418  
                         __ptext29 18CC                       ?_DHT11_Start 0001  
                         _temp_col 0068           CompararTempe@HumDigitada 0009  
                         isa$xinst 000000                           main@Hume 00A4  
                         _vfprintf 17B0                           main@flag 00AC  
                   ?_CompararTempe 0003                         _LCD_String 1812  
                 ___aomod@dividend 0001                          sprintf@ap 008B  
        PrenderLed@HumedadAdecuada 0001                    ___aomod@divisor 0009  
                      ??_vfpfcnvrt 0046                    ___aomod@counter 0011  
                         sprintf@f 008D                           sprintf@s 0058  
                 ?_ControlAspersor 0001       TemperaturaDigitada@Resultado 000C  
              _TemperaturaDigitada 173A                       ___aodiv@sign 0012  
             __end_of_DatoSensorTH 1B64            CompararTempe@TempActual 0003  
                     ___aomod@sign 0012  
